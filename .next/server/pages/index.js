/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./node_modules/@swc/helpers/lib/_async_to_generator.js":
/*!**************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_async_to_generator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fYXN5bmNfdG9fZ2VuZXJhdG9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19hc3luY190b19nZW5lcmF0b3IuanM/MGUzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9hc3luY1RvR2VuZXJhdG9yO1xuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICAgICAgICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgICAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgICAgICB9KTtcbiAgICB9O1xufVxuZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICAgIHRyeSB7XG4gICAgICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICAgICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_async_to_generator.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_extends.js":
/*!***************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_extends.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _extends;\nfunction _extends() {\n    return extends_.apply(this, arguments);\n}\nfunction extends_() {\n    extends_ = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return extends_.apply(this, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qcz8zOThhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2V4dGVuZHM7XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgICByZXR1cm4gZXh0ZW5kc18uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbmZ1bmN0aW9uIGV4dGVuZHNfKCkge1xuICAgIGV4dGVuZHNfID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgZm9yKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gc291cmNlKXtcbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH07XG4gICAgcmV0dXJuIGV4dGVuZHNfLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_extends.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_default.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_default.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _interopRequireDefault;\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0LmpzPzliN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0O1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_default.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_wildcard.js":
/*!********************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_wildcard.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _interopRequireWildcard;\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache();\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n    _getRequireWildcardCache = function() {\n        return cache;\n    };\n    return cache;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmpzPzA1MWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZDtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikge1xuICAgIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgICAgIH07XG4gICAgfVxuICAgIHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSgpO1xuICAgIGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkge1xuICAgICAgICByZXR1cm4gY2FjaGUuZ2V0KG9iaik7XG4gICAgfVxuICAgIHZhciBuZXdPYmogPSB7fTtcbiAgICB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICAgZm9yKHZhciBrZXkgaW4gb2JqKXtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsO1xuICAgICAgICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7XG4gICAgaWYgKGNhY2hlKSB7XG4gICAgICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7XG4gICAgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsO1xuICAgIHZhciBjYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG4gICAgX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBjYWNoZTtcbiAgICB9O1xuICAgIHJldHVybiBjYWNoZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_object_without_properties_loose.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_object_without_properties_loose.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _objectWithoutPropertiesLoose;\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcz80Y2I5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2U7XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gICAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gICAgdmFyIHRhcmdldCA9IHt9O1xuICAgIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgICB2YXIga2V5LCBpO1xuICAgIGZvcihpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspe1xuICAgICAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgICAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\n");

/***/ }),

/***/ "./src/images/logos/logoAmigo.jpeg":
/*!*****************************************!*\
  !*** ./src/images/logos/logoAmigo.jpeg ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/logoAmigo.62be87d4.jpeg\",\"height\":100,\"width\":100,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FlogoAmigo.62be87d4.jpeg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29BbWlnby5qcGVnLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxDQUFDLDJLQUEySyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29BbWlnby5qcGVnPzBkOTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL2xvZ29BbWlnby42MmJlODdkNC5qcGVnXCIsXCJoZWlnaHRcIjoxMDAsXCJ3aWR0aFwiOjEwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsb2dvQW1pZ28uNjJiZTg3ZDQuanBlZyZ3PTgmcT03MFwifTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/images/logos/logoAmigo.jpeg\n");

/***/ }),

/***/ "./src/images/logos/logoApacio.jpeg":
/*!******************************************!*\
  !*** ./src/images/logos/logoApacio.jpeg ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/logoApacio.9c929521.jpeg\",\"height\":100,\"width\":100,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FlogoApacio.9c929521.jpeg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29BcGFjaW8uanBlZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyw2S0FBNksiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2ltYWdlcy9sb2dvcy9sb2dvQXBhY2lvLmpwZWc/OWU2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvbG9nb0FwYWNpby45YzkyOTUyMS5qcGVnXCIsXCJoZWlnaHRcIjoxMDAsXCJ3aWR0aFwiOjEwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsb2dvQXBhY2lvLjljOTI5NTIxLmpwZWcmdz04JnE9NzBcIn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/images/logos/logoApacio.jpeg\n");

/***/ }),

/***/ "./src/images/logos/logoBoxStuff.jpeg":
/*!********************************************!*\
  !*** ./src/images/logos/logoBoxStuff.jpeg ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/logoBoxStuff.26ce78d6.jpeg\",\"height\":100,\"width\":100,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FlogoBoxStuff.26ce78d6.jpeg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29Cb3hTdHVmZi5qcGVnLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxDQUFDLGlMQUFpTCIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29Cb3hTdHVmZi5qcGVnPzQzMjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL2xvZ29Cb3hTdHVmZi4yNmNlNzhkNi5qcGVnXCIsXCJoZWlnaHRcIjoxMDAsXCJ3aWR0aFwiOjEwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsb2dvQm94U3R1ZmYuMjZjZTc4ZDYuanBlZyZ3PTgmcT03MFwifTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/images/logos/logoBoxStuff.jpeg\n");

/***/ }),

/***/ "./src/images/logos/logoEMF.jpeg":
/*!***************************************!*\
  !*** ./src/images/logos/logoEMF.jpeg ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/logoEMF.7a01caaf.jpeg\",\"height\":100,\"width\":100,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FlogoEMF.7a01caaf.jpeg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29FTUYuanBlZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyx1S0FBdUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2ltYWdlcy9sb2dvcy9sb2dvRU1GLmpwZWc/MjlmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvbG9nb0VNRi43YTAxY2FhZi5qcGVnXCIsXCJoZWlnaHRcIjoxMDAsXCJ3aWR0aFwiOjEwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsb2dvRU1GLjdhMDFjYWFmLmpwZWcmdz04JnE9NzBcIn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/images/logos/logoEMF.jpeg\n");

/***/ }),

/***/ "./src/images/logos/logoInTouch.jpeg":
/*!*******************************************!*\
  !*** ./src/images/logos/logoInTouch.jpeg ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/logoInTouch.8628c649.jpeg\",\"height\":100,\"width\":100,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FlogoInTouch.8628c649.jpeg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29JblRvdWNoLmpwZWcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLENBQUMsK0tBQStLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL3NyYy9pbWFnZXMvbG9nb3MvbG9nb0luVG91Y2guanBlZz9hMDZlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9sb2dvSW5Ub3VjaC44NjI4YzY0OS5qcGVnXCIsXCJoZWlnaHRcIjoxMDAsXCJ3aWR0aFwiOjEwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsb2dvSW5Ub3VjaC44NjI4YzY0OS5qcGVnJnc9OCZxPTcwXCJ9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/images/logos/logoInTouch.jpeg\n");

/***/ }),

/***/ "./src/images/logos/logoOC.jpeg":
/*!**************************************!*\
  !*** ./src/images/logos/logoOC.jpeg ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/logoOC.d64542e5.jpeg\",\"height\":100,\"width\":100,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FlogoOC.d64542e5.jpeg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29PQy5qcGVnLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxDQUFDLHFLQUFxSyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29PQy5qcGVnP2YzOTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL2xvZ29PQy5kNjQ1NDJlNS5qcGVnXCIsXCJoZWlnaHRcIjoxMDAsXCJ3aWR0aFwiOjEwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsb2dvT0MuZDY0NTQyZTUuanBlZyZ3PTgmcT03MFwifTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/images/logos/logoOC.jpeg\n");

/***/ }),

/***/ "./src/images/logos/logoW365.jpeg":
/*!****************************************!*\
  !*** ./src/images/logos/logoW365.jpeg ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/logoW365.fd9a4115.jpeg\",\"height\":100,\"width\":100,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FlogoW365.fd9a4115.jpeg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL2xvZ29zL2xvZ29XMzY1LmpwZWcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLENBQUMseUtBQXlLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL3NyYy9pbWFnZXMvbG9nb3MvbG9nb1czNjUuanBlZz9lNzNlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9sb2dvVzM2NS5mZDlhNDExNS5qcGVnXCIsXCJoZWlnaHRcIjoxMDAsXCJ3aWR0aFwiOjEwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsb2dvVzM2NS5mZDlhNDExNS5qcGVnJnc9OCZxPTcwXCJ9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/images/logos/logoW365.jpeg\n");

/***/ }),

/***/ "./src/images/photos/image-1.jpg":
/*!***************************************!*\
  !*** ./src/images/photos/image-1.jpg ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/image-1.38180685.jpg\",\"height\":1200,\"width\":1600,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fimage-1.38180685.jpg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL3Bob3Rvcy9pbWFnZS0xLmpwZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyx1S0FBdUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2ltYWdlcy9waG90b3MvaW1hZ2UtMS5qcGc/OTdhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvaW1hZ2UtMS4zODE4MDY4NS5qcGdcIixcImhlaWdodFwiOjEyMDAsXCJ3aWR0aFwiOjE2MDAsXCJibHVyRGF0YVVSTFwiOlwiL19uZXh0L2ltYWdlP3VybD0lMkZfbmV4dCUyRnN0YXRpYyUyRm1lZGlhJTJGaW1hZ2UtMS4zODE4MDY4NS5qcGcmdz04JnE9NzBcIn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/images/photos/image-1.jpg\n");

/***/ }),

/***/ "./src/images/photos/image-2.jpg":
/*!***************************************!*\
  !*** ./src/images/photos/image-2.jpg ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/image-2.6c317d18.jpg\",\"height\":1024,\"width\":768,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fimage-2.6c317d18.jpg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL3Bob3Rvcy9pbWFnZS0yLmpwZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyxzS0FBc0siLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2ltYWdlcy9waG90b3MvaW1hZ2UtMi5qcGc/ODBjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvaW1hZ2UtMi42YzMxN2QxOC5qcGdcIixcImhlaWdodFwiOjEwMjQsXCJ3aWR0aFwiOjc2OCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZpbWFnZS0yLjZjMzE3ZDE4LmpwZyZ3PTgmcT03MFwifTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/images/photos/image-2.jpg\n");

/***/ }),

/***/ "./src/images/photos/image-3.jpg":
/*!***************************************!*\
  !*** ./src/images/photos/image-3.jpg ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/image-3.166b8675.jpg\",\"height\":823,\"width\":823,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fimage-3.166b8675.jpg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL3Bob3Rvcy9pbWFnZS0zLmpwZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyxxS0FBcUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2ltYWdlcy9waG90b3MvaW1hZ2UtMy5qcGc/N2I5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvaW1hZ2UtMy4xNjZiODY3NS5qcGdcIixcImhlaWdodFwiOjgyMyxcIndpZHRoXCI6ODIzLFwiYmx1ckRhdGFVUkxcIjpcIi9fbmV4dC9pbWFnZT91cmw9JTJGX25leHQlMkZzdGF0aWMlMkZtZWRpYSUyRmltYWdlLTMuMTY2Yjg2NzUuanBnJnc9OCZxPTcwXCJ9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/images/photos/image-3.jpg\n");

/***/ }),

/***/ "./src/images/photos/image-4.jpg":
/*!***************************************!*\
  !*** ./src/images/photos/image-4.jpg ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/image-4.0db25937.jpg\",\"height\":4032,\"width\":3024,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fimage-4.0db25937.jpg&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL3Bob3Rvcy9pbWFnZS00LmpwZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyx1S0FBdUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2ltYWdlcy9waG90b3MvaW1hZ2UtNC5qcGc/MjdlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvaW1hZ2UtNC4wZGIyNTkzNy5qcGdcIixcImhlaWdodFwiOjQwMzIsXCJ3aWR0aFwiOjMwMjQsXCJibHVyRGF0YVVSTFwiOlwiL19uZXh0L2ltYWdlP3VybD0lMkZfbmV4dCUyRnN0YXRpYyUyRm1lZGlhJTJGaW1hZ2UtNC4wZGIyNTkzNy5qcGcmdz04JnE9NzBcIn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/images/photos/image-4.jpg\n");

/***/ }),

/***/ "./src/images/photos/image-5.png":
/*!***************************************!*\
  !*** ./src/images/photos/image-5.png ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/image-5.9ef483f7.png\",\"height\":2062,\"width\":2038,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fimage-5.9ef483f7.png&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL3Bob3Rvcy9pbWFnZS01LnBuZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyx1S0FBdUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2ltYWdlcy9waG90b3MvaW1hZ2UtNS5wbmc/ZmNjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvaW1hZ2UtNS45ZWY0ODNmNy5wbmdcIixcImhlaWdodFwiOjIwNjIsXCJ3aWR0aFwiOjIwMzgsXCJibHVyRGF0YVVSTFwiOlwiL19uZXh0L2ltYWdlP3VybD0lMkZfbmV4dCUyRnN0YXRpYyUyRm1lZGlhJTJGaW1hZ2UtNS45ZWY0ODNmNy5wbmcmdz04JnE9NzBcIn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/images/photos/image-5.png\n");

/***/ }),

/***/ "./node_modules/next/dist/client/add-base-path.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/add-base-path.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.addBasePath = addBasePath;\nvar _addPathPrefix = __webpack_require__(/*! ../shared/lib/router/utils/add-path-prefix */ \"../shared/lib/router/utils/add-path-prefix\");\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst basePath =  false || \"\";\nfunction addBasePath(path, required) {\n    if (false) {}\n    return (0, _normalizeTrailingSlash).normalizePathTrailingSlash((0, _addPathPrefix).addPathPrefix(path, basePath));\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csS0FBSyxFQUFFLElBQUk7Q0FDZCxFQUFDLENBQUM7QUFDSEQsbUJBQW1CLEdBQUdFLFdBQVcsQ0FBQztBQUNsQyxJQUFJQyxjQUFjLEdBQUdDLG1CQUFPLENBQUMsOEZBQTRDLENBQUM7QUFDMUUsSUFBSUMsdUJBQXVCLEdBQUdELG1CQUFPLENBQUMsK0ZBQTRCLENBQUM7QUFDbkUsTUFBTUUsUUFBUSxHQUFHQyxNQUFrQyxJQUFJLEVBQUU7QUFDekQsU0FBU0wsV0FBVyxDQUFDUSxJQUFJLEVBQUVDLFFBQVEsRUFBRTtJQUNqQyxJQUFJSixLQUEwQyxFQUFFLEVBSS9DO0lBQ0QsT0FBTyxDQUFDLENBQUMsRUFBRUYsdUJBQXVCLENBQUMsQ0FBQ1EsMEJBQTBCLENBQUMsQ0FBQyxDQUFDLEVBQUVWLGNBQWMsQ0FBQyxDQUFDVyxhQUFhLENBQUNKLElBQUksRUFBRUosUUFBUSxDQUFDLENBQUMsQ0FBQztDQUNySDtBQUVELElBQUksQ0FBQyxPQUFPTixPQUFPLENBQUNlLE9BQU8sS0FBSyxVQUFVLElBQUssT0FBT2YsT0FBTyxDQUFDZSxPQUFPLEtBQUssUUFBUSxJQUFJZixPQUFPLENBQUNlLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPZixPQUFPLENBQUNlLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtJQUNyS2xCLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLENBQUNlLE9BQU8sRUFBRSxZQUFZLEVBQUU7UUFBRWQsS0FBSyxFQUFFLElBQUk7S0FBRSxDQUFDLENBQUM7SUFDdEVILE1BQU0sQ0FBQ21CLE1BQU0sQ0FBQ2pCLE9BQU8sQ0FBQ2UsT0FBTyxFQUFFZixPQUFPLENBQUMsQ0FBQztJQUN4Q2tCLE1BQU0sQ0FBQ2xCLE9BQU8sR0FBR0EsT0FBTyxDQUFDZSxPQUFPLENBQUM7Q0FDbEMsQ0FFRCx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvYWRkLWJhc2UtcGF0aC5qcz82MTMxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5hZGRCYXNlUGF0aCA9IGFkZEJhc2VQYXRoO1xudmFyIF9hZGRQYXRoUHJlZml4ID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeFwiKTtcbnZhciBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCA9IHJlcXVpcmUoXCIuL25vcm1hbGl6ZS10cmFpbGluZy1zbGFzaFwiKTtcbmNvbnN0IGJhc2VQYXRoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCAnJztcbmZ1bmN0aW9uIGFkZEJhc2VQYXRoKHBhdGgsIHJlcXVpcmVkKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9NQU5VQUxfQ0xJRU5UX0JBU0VfUEFUSCkge1xuICAgICAgICBpZiAoIXJlcXVpcmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKDAsIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoKS5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCgoMCwgX2FkZFBhdGhQcmVmaXgpLmFkZFBhdGhQcmVmaXgocGF0aCwgYmFzZVBhdGgpKTtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWJhc2UtcGF0aC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJhZGRCYXNlUGF0aCIsIl9hZGRQYXRoUHJlZml4IiwicmVxdWlyZSIsIl9ub3JtYWxpemVUcmFpbGluZ1NsYXNoIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJyZXF1aXJlZCIsIl9fTkVYVF9NQU5VQUxfQ0xJRU5UX0JBU0VfUEFUSCIsIm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoIiwiYWRkUGF0aFByZWZpeCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/add-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/add-locale.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/client/add-locale.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.addLocale = void 0;\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst addLocale = (path, ...args)=>{\n    if (false) {}\n    return path;\n};\nexports.addLocale = addLocale;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtbG9jYWxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csS0FBSyxFQUFFLElBQUk7Q0FDZCxFQUFDLENBQUM7QUFDSEQsaUJBQWlCLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDM0IsSUFBSUcsdUJBQXVCLEdBQUdDLG1CQUFPLENBQUMsK0ZBQTRCLENBQUM7QUFDbkUsTUFBTUYsU0FBUyxHQUFHLENBQUNHLElBQUksRUFBS0MsR0FBQUEsSUFBSSxHQUFHO0lBQy9CLElBQUlDLEtBQStCLEVBQUUsRUFFcEM7SUFDRCxPQUFPRixJQUFJLENBQUM7Q0FDZjtBQUNETCxpQkFBaUIsR0FBR0UsU0FBUyxDQUFDO0FBRTlCLElBQUksQ0FBQyxPQUFPRixPQUFPLENBQUNXLE9BQU8sS0FBSyxVQUFVLElBQUssT0FBT1gsT0FBTyxDQUFDVyxPQUFPLEtBQUssUUFBUSxJQUFJWCxPQUFPLENBQUNXLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPWCxPQUFPLENBQUNXLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtJQUNyS2QsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sQ0FBQ1csT0FBTyxFQUFFLFlBQVksRUFBRTtRQUFFVixLQUFLLEVBQUUsSUFBSTtLQUFFLENBQUMsQ0FBQztJQUN0RUgsTUFBTSxDQUFDZSxNQUFNLENBQUNiLE9BQU8sQ0FBQ1csT0FBTyxFQUFFWCxPQUFPLENBQUMsQ0FBQztJQUN4Q2MsTUFBTSxDQUFDZCxPQUFPLEdBQUdBLE9BQU8sQ0FBQ1csT0FBTyxDQUFDO0NBQ2xDLENBRUQsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FkZC1sb2NhbGUuanM/ZTJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuYWRkTG9jYWxlID0gdm9pZCAwO1xudmFyIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoID0gcmVxdWlyZShcIi4vbm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoXCIpO1xuY29uc3QgYWRkTG9jYWxlID0gKHBhdGgsIC4uLmFyZ3MpPT57XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgcmV0dXJuICgwLCBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCkubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2gocmVxdWlyZSgnLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZScpLmFkZExvY2FsZShwYXRoLCAuLi5hcmdzKSk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufTtcbmV4cG9ydHMuYWRkTG9jYWxlID0gYWRkTG9jYWxlO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImFkZExvY2FsZSIsIl9ub3JtYWxpemVUcmFpbGluZ1NsYXNoIiwicmVxdWlyZSIsInBhdGgiLCJhcmdzIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/add-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/detect-domain-locale.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/client/detect-domain-locale.js ***!
  \***************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.detectDomainLocale = void 0;\nconst detectDomainLocale = (...args)=>{\n    if (false) {}\n};\nexports.detectDomainLocale = detectDomainLocale;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLEtBQUssRUFBRSxJQUFJO0NBQ2QsRUFBQyxDQUFDO0FBQ0hELDBCQUEwQixHQUFHLEtBQUssQ0FBQyxDQUFDO0FBQ3BDLE1BQU1FLGtCQUFrQixHQUFHLENBQUlDLEdBQUFBLElBQUksR0FBRztJQUNsQyxJQUFJQyxLQUErQixFQUFFLEVBRXBDO0NBQ0o7QUFDREosMEJBQTBCLEdBQUdFLGtCQUFrQixDQUFDO0FBRWhELElBQUksQ0FBQyxPQUFPRixPQUFPLENBQUNRLE9BQU8sS0FBSyxVQUFVLElBQUssT0FBT1IsT0FBTyxDQUFDUSxPQUFPLEtBQUssUUFBUSxJQUFJUixPQUFPLENBQUNRLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPUixPQUFPLENBQUNRLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtJQUNyS1gsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sQ0FBQ1EsT0FBTyxFQUFFLFlBQVksRUFBRTtRQUFFUCxLQUFLLEVBQUUsSUFBSTtLQUFFLENBQUMsQ0FBQztJQUN0RUgsTUFBTSxDQUFDWSxNQUFNLENBQUNWLE9BQU8sQ0FBQ1EsT0FBTyxFQUFFUixPQUFPLENBQUMsQ0FBQztJQUN4Q1csTUFBTSxDQUFDWCxPQUFPLEdBQUdBLE9BQU8sQ0FBQ1EsT0FBTyxDQUFDO0NBQ2xDLENBRUQsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2RldGVjdC1kb21haW4tbG9jYWxlLmpzPzAzYjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRldGVjdERvbWFpbkxvY2FsZSA9IHZvaWQgMDtcbmNvbnN0IGRldGVjdERvbWFpbkxvY2FsZSA9ICguLi5hcmdzKT0+e1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKCcuLi9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUnKS5kZXRlY3REb21haW5Mb2NhbGUoLi4uYXJncyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZGV0ZWN0RG9tYWluTG9jYWxlID0gZGV0ZWN0RG9tYWluTG9jYWxlO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJhcmdzIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJyZXF1aXJlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/detect-domain-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/future/image.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/future/image.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = Image;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _head = _interop_require_default(__webpack_require__(/*! ../../shared/lib/head */ \"../shared/lib/head\"));\nvar _imageConfig = __webpack_require__(/*! ../../shared/lib/image-config */ \"../../shared/lib/image-config\");\nvar _imageConfigContext = __webpack_require__(/*! ../../shared/lib/image-config-context */ \"../../shared/lib/image-config-context\");\nvar _utils = __webpack_require__(/*! ../../shared/lib/utils */ \"../../shared/lib/utils\");\nfunction Image(_param) {\n    var { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoadingComplete , placeholder =\"empty\" , blurDataURL  } = _param, all = _object_without_properties_loose(_param, [\n        \"src\",\n        \"sizes\",\n        \"unoptimized\",\n        \"priority\",\n        \"loading\",\n        \"className\",\n        \"quality\",\n        \"width\",\n        \"height\",\n        \"fill\",\n        \"style\",\n        \"onLoadingComplete\",\n        \"placeholder\",\n        \"blurDataURL\"\n    ]);\n    if (!experimentalFuture && \"development\" !== \"test\") {\n        throw new Error(`The \"next/future/image\" component is experimental and may be subject to breaking changes. To enable this experiment, please include \\`experimental: { images: { allowFutureImage: true } }\\` in your next.config.js file.`);\n    }\n    const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n    const config = (0, _react).useMemo(()=>{\n        const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return _extends({}, c, {\n            allSizes,\n            deviceSizes\n        });\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = defaultLoader;\n    if (\"loader\" in rest) {\n        if (rest.loader) {\n            const customImageLoader = rest.loader;\n            var _tmp;\n            _tmp = (obj)=>{\n                const { config: _  } = obj, opts = _object_without_properties_loose(obj, [\n                    \"config\"\n                ]);\n                // The config object is internal only so we must\n                // not pass it to the user-defined loader()\n                return customImageLoader(opts);\n            }, loader = _tmp, _tmp;\n        }\n        // Remove property so it's not spread on <img>\n        delete rest.loader;\n    }\n    let staticSrc = \"\";\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(staticImageData)}`);\n        }\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        height = height || staticImageData.height;\n        width = width || staticImageData.width;\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(staticImageData)}`);\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (experimentalUnoptimized) {\n        unoptimized = true;\n    }\n    const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n    const [showAltText, setShowAltText] = (0, _react).useState(false);\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error(`Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`);\n                }\n                if (height) {\n                    throw new Error(`Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`);\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`);\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"width\" property.`);\n                } else if (isNaN(widthInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`);\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"height\" property.`);\n                } else if (isNaN(heightInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`);\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error(`Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(String).join(\",\")}.`);\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error(`Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`);\n        }\n        if (\"objectFit\" in rest) {\n            throw new Error(`Image with src \"${src}\" has unknown prop \"objectFit\". This style should be specified using the \"style\" property.`);\n        }\n        if (\"objectPosition\" in rest) {\n            throw new Error(`Image with src \"${src}\" has unknown prop \"objectPosition\". This style should be specified using the \"style\" property.`);\n        }\n        if (placeholder === \"blur\") {\n            if ((widthInt || 0) * (heightInt || 0) < 1600) {\n                (0, _utils).warnOnce(`Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder='blur'\" property to improve performance.`);\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    \"jpeg\",\n                    \"png\",\n                    \"webp\",\n                    \"avif\"\n                ] // should match next-image-loader\n                ;\n                throw new Error(`Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n          Possible solutions:\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n            - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\",\")}\n            - Remove the \"placeholder\" property, effectively no blur effect\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`);\n            }\n        }\n        if (\"ref\" in rest) {\n            (0, _utils).warnOnce(`Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.`);\n        }\n        if (!unoptimized && loader !== defaultLoader) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _utils).warnOnce(`Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`);\n            }\n        }\n        if (false) {}\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n    } : {}, showAltText || placeholder === \"blur\" ? {} : {\n        color: \"transparent\"\n    }, style);\n    const svgBlurPlaceholder = `url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http%3A//www.w3.org/2000/svg' viewBox='0 0 ${widthInt} ${heightInt}'%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='50'/%3E%3C/filter%3E%3Cimage filter='url(%23b)' x='0' y='0' height='100%25' width='100%25' href='${blurDataURL}'/%3E%3C/svg%3E\")`;\n    const blurStyle = placeholder === \"blur\" && !blurComplete ? _extends({\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"0% 0%\"\n    }, (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"data:image\")) ? {\n        backgroundImage: svgBlurPlaceholder\n    } : {\n        filter: \"blur(20px)\",\n        backgroundImage: `url(\"${blurDataURL}\")`\n    }) : {};\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (true) {\n        if (false) {}\n    }\n    let imageSrcSetPropName = \"imagesrcset\";\n    let imageSizesPropName = \"imagesizes\";\n    if (true) {\n        imageSrcSetPropName = \"imageSrcSet\";\n        imageSizesPropName = \"imageSizes\";\n    }\n    const linkProps = {\n        // Note: imagesrcset and imagesizes are not in the link element type with react 17.\n        [imageSrcSetPropName]: imgAttributes.srcSet,\n        [imageSizesPropName]: imgAttributes.sizes\n    };\n    const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n    (0, _react).useEffect(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = _extends({\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText,\n        noscriptSizes: sizes\n    }, rest);\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs)), priority ? // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", Object.assign({\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src\n    }, linkProps))) : null);\n}\nconst { experimentalFuture =false , experimentalRemotePatterns =[] , experimentalUnoptimized ,  } = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"experimentalFuture\":true,\"domains\":[]} || {};\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"experimentalFuture\":true,\"domains\":[]};\nconst allImgs = new Map();\nlet perfObserver;\nif (true) {\n    global.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths({ deviceSizes , allSizes  }, width, sizes) {\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1])), \n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs({ config , src , unoptimized , width , quality , sizes , loader  }) {\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>`${loader({\n                config,\n                src,\n                quality,\n                width: w\n            })} ${kind === \"w\" ? w : i + 1}${kind}`).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === \"number\" || typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadingCompleteRef, setBlurComplete) {\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentNode) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === \"blur\") {\n            setBlurComplete(true);\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            const { naturalWidth , naturalHeight  } = img;\n            // Pass back read-only primitive values but not the\n            // underlying DOM element because it could be misused.\n            onLoadingCompleteRef.current({\n                naturalWidth,\n                naturalHeight\n            });\n        }\n        if (true) {\n            if (img.getAttribute(\"data-nimg\") === \"future-fill\") {\n                if (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\") {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/future/image#sizes`);\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid.map(String).join(\",\")}.`);\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`);\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _utils).warnOnce(`Image with src \"${src}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`);\n            }\n        }\n    });\n}\nconst ImageElement = (_param)=>{\n    var { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError , noscriptSizes  } = _param, rest = _object_without_properties_loose(_param, [\n        \"imgAttributes\",\n        \"heightInt\",\n        \"widthInt\",\n        \"qualityInt\",\n        \"className\",\n        \"imgStyle\",\n        \"blurStyle\",\n        \"isLazy\",\n        \"fill\",\n        \"placeholder\",\n        \"loading\",\n        \"srcString\",\n        \"config\",\n        \"unoptimized\",\n        \"loader\",\n        \"onLoadingCompleteRef\",\n        \"setBlurComplete\",\n        \"setShowAltText\",\n        \"onLoad\",\n        \"onError\",\n        \"noscriptSizes\"\n    ]);\n    loading = isLazy ? \"lazy\" : loading;\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, imgAttributes, {\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": `future${fill ? \"-fill\" : \"\"}`,\n        className: className,\n        // @ts-ignore - TODO: upgrade to `@types/react@17`\n        loading: loading,\n        style: _extends({}, imgStyle, blurStyle),\n        ref: (0, _react).useCallback((img)=>{\n            if (true) {\n                if (img && !srcString) {\n                    console.error(`Image is missing required \"src\" property:`, img);\n                }\n            }\n            if (img == null ? void 0 : img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadingCompleteRef, setBlurComplete);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadingCompleteRef,\n            setBlurComplete\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadingCompleteRef, setBlurComplete);\n            if (onLoad) {\n                onLoad(event);\n            }\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === \"blur\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    })), placeholder === \"blur\" && /*#__PURE__*/ _react.default.createElement(\"noscript\", null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, generateImgAttrs({\n        config,\n        src: srcString,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes: noscriptSizes,\n        loader\n    }), {\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": `future${fill ? \"-fill\" : \"\"}`,\n        style: imgStyle,\n        className: className,\n        // @ts-ignore - TODO: upgrade to `@types/react@17`\n        loading: loading\n    }))));\n};\nfunction defaultLoader({ config , src , width , quality  }) {\n    if (true) {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push(\"src\");\n        if (!width) missingValues.push(\"width\");\n        if (missingValues.length > 0) {\n            throw new Error(`Next Image Optimization requires ${missingValues.join(\", \")} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify({\n                src,\n                width,\n                quality\n            })}`);\n        }\n        if (src.startsWith(\"//\")) {\n            throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`);\n        }\n        if (!src.startsWith(\"/\") && (config.domains || experimentalRemotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`);\n            }\n            if (true) {\n                // We use dynamic require because this should only error in development\n                const { hasMatch  } = __webpack_require__(/*! ../../shared/lib/match-remote-pattern */ \"../../shared/lib/match-remote-pattern\");\n                if (!hasMatch(config.domains, experimentalRemotePatterns, parsedSrc)) {\n                    throw new Error(`Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` + `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`);\n                }\n            }\n        }\n    }\n    if (src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        return src;\n    }\n    return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${quality || 75}`;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/future/image.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLEtBQUssRUFBRSxJQUFJO0NBQ2QsRUFBQyxDQUFDO0FBQ0hELHVCQUF1QixHQUFHRSxlQUFlLENBQUM7QUFDMUMsTUFBTUMsUUFBUSxHQUFHQyxNQUFrQyxJQUFJLEVBQUU7QUFDekQsU0FBU0YsZUFBZSxDQUFDSyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxhQUFhLEVBQUU7SUFDM0QsSUFBSU4sS0FBK0IsRUFBRSxFQVdwQyxNQUFNO1FBQ0gsT0FBTyxLQUFLLENBQUM7S0FDaEI7Q0FDSjtBQUVELElBQUksQ0FBQyxPQUFPSixPQUFPLENBQUN1QixPQUFPLEtBQUssVUFBVSxJQUFLLE9BQU92QixPQUFPLENBQUN1QixPQUFPLEtBQUssUUFBUSxJQUFJdkIsT0FBTyxDQUFDdUIsT0FBTyxLQUFLLElBQUksQ0FBRSxJQUFJLE9BQU92QixPQUFPLENBQUN1QixPQUFPLENBQUNDLFVBQVUsS0FBSyxXQUFXLEVBQUU7SUFDcksxQixNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxDQUFDdUIsT0FBTyxFQUFFLFlBQVksRUFBRTtRQUFFdEIsS0FBSyxFQUFFLElBQUk7S0FBRSxDQUFDLENBQUM7SUFDdEVILE1BQU0sQ0FBQzJCLE1BQU0sQ0FBQ3pCLE9BQU8sQ0FBQ3VCLE9BQU8sRUFBRXZCLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDMEIsTUFBTSxDQUFDMUIsT0FBTyxHQUFHQSxPQUFPLENBQUN1QixPQUFPLENBQUM7Q0FDbEMsQ0FFRCw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvZ2V0LWRvbWFpbi1sb2NhbGUuanM/NWMyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZ2V0RG9tYWluTG9jYWxlID0gZ2V0RG9tYWluTG9jYWxlO1xuY29uc3QgYmFzZVBhdGggPSBwcm9jZXNzLmVudi5fX05FWFRfUk9VVEVSX0JBU0VQQVRIIHx8ICcnO1xuZnVuY3Rpb24gZ2V0RG9tYWluTG9jYWxlKHBhdGgsIGxvY2FsZSwgbG9jYWxlcywgZG9tYWluTG9jYWxlcykge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZUxvY2FsZVBhdGggPSByZXF1aXJlKCcuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aCcpLm5vcm1hbGl6ZUxvY2FsZVBhdGg7XG4gICAgICAgIGNvbnN0IGRldGVjdERvbWFpbkxvY2FsZSA9IHJlcXVpcmUoJy4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUnKS5kZXRlY3REb21haW5Mb2NhbGU7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGxvY2FsZSB8fCBub3JtYWxpemVMb2NhbGVQYXRoKHBhdGgsIGxvY2FsZXMpLmRldGVjdGVkTG9jYWxlO1xuICAgICAgICBjb25zdCBkb21haW4gPSBkZXRlY3REb21haW5Mb2NhbGUoZG9tYWluTG9jYWxlcywgdW5kZWZpbmVkLCB0YXJnZXQpO1xuICAgICAgICBpZiAoZG9tYWluKSB7XG4gICAgICAgICAgICBjb25zdCBwcm90byA9IGBodHRwJHtkb21haW4uaHR0cCA/ICcnIDogJ3MnfTovL2A7XG4gICAgICAgICAgICBjb25zdCBmaW5hbExvY2FsZSA9IHRhcmdldCA9PT0gZG9tYWluLmRlZmF1bHRMb2NhbGUgPyAnJyA6IGAvJHt0YXJnZXR9YDtcbiAgICAgICAgICAgIHJldHVybiBgJHtwcm90b30ke2RvbWFpbi5kb21haW59JHtiYXNlUGF0aH0ke2ZpbmFsTG9jYWxlfSR7cGF0aH1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXREb21haW5Mb2NhbGUiLCJiYXNlUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUk9VVEVSX0JBU0VQQVRIIiwicGF0aCIsImxvY2FsZSIsImxvY2FsZXMiLCJkb21haW5Mb2NhbGVzIiwiX19ORVhUX0kxOE5fU1VQUE9SVCIsIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJyZXF1aXJlIiwiZGV0ZWN0RG9tYWluTG9jYWxlIiwidGFyZ2V0IiwiZGV0ZWN0ZWRMb2NhbGUiLCJkb21haW4iLCJ1bmRlZmluZWQiLCJwcm90byIsImh0dHAiLCJmaW5hbExvY2FsZSIsImRlZmF1bHRMb2NhbGUiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/get-domain-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/has-base-path.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/has-base-path.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.hasBasePath = hasBasePath;\nvar _pathHasPrefix = __webpack_require__(/*! ../shared/lib/router/utils/path-has-prefix */ \"../shared/lib/router/utils/path-has-prefix\");\nconst basePath =  false || \"\";\nfunction hasBasePath(path) {\n    return (0, _pathHasPrefix).pathHasPrefix(path, basePath);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=has-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oYXMtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csS0FBSyxFQUFFLElBQUk7Q0FDZCxFQUFDLENBQUM7QUFDSEQsbUJBQW1CLEdBQUdFLFdBQVcsQ0FBQztBQUNsQyxJQUFJQyxjQUFjLEdBQUdDLG1CQUFPLENBQUMsOEZBQTRDLENBQUM7QUFDMUUsTUFBTUMsUUFBUSxHQUFHQyxNQUFrQyxJQUFJLEVBQUU7QUFDekQsU0FBU0osV0FBVyxDQUFDTyxJQUFJLEVBQUU7SUFDdkIsT0FBTyxDQUFDLENBQUMsRUFBRU4sY0FBYyxDQUFDLENBQUNPLGFBQWEsQ0FBQ0QsSUFBSSxFQUFFSixRQUFRLENBQUMsQ0FBQztDQUM1RDtBQUVELElBQUksQ0FBQyxPQUFPTCxPQUFPLENBQUNXLE9BQU8sS0FBSyxVQUFVLElBQUssT0FBT1gsT0FBTyxDQUFDVyxPQUFPLEtBQUssUUFBUSxJQUFJWCxPQUFPLENBQUNXLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPWCxPQUFPLENBQUNXLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtJQUNyS2QsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sQ0FBQ1csT0FBTyxFQUFFLFlBQVksRUFBRTtRQUFFVixLQUFLLEVBQUUsSUFBSTtLQUFFLENBQUMsQ0FBQztJQUN0RUgsTUFBTSxDQUFDZSxNQUFNLENBQUNiLE9BQU8sQ0FBQ1csT0FBTyxFQUFFWCxPQUFPLENBQUMsQ0FBQztJQUN4Q2MsTUFBTSxDQUFDZCxPQUFPLEdBQUdBLE9BQU8sQ0FBQ1csT0FBTyxDQUFDO0NBQ2xDLENBRUQseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2hhcy1iYXNlLXBhdGguanM/NWE0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaGFzQmFzZVBhdGggPSBoYXNCYXNlUGF0aDtcbnZhciBfcGF0aEhhc1ByZWZpeCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXRoLWhhcy1wcmVmaXhcIik7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiBoYXNCYXNlUGF0aChwYXRoKSB7XG4gICAgcmV0dXJuICgwLCBfcGF0aEhhc1ByZWZpeCkucGF0aEhhc1ByZWZpeChwYXRoLCBiYXNlUGF0aCk7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhcy1iYXNlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaGFzQmFzZVBhdGgiLCJfcGF0aEhhc1ByZWZpeCIsInJlcXVpcmUiLCJiYXNlUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUk9VVEVSX0JBU0VQQVRIIiwicGF0aCIsInBhdGhIYXNQcmVmaXgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/has-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/head-manager.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/head-manager.js ***!
  \*******************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = initHeadManager;\nexports.isEqualNode = isEqualNode;\nexports.DOMAttributeNames = void 0;\nfunction initHeadManager() {\n    return {\n        mountedInstances: new Set(),\n        updateHead: (head)=>{\n            const tags = {};\n            head.forEach((h)=>{\n                if (// it won't be inlined. In this case revert to the original behavior\n                h.type === \"link\" && h.props[\"data-optimized-fonts\"]) {\n                    if (document.querySelector(`style[data-href=\"${h.props[\"data-href\"]}\"]`)) {\n                        return;\n                    } else {\n                        h.props.href = h.props[\"data-href\"];\n                        h.props[\"data-href\"] = undefined;\n                    }\n                }\n                const components = tags[h.type] || [];\n                components.push(h);\n                tags[h.type] = components;\n            });\n            const titleComponent = tags.title ? tags.title[0] : null;\n            let title = \"\";\n            if (titleComponent) {\n                const { children  } = titleComponent.props;\n                title = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n            }\n            if (title !== document.title) document.title = title;\n            [\n                \"meta\",\n                \"base\",\n                \"link\",\n                \"style\",\n                \"script\"\n            ].forEach((type)=>{\n                updateElements(type, tags[type] || []);\n            });\n        }\n    };\n}\nconst DOMAttributeNames = {\n    acceptCharset: \"accept-charset\",\n    className: \"class\",\n    htmlFor: \"for\",\n    httpEquiv: \"http-equiv\",\n    noModule: \"noModule\"\n};\nexports.DOMAttributeNames = DOMAttributeNames;\nfunction reactElementToDOM({ type , props  }) {\n    const el = document.createElement(type);\n    for(const p in props){\n        if (!props.hasOwnProperty(p)) continue;\n        if (p === \"children\" || p === \"dangerouslySetInnerHTML\") continue;\n        // we don't render undefined props to the DOM\n        if (props[p] === undefined) continue;\n        const attr = DOMAttributeNames[p] || p.toLowerCase();\n        if (type === \"script\" && (attr === \"async\" || attr === \"defer\" || attr === \"noModule\")) {\n            el[attr] = !!props[p];\n        } else {\n            el.setAttribute(attr, props[p]);\n        }\n    }\n    const { children , dangerouslySetInnerHTML  } = props;\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    }\n    return el;\n}\nfunction isEqualNode(oldTag, newTag) {\n    if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {\n        const nonce = newTag.getAttribute(\"nonce\");\n        // Only strip the nonce if `oldTag` has had it stripped. An element's nonce attribute will not\n        // be stripped if there is no content security policy response header that includes a nonce.\n        if (nonce && !oldTag.getAttribute(\"nonce\")) {\n            const cloneTag = newTag.cloneNode(true);\n            cloneTag.setAttribute(\"nonce\", \"\");\n            cloneTag.nonce = nonce;\n            return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);\n        }\n    }\n    return oldTag.isEqualNode(newTag);\n}\nfunction updateElements(type, components) {\n    const headEl = document.getElementsByTagName(\"head\")[0];\n    const headCountEl = headEl.querySelector(\"meta[name=next-head-count]\");\n    if (true) {\n        if (!headCountEl) {\n            console.error(\"Warning: next-head-count is missing. https://nextjs.org/docs/messages/next-head-count-missing\");\n            return;\n        }\n    }\n    const headCount = Number(headCountEl.content);\n    const oldTags = [];\n    for(let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j == null ? void 0 : j.previousElementSibling) || null){\n        var ref;\n        if ((j == null ? void 0 : (ref = j.tagName) == null ? void 0 : ref.toLowerCase()) === type) {\n            oldTags.push(j);\n        }\n    }\n    const newTags = components.map(reactElementToDOM).filter((newTag)=>{\n        for(let k = 0, len = oldTags.length; k < len; k++){\n            const oldTag = oldTags[k];\n            if (isEqualNode(oldTag, newTag)) {\n                oldTags.splice(k, 1);\n                return false;\n            }\n        }\n        return true;\n    });\n    oldTags.forEach((t)=>{\n        var ref;\n        return (ref = t.parentNode) == null ? void 0 : ref.removeChild(t);\n    });\n    newTags.forEach((t)=>headEl.insertBefore(t, headCountEl));\n    headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/head-manager.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_default(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\nvar _addLocale = __webpack_require__(/*! ./add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\nvar _appRouterContext = __webpack_require__(/*! ../shared/lib/app-router-context */ \"../shared/lib/app-router-context\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nvar _getDomainLocale = __webpack_require__(/*! ./get-domain-locale */ \"./node_modules/next/dist/client/get-domain-locale.js\");\nvar _addBasePath = __webpack_require__(/*! ./add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\n// @ts-ignore useTransition exist\nconst hasUseTransition = typeof _react.default.useTransition !== \"undefined\";\nconst prefetched = {};\nfunction prefetch(router, href, as, options) {\n    if (true) return;\n    if (!(0, _router).isLocalURL(href)) return;\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    router.prefetch(href, as, options).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n    const curLocale = options && typeof options.locale !== \"undefined\" ? options.locale : router && router.locale;\n    // Join on an invalid URI character\n    prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")] = true;\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, soft, shallow, scroll, locale, startTransition) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an AppRouterInstance, then it'll have `softPush` and\n        // `softReplace`.\n        if (\"softPush\" in router && \"softReplace\" in router) {\n            // If we're doing a soft navigation, use the soft variants of\n            // replace/push.\n            const method = soft ? replace ? \"softReplace\" : \"softPush\" : replace ? \"replace\" : \"push\";\n            router[method](href);\n        } else {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        }\n    };\n    if (startTransition) {\n        startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nconst Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n    if (true) {\n        function createPropError(args) {\n            return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : \"\"));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            soft: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"soft\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , soft , shallow , scroll , locale , onClick , onMouseEnter , onTouchStart , legacyBehavior =Boolean(true) !== true  } = props, restProps = _object_without_properties_loose(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"soft\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\",\n        \"onTouchStart\",\n        \"legacyBehavior\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const p = prefetchProp !== false;\n    const [, /* isPending */ startTransition] = hasUseTransition ? // @ts-ignore useTransition exists\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    _react.default.useTransition() : [];\n    let router = _react.default.useContext(_routerContext.RouterContext);\n    // TODO-APP: type error. Remove `as any`\n    const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n    if (appRouter) {\n        router = appRouter;\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _router).resolveHref(router, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn(`\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`);\n            }\n            if (onMouseEnter) {\n                console.warn(`\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`);\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n                }\n                throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : \"\"));\n            }\n        } else {}\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    _react.default.useEffect(()=>{\n        const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        const isPrefetched = prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")];\n        if (shouldPrefetch && !isPrefetched) {\n            prefetch(router, href, as, {\n                locale: curLocale\n            });\n        }\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        p,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick: (e)=>{\n            if (true) {\n                if (!e) {\n                    throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!e.defaultPrevented) {\n                linkClicked(e, router, href, as, replace, soft, shallow, scroll, locale, appRouter ? startTransition : undefined);\n            }\n        },\n        onMouseEnter: (e)=>{\n            if (!legacyBehavior && typeof onMouseEnter === \"function\") {\n                onMouseEnter(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if ((0, _router).isLocalURL(href)) {\n                prefetch(router, href, as, {\n                    priority: true\n                });\n            }\n        },\n        onTouchStart: (e)=>{\n            if (!legacyBehavior && typeof onTouchStart === \"function\") {\n                onTouchStart(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if ((0, _router).isLocalURL(href)) {\n                prefetch(router, href, as, {\n                    priority: true\n                });\n            }\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = router && router.isLocaleDomain && (0, _getDomainLocale).getDomainLocale(as, curLocale, router.locales, router.domainLocales);\n        childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, router && router.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\nvar _default = Link;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csS0FBSyxFQUFFLElBQUk7Q0FDZCxFQUFDLENBQUM7QUFDSEQsa0JBQWUsR0FBRyxLQUFLLENBQUMsQ0FBQztBQUN6QixJQUFJRyx3QkFBd0IsR0FBR0MsbUpBQStEO0FBQzlGLElBQUlDLGdDQUFnQyxHQUFHRCxtS0FBdUU7QUFDOUcsSUFBSUUsTUFBTSxHQUFHSCx3QkFBd0IsQ0FBQ0MsbUJBQU8sQ0FBQyxvQkFBTyxDQUFDLENBQUM7QUFDdkQsSUFBSUcsT0FBTyxHQUFHSCxtQkFBTyxDQUFDLHlGQUE2QixDQUFDO0FBQ3BELElBQUlJLFVBQVUsR0FBR0osbUJBQU8sQ0FBQyxtRUFBYyxDQUFDO0FBQ3hDLElBQUlLLGNBQWMsR0FBR0wsbUJBQU8sQ0FBQyxrRUFBOEIsQ0FBQztBQUM1RCxJQUFJTSxpQkFBaUIsR0FBR04sbUJBQU8sQ0FBQywwRUFBa0MsQ0FBQztBQUNuRSxJQUFJTyxnQkFBZ0IsR0FBR1AsbUJBQU8sQ0FBQywrRUFBb0IsQ0FBQztBQUNwRCxJQUFJUSxnQkFBZ0IsR0FBR1IsbUJBQU8sQ0FBQyxpRkFBcUIsQ0FBQztBQUNyRCxJQUFJUyxZQUFZLEdBQUdULG1CQUFPLENBQUMseUVBQWlCLENBQUM7QUFDN0MsaUNBQWlDO0FBQ2pDLE1BQU1VLGdCQUFnQixHQUFHLE9BQU9SLE1BQU0sQ0FBQ0osT0FBTyxDQUFDYSxhQUFhLEtBQUssV0FBVztBQUM1RSxNQUFNQyxVQUFVLEdBQUcsRUFBRTtBQUNyQixTQUFTQyxRQUFRLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxFQUFFLEVBQUVDLE9BQU8sRUFBRTtJQUN6QyxJQUFJLElBQXdDLEVBQUUsT0FBTztJQUNyRCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUVkLE9BQU8sQ0FBQyxDQUFDZSxVQUFVLENBQUNILElBQUksQ0FBQyxFQUFFLE9BQU87SUFD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LEtBQUssUUFBUSxJQUFJRixPQUFPLENBQUNFLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPRixPQUFPLENBQUNFLE9BQU8sQ0FBQ21JLFVBQVUsS0FBSyxXQUFXLEVBQUU7SUFDckt2SSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxDQUFDRSxPQUFPLEVBQUUsWUFBWSxFQUFFO1FBQUVELEtBQUssRUFBRSxJQUFJO0tBQUUsQ0FBQyxDQUFDO0lBQ3RFSCxNQUFNLENBQUNxSSxNQUFNLENBQUNuSSxPQUFPLENBQUNFLE9BQU8sRUFBRUYsT0FBTyxDQUFDLENBQUM7SUFDeENzSSxNQUFNLENBQUN0SSxPQUFPLEdBQUdBLE9BQU8sQ0FBQ0UsT0FBTyxDQUFDO0NBQ2xDLENBRUQsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2xpbmsuanM/ZTRmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanNcIikuZGVmYXVsdDtcbnZhciBfb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZSA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlLmpzXCIpLmRlZmF1bHQ7XG52YXIgX3JlYWN0ID0gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX3JvdXRlciA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci9yb3V0ZXJcIik7XG52YXIgX2FkZExvY2FsZSA9IHJlcXVpcmUoXCIuL2FkZC1sb2NhbGVcIik7XG52YXIgX3JvdXRlckNvbnRleHQgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dFwiKTtcbnZhciBfYXBwUm91dGVyQ29udGV4dCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL2FwcC1yb3V0ZXItY29udGV4dFwiKTtcbnZhciBfdXNlSW50ZXJzZWN0aW9uID0gcmVxdWlyZShcIi4vdXNlLWludGVyc2VjdGlvblwiKTtcbnZhciBfZ2V0RG9tYWluTG9jYWxlID0gcmVxdWlyZShcIi4vZ2V0LWRvbWFpbi1sb2NhbGVcIik7XG52YXIgX2FkZEJhc2VQYXRoID0gcmVxdWlyZShcIi4vYWRkLWJhc2UtcGF0aFwiKTtcbi8vIEB0cy1pZ25vcmUgdXNlVHJhbnNpdGlvbiBleGlzdFxuY29uc3QgaGFzVXNlVHJhbnNpdGlvbiA9IHR5cGVvZiBfcmVhY3QuZGVmYXVsdC51c2VUcmFuc2l0aW9uICE9PSAndW5kZWZpbmVkJztcbmNvbnN0IHByZWZldGNoZWQgPSB7fTtcbmZ1bmN0aW9uIHByZWZldGNoKHJvdXRlciwgaHJlZiwgYXMsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgfHwgIXJvdXRlcikgcmV0dXJuO1xuICAgIGlmICghKDAsIF9yb3V0ZXIpLmlzTG9jYWxVUkwoaHJlZikpIHJldHVybjtcbiAgICAvLyBQcmVmZXRjaCB0aGUgSlNPTiBwYWdlIGlmIGFza2VkIChvbmx5IGluIHRoZSBjbGllbnQpXG4gICAgLy8gV2UgbmVlZCB0byBoYW5kbGUgYSBwcmVmZXRjaCBlcnJvciBoZXJlIHNpbmNlIHdlIG1heSBiZVxuICAgIC8vIGxvYWRpbmcgd2l0aCBwcmlvcml0eSB3aGljaCBjYW4gcmVqZWN0IGJ1dCB3ZSBkb24ndFxuICAgIC8vIHdhbnQgdG8gZm9yY2UgbmF2aWdhdGlvbiBzaW5jZSB0aGlzIGlzIG9ubHkgYSBwcmVmZXRjaFxuICAgIHJvdXRlci5wcmVmZXRjaChocmVmLCBhcywgb3B0aW9ucykuY2F0Y2goKGVycik9PntcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIC8vIHJldGhyb3cgdG8gc2hvdyBpbnZhbGlkIFVSTCBlcnJvcnNcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IGN1ckxvY2FsZSA9IG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMubG9jYWxlICE9PSAndW5kZWZpbmVkJyA/IG9wdGlvbnMubG9jYWxlIDogcm91dGVyICYmIHJvdXRlci5sb2NhbGU7XG4gICAgLy8gSm9pbiBvbiBhbiBpbnZhbGlkIFVSSSBjaGFyYWN0ZXJcbiAgICBwcmVmZXRjaGVkW2hyZWYgKyAnJScgKyBhcyArIChjdXJMb2NhbGUgPyAnJScgKyBjdXJMb2NhbGUgOiAnJyldID0gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICAgIGNvbnN0IHsgdGFyZ2V0ICB9ID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICByZXR1cm4gdGFyZ2V0ICYmIHRhcmdldCAhPT0gJ19zZWxmJyB8fCBldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50Lm5hdGl2ZUV2ZW50ICYmIGV2ZW50Lm5hdGl2ZUV2ZW50LndoaWNoID09PSAyO1xufVxuZnVuY3Rpb24gbGlua0NsaWNrZWQoZSwgcm91dGVyLCBocmVmLCBhcywgcmVwbGFjZSwgc29mdCwgc2hhbGxvdywgc2Nyb2xsLCBsb2NhbGUsIHN0YXJ0VHJhbnNpdGlvbikge1xuICAgIGNvbnN0IHsgbm9kZU5hbWUgIH0gPSBlLmN1cnJlbnRUYXJnZXQ7XG4gICAgLy8gYW5jaG9ycyBpbnNpZGUgYW4gc3ZnIGhhdmUgYSBsb3dlcmNhc2Ugbm9kZU5hbWVcbiAgICBjb25zdCBpc0FuY2hvck5vZGVOYW1lID0gbm9kZU5hbWUudG9VcHBlckNhc2UoKSA9PT0gJ0EnO1xuICAgIGlmIChpc0FuY2hvck5vZGVOYW1lICYmIChpc01vZGlmaWVkRXZlbnQoZSkgfHwgISgwLCBfcm91dGVyKS5pc0xvY2FsVVJMKGhyZWYpKSkge1xuICAgICAgICAvLyBpZ25vcmUgY2xpY2sgZm9yIGJyb3dzZXLigJlzIGRlZmF1bHQgYmVoYXZpb3JcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgbmF2aWdhdGUgPSAoKT0+e1xuICAgICAgICAvLyBJZiB0aGUgcm91dGVyIGlzIGFuIEFwcFJvdXRlckluc3RhbmNlLCB0aGVuIGl0J2xsIGhhdmUgYHNvZnRQdXNoYCBhbmRcbiAgICAgICAgLy8gYHNvZnRSZXBsYWNlYC5cbiAgICAgICAgaWYgKCdzb2Z0UHVzaCcgaW4gcm91dGVyICYmICdzb2Z0UmVwbGFjZScgaW4gcm91dGVyKSB7XG4gICAgICAgICAgICAvLyBJZiB3ZSdyZSBkb2luZyBhIHNvZnQgbmF2aWdhdGlvbiwgdXNlIHRoZSBzb2Z0IHZhcmlhbnRzIG9mXG4gICAgICAgICAgICAvLyByZXBsYWNlL3B1c2guXG4gICAgICAgICAgICBjb25zdCBtZXRob2QgPSBzb2Z0ID8gcmVwbGFjZSA/ICdzb2Z0UmVwbGFjZScgOiAnc29mdFB1c2gnIDogcmVwbGFjZSA/ICdyZXBsYWNlJyA6ICdwdXNoJztcbiAgICAgICAgICAgIHJvdXRlclttZXRob2RdKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcm91dGVyW3JlcGxhY2UgPyAncmVwbGFjZScgOiAncHVzaCddKGhyZWYsIGFzLCB7XG4gICAgICAgICAgICAgICAgc2hhbGxvdyxcbiAgICAgICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICAgICAgc2Nyb2xsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKHN0YXJ0VHJhbnNpdGlvbikge1xuICAgICAgICBzdGFydFRyYW5zaXRpb24obmF2aWdhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG5hdmlnYXRlKCk7XG4gICAgfVxufVxuY29uc3QgTGluayA9IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuZm9yd2FyZFJlZihmdW5jdGlvbiBMaW5rQ29tcG9uZW50KHByb3BzLCBmb3J3YXJkZWRSZWYpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBmdW5jdGlvbiBjcmVhdGVQcm9wRXJyb3IoYXJncykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihgRmFpbGVkIHByb3AgdHlwZTogVGhlIHByb3AgXFxgJHthcmdzLmtleX1cXGAgZXhwZWN0cyBhICR7YXJncy5leHBlY3RlZH0gaW4gXFxgPExpbms+XFxgLCBidXQgZ290IFxcYCR7YXJncy5hY3R1YWx9XFxgIGluc3RlYWQuYCArICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IFwiXFxuT3BlbiB5b3VyIGJyb3dzZXIncyBjb25zb2xlIHRvIHZpZXcgdGhlIENvbXBvbmVudCBzdGFjayB0cmFjZS5cIiA6ICcnKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVHlwZVNjcmlwdCB0cmljayBmb3IgdHlwZS1ndWFyZGluZzpcbiAgICAgICAgY29uc3QgcmVxdWlyZWRQcm9wc0d1YXJkID0ge1xuICAgICAgICAgICAgaHJlZjogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCByZXF1aXJlZFByb3BzID0gT2JqZWN0LmtleXMocmVxdWlyZWRQcm9wc0d1YXJkKTtcbiAgICAgICAgcmVxdWlyZWRQcm9wcy5mb3JFYWNoKChrZXkpPT57XG4gICAgICAgICAgICBpZiAoa2V5ID09PSAnaHJlZicpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSA9PSBudWxsIHx8IHR5cGVvZiBwcm9wc1trZXldICE9PSAnc3RyaW5nJyAmJiB0eXBlb2YgcHJvcHNba2V5XSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiAnYHN0cmluZ2Agb3IgYG9iamVjdGAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiBwcm9wc1trZXldID09PSBudWxsID8gJ251bGwnIDogdHlwZW9mIHByb3BzW2tleV1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBUeXBlU2NyaXB0IHRyaWNrIGZvciB0eXBlLWd1YXJkaW5nOlxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICAgICAgICAgICAgICBjb25zdCBfID0ga2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gVHlwZVNjcmlwdCB0cmljayBmb3IgdHlwZS1ndWFyZGluZzpcbiAgICAgICAgY29uc3Qgb3B0aW9uYWxQcm9wc0d1YXJkID0ge1xuICAgICAgICAgICAgYXM6IHRydWUsXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxuICAgICAgICAgICAgc29mdDogdHJ1ZSxcbiAgICAgICAgICAgIHNjcm9sbDogdHJ1ZSxcbiAgICAgICAgICAgIHNoYWxsb3c6IHRydWUsXG4gICAgICAgICAgICBwYXNzSHJlZjogdHJ1ZSxcbiAgICAgICAgICAgIHByZWZldGNoOiB0cnVlLFxuICAgICAgICAgICAgbG9jYWxlOiB0cnVlLFxuICAgICAgICAgICAgb25DbGljazogdHJ1ZSxcbiAgICAgICAgICAgIG9uTW91c2VFbnRlcjogdHJ1ZSxcbiAgICAgICAgICAgIG9uVG91Y2hTdGFydDogdHJ1ZSxcbiAgICAgICAgICAgIGxlZ2FjeUJlaGF2aW9yOiB0cnVlXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9wdGlvbmFsUHJvcHMgPSBPYmplY3Qua2V5cyhvcHRpb25hbFByb3BzR3VhcmQpO1xuICAgICAgICBvcHRpb25hbFByb3BzLmZvckVhY2goKGtleSk9PntcbiAgICAgICAgICAgIGNvbnN0IHZhbFR5cGUgPSB0eXBlb2YgcHJvcHNba2V5XTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09ICdhcycpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSAmJiB2YWxUeXBlICE9PSAnc3RyaW5nJyAmJiB2YWxUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVQcm9wRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQ6ICdgc3RyaW5nYCBvciBgb2JqZWN0YCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdsb2NhbGUnKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gJiYgdmFsVHlwZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiAnYHN0cmluZ2AnLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiB2YWxUeXBlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnb25DbGljaycgfHwga2V5ID09PSAnb25Nb3VzZUVudGVyJyB8fCBrZXkgPT09ICdvblRvdWNoU3RhcnQnKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gJiYgdmFsVHlwZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVQcm9wRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQ6ICdgZnVuY3Rpb25gJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdHVhbDogdmFsVHlwZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ3JlcGxhY2UnIHx8IGtleSA9PT0gJ3NvZnQnIHx8IGtleSA9PT0gJ3Njcm9sbCcgfHwga2V5ID09PSAnc2hhbGxvdycgfHwga2V5ID09PSAncGFzc0hyZWYnIHx8IGtleSA9PT0gJ3ByZWZldGNoJyB8fCBrZXkgPT09ICdsZWdhY3lCZWhhdmlvcicpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSAhPSBudWxsICYmIHZhbFR5cGUgIT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVQcm9wRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQ6ICdgYm9vbGVhbmAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiB2YWxUeXBlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gVHlwZVNjcmlwdCB0cmljayBmb3IgdHlwZS1ndWFyZGluZzpcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgICAgICAgICAgICAgY29uc3QgXyA9IGtleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8vIFRoaXMgaG9vayBpcyBpbiBhIGNvbmRpdGlvbmFsIGJ1dCB0aGF0IGlzIG9rIGJlY2F1c2UgYHByb2Nlc3MuZW52Lk5PREVfRU5WYCBuZXZlciBjaGFuZ2VzXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xuICAgICAgICBjb25zdCBoYXNXYXJuZWQgPSBfcmVhY3QuZGVmYXVsdC51c2VSZWYoZmFsc2UpO1xuICAgICAgICBpZiAocHJvcHMucHJlZmV0Y2ggJiYgIWhhc1dhcm5lZC5jdXJyZW50KSB7XG4gICAgICAgICAgICBoYXNXYXJuZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ05leHQuanMgYXV0by1wcmVmZXRjaGVzIGF1dG9tYXRpY2FsbHkgYmFzZWQgb24gdmlld3BvcnQuIFRoZSBwcmVmZXRjaCBhdHRyaWJ1dGUgaXMgbm8gbG9uZ2VyIG5lZWRlZC4gTW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvcHJlZmV0Y2gtdHJ1ZS1kZXByZWNhdGVkJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IGNoaWxkcmVuO1xuICAgIGNvbnN0IHsgaHJlZjogaHJlZlByb3AgLCBhczogYXNQcm9wICwgY2hpbGRyZW46IGNoaWxkcmVuUHJvcCAsIHByZWZldGNoOiBwcmVmZXRjaFByb3AgLCBwYXNzSHJlZiAsIHJlcGxhY2UgLCBzb2Z0ICwgc2hhbGxvdyAsIHNjcm9sbCAsIGxvY2FsZSAsIG9uQ2xpY2sgLCBvbk1vdXNlRW50ZXIgLCBvblRvdWNoU3RhcnQgLCBsZWdhY3lCZWhhdmlvciA9Qm9vbGVhbihwcm9jZXNzLmVudi5fX05FWFRfTkVXX0xJTktfQkVIQVZJT1IpICE9PSB0cnVlICB9ID0gcHJvcHMsIHJlc3RQcm9wcyA9IF9vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlKHByb3BzLCBbXG4gICAgICAgIFwiaHJlZlwiLFxuICAgICAgICBcImFzXCIsXG4gICAgICAgIFwiY2hpbGRyZW5cIixcbiAgICAgICAgXCJwcmVmZXRjaFwiLFxuICAgICAgICBcInBhc3NIcmVmXCIsXG4gICAgICAgIFwicmVwbGFjZVwiLFxuICAgICAgICBcInNvZnRcIixcbiAgICAgICAgXCJzaGFsbG93XCIsXG4gICAgICAgIFwic2Nyb2xsXCIsXG4gICAgICAgIFwibG9jYWxlXCIsXG4gICAgICAgIFwib25DbGlja1wiLFxuICAgICAgICBcIm9uTW91c2VFbnRlclwiLFxuICAgICAgICBcIm9uVG91Y2hTdGFydFwiLFxuICAgICAgICBcImxlZ2FjeUJlaGF2aW9yXCJcbiAgICBdKTtcbiAgICBjaGlsZHJlbiA9IGNoaWxkcmVuUHJvcDtcbiAgICBpZiAobGVnYWN5QmVoYXZpb3IgJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGNoaWxkcmVuID09PSAnbnVtYmVyJykpIHtcbiAgICAgICAgY2hpbGRyZW4gPSAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIG51bGwsIGNoaWxkcmVuKTtcbiAgICB9XG4gICAgY29uc3QgcCA9IHByZWZldGNoUHJvcCAhPT0gZmFsc2U7XG4gICAgY29uc3QgWywgLyogaXNQZW5kaW5nICovIHN0YXJ0VHJhbnNpdGlvbl0gPSBoYXNVc2VUcmFuc2l0aW9uID8gLy8gVGhlcmUgaXMgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIHJlbmRlcnMgaW4gdGhpcyBjYXNlLCBvbmx5IGJldHdlZW4gdXNpbmcgUmVhY3QgMTggdnMgMTcuXG4gICAgLy8gQHRzLWlnbm9yZSB1c2VUcmFuc2l0aW9uIGV4aXN0c1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xuICAgIF9yZWFjdC5kZWZhdWx0LnVzZVRyYW5zaXRpb24oKSA6IFtdO1xuICAgIGxldCByb3V0ZXIgPSBfcmVhY3QuZGVmYXVsdC51c2VDb250ZXh0KF9yb3V0ZXJDb250ZXh0LlJvdXRlckNvbnRleHQpO1xuICAgIC8vIFRPRE8tQVBQOiB0eXBlIGVycm9yLiBSZW1vdmUgYGFzIGFueWBcbiAgICBjb25zdCBhcHBSb3V0ZXIgPSBfcmVhY3QuZGVmYXVsdC51c2VDb250ZXh0KF9hcHBSb3V0ZXJDb250ZXh0LkFwcFJvdXRlckNvbnRleHQpO1xuICAgIGlmIChhcHBSb3V0ZXIpIHtcbiAgICAgICAgcm91dGVyID0gYXBwUm91dGVyO1xuICAgIH1cbiAgICBjb25zdCB7IGhyZWYgLCBhcyAgfSA9IF9yZWFjdC5kZWZhdWx0LnVzZU1lbW8oKCk9PntcbiAgICAgICAgY29uc3QgW3Jlc29sdmVkSHJlZiwgcmVzb2x2ZWRBc10gPSAoMCwgX3JvdXRlcikucmVzb2x2ZUhyZWYocm91dGVyLCBocmVmUHJvcCwgdHJ1ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBocmVmOiByZXNvbHZlZEhyZWYsXG4gICAgICAgICAgICBhczogYXNQcm9wID8gKDAsIF9yb3V0ZXIpLnJlc29sdmVIcmVmKHJvdXRlciwgYXNQcm9wKSA6IHJlc29sdmVkQXMgfHwgcmVzb2x2ZWRIcmVmXG4gICAgICAgIH07XG4gICAgfSwgW1xuICAgICAgICByb3V0ZXIsXG4gICAgICAgIGhyZWZQcm9wLFxuICAgICAgICBhc1Byb3BcbiAgICBdKTtcbiAgICBjb25zdCBwcmV2aW91c0hyZWYgPSBfcmVhY3QuZGVmYXVsdC51c2VSZWYoaHJlZik7XG4gICAgY29uc3QgcHJldmlvdXNBcyA9IF9yZWFjdC5kZWZhdWx0LnVzZVJlZihhcyk7XG4gICAgLy8gVGhpcyB3aWxsIHJldHVybiB0aGUgZmlyc3QgY2hpbGQsIGlmIG11bHRpcGxlIGFyZSBwcm92aWRlZCBpdCB3aWxsIHRocm93IGFuIGVycm9yXG4gICAgbGV0IGNoaWxkO1xuICAgIGlmIChsZWdhY3lCZWhhdmlvcikge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICAgIGlmIChvbkNsaWNrKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBcIm9uQ2xpY2tcIiB3YXMgcGFzc2VkIHRvIDxMaW5rPiB3aXRoIFxcYGhyZWZcXGAgb2YgXFxgJHtocmVmUHJvcH1cXGAgYnV0IFwibGVnYWN5QmVoYXZpb3JcIiB3YXMgc2V0LiBUaGUgbGVnYWN5IGJlaGF2aW9yIHJlcXVpcmVzIG9uQ2xpY2sgYmUgc2V0IG9uIHRoZSBjaGlsZCBvZiBuZXh0L2xpbmtgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvbk1vdXNlRW50ZXIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYFwib25Nb3VzZUVudGVyXCIgd2FzIHBhc3NlZCB0byA8TGluaz4gd2l0aCBcXGBocmVmXFxgIG9mIFxcYCR7aHJlZlByb3B9XFxgIGJ1dCBcImxlZ2FjeUJlaGF2aW9yXCIgd2FzIHNldC4gVGhlIGxlZ2FjeSBiZWhhdmlvciByZXF1aXJlcyBvbk1vdXNlRW50ZXIgYmUgc2V0IG9uIHRoZSBjaGlsZCBvZiBuZXh0L2xpbmtgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY2hpbGQgPSBfcmVhY3QuZGVmYXVsdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGlmICghY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBjaGlsZHJlbiB3ZXJlIHBhc3NlZCB0byA8TGluaz4gd2l0aCBcXGBocmVmXFxgIG9mIFxcYCR7aHJlZlByb3B9XFxgIGJ1dCBvbmUgY2hpbGQgaXMgcmVxdWlyZWQgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbGluay1uby1jaGlsZHJlbmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE11bHRpcGxlIGNoaWxkcmVuIHdlcmUgcGFzc2VkIHRvIDxMaW5rPiB3aXRoIFxcYGhyZWZcXGAgb2YgXFxgJHtocmVmUHJvcH1cXGAgYnV0IG9ubHkgb25lIGNoaWxkIGlzIHN1cHBvcnRlZCBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9saW5rLW11bHRpcGxlLWNoaWxkcmVuYCArICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IFwiIFxcbk9wZW4geW91ciBicm93c2VyJ3MgY29uc29sZSB0byB2aWV3IHRoZSBDb21wb25lbnQgc3RhY2sgdHJhY2UuXCIgOiAnJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2hpbGQgPSBfcmVhY3QuZGVmYXVsdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBjaGlsZFJlZiA9IGxlZ2FjeUJlaGF2aW9yID8gY2hpbGQgJiYgdHlwZW9mIGNoaWxkID09PSAnb2JqZWN0JyAmJiBjaGlsZC5yZWYgOiBmb3J3YXJkZWRSZWY7XG4gICAgY29uc3QgW3NldEludGVyc2VjdGlvblJlZiwgaXNWaXNpYmxlLCByZXNldFZpc2libGVdID0gKDAsIF91c2VJbnRlcnNlY3Rpb24pLnVzZUludGVyc2VjdGlvbih7XG4gICAgICAgIHJvb3RNYXJnaW46ICcyMDBweCdcbiAgICB9KTtcbiAgICBjb25zdCBzZXRSZWYgPSBfcmVhY3QuZGVmYXVsdC51c2VDYWxsYmFjaygoZWwpPT57XG4gICAgICAgIC8vIEJlZm9yZSB0aGUgbGluayBnZXR0aW5nIG9ic2VydmVkLCBjaGVjayBpZiB2aXNpYmxlIHN0YXRlIG5lZWQgdG8gYmUgcmVzZXRcbiAgICAgICAgaWYgKHByZXZpb3VzQXMuY3VycmVudCAhPT0gYXMgfHwgcHJldmlvdXNIcmVmLmN1cnJlbnQgIT09IGhyZWYpIHtcbiAgICAgICAgICAgIHJlc2V0VmlzaWJsZSgpO1xuICAgICAgICAgICAgcHJldmlvdXNBcy5jdXJyZW50ID0gYXM7XG4gICAgICAgICAgICBwcmV2aW91c0hyZWYuY3VycmVudCA9IGhyZWY7XG4gICAgICAgIH1cbiAgICAgICAgc2V0SW50ZXJzZWN0aW9uUmVmKGVsKTtcbiAgICAgICAgaWYgKGNoaWxkUmVmKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNoaWxkUmVmID09PSAnZnVuY3Rpb24nKSBjaGlsZFJlZihlbCk7XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgY2hpbGRSZWYgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRSZWYuY3VycmVudCA9IGVsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgW1xuICAgICAgICBhcyxcbiAgICAgICAgY2hpbGRSZWYsXG4gICAgICAgIGhyZWYsXG4gICAgICAgIHJlc2V0VmlzaWJsZSxcbiAgICAgICAgc2V0SW50ZXJzZWN0aW9uUmVmXG4gICAgXSk7XG4gICAgX3JlYWN0LmRlZmF1bHQudXNlRWZmZWN0KCgpPT57XG4gICAgICAgIGNvbnN0IHNob3VsZFByZWZldGNoID0gaXNWaXNpYmxlICYmIHAgJiYgKDAsIF9yb3V0ZXIpLmlzTG9jYWxVUkwoaHJlZik7XG4gICAgICAgIGNvbnN0IGN1ckxvY2FsZSA9IHR5cGVvZiBsb2NhbGUgIT09ICd1bmRlZmluZWQnID8gbG9jYWxlIDogcm91dGVyICYmIHJvdXRlci5sb2NhbGU7XG4gICAgICAgIGNvbnN0IGlzUHJlZmV0Y2hlZCA9IHByZWZldGNoZWRbaHJlZiArICclJyArIGFzICsgKGN1ckxvY2FsZSA/ICclJyArIGN1ckxvY2FsZSA6ICcnKV07XG4gICAgICAgIGlmIChzaG91bGRQcmVmZXRjaCAmJiAhaXNQcmVmZXRjaGVkKSB7XG4gICAgICAgICAgICBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCB7XG4gICAgICAgICAgICAgICAgbG9jYWxlOiBjdXJMb2NhbGVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSwgW1xuICAgICAgICBhcyxcbiAgICAgICAgaHJlZixcbiAgICAgICAgaXNWaXNpYmxlLFxuICAgICAgICBsb2NhbGUsXG4gICAgICAgIHAsXG4gICAgICAgIHJvdXRlclxuICAgIF0pO1xuICAgIGNvbnN0IGNoaWxkUHJvcHMgPSB7XG4gICAgICAgIHJlZjogc2V0UmVmLFxuICAgICAgICBvbkNsaWNrOiAoZSk9PntcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ29tcG9uZW50IHJlbmRlcmVkIGluc2lkZSBuZXh0L2xpbmsgaGFzIHRvIHBhc3MgY2xpY2sgZXZlbnQgdG8gXCJvbkNsaWNrXCIgcHJvcC5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvbkNsaWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb25DbGljayhlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsZWdhY3lCZWhhdmlvciAmJiBjaGlsZC5wcm9wcyAmJiB0eXBlb2YgY2hpbGQucHJvcHMub25DbGljayA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGNoaWxkLnByb3BzLm9uQ2xpY2soZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWUuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICAgICAgICAgIGxpbmtDbGlja2VkKGUsIHJvdXRlciwgaHJlZiwgYXMsIHJlcGxhY2UsIHNvZnQsIHNoYWxsb3csIHNjcm9sbCwgbG9jYWxlLCBhcHBSb3V0ZXIgPyBzdGFydFRyYW5zaXRpb24gOiB1bmRlZmluZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvbk1vdXNlRW50ZXI6IChlKT0+e1xuICAgICAgICAgICAgaWYgKCFsZWdhY3lCZWhhdmlvciAmJiB0eXBlb2Ygb25Nb3VzZUVudGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlZ2FjeUJlaGF2aW9yICYmIGNoaWxkLnByb3BzICYmIHR5cGVvZiBjaGlsZC5wcm9wcy5vbk1vdXNlRW50ZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBjaGlsZC5wcm9wcy5vbk1vdXNlRW50ZXIoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKDAsIF9yb3V0ZXIpLmlzTG9jYWxVUkwoaHJlZikpIHtcbiAgICAgICAgICAgICAgICBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCB7XG4gICAgICAgICAgICAgICAgICAgIHByaW9yaXR5OiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uVG91Y2hTdGFydDogKGUpPT57XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvblRvdWNoU3RhcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBvblRvdWNoU3RhcnQoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobGVnYWN5QmVoYXZpb3IgJiYgY2hpbGQucHJvcHMgJiYgdHlwZW9mIGNoaWxkLnByb3BzLm9uVG91Y2hTdGFydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGNoaWxkLnByb3BzLm9uVG91Y2hTdGFydChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoMCwgX3JvdXRlcikuaXNMb2NhbFVSTChocmVmKSkge1xuICAgICAgICAgICAgICAgIHByZWZldGNoKHJvdXRlciwgaHJlZiwgYXMsIHtcbiAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHk6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgLy8gSWYgY2hpbGQgaXMgYW4gPGE+IHRhZyBhbmQgZG9lc24ndCBoYXZlIGEgaHJlZiBhdHRyaWJ1dGUsIG9yIGlmIHRoZSAncGFzc0hyZWYnIHByb3BlcnR5IGlzXG4gICAgLy8gZGVmaW5lZCwgd2Ugc3BlY2lmeSB0aGUgY3VycmVudCAnaHJlZicsIHNvIHRoYXQgcmVwZXRpdGlvbiBpcyBub3QgbmVlZGVkIGJ5IHRoZSB1c2VyXG4gICAgaWYgKCFsZWdhY3lCZWhhdmlvciB8fCBwYXNzSHJlZiB8fCBjaGlsZC50eXBlID09PSAnYScgJiYgISgnaHJlZicgaW4gY2hpbGQucHJvcHMpKSB7XG4gICAgICAgIGNvbnN0IGN1ckxvY2FsZSA9IHR5cGVvZiBsb2NhbGUgIT09ICd1bmRlZmluZWQnID8gbG9jYWxlIDogcm91dGVyICYmIHJvdXRlci5sb2NhbGU7XG4gICAgICAgIC8vIHdlIG9ubHkgcmVuZGVyIGRvbWFpbiBsb2NhbGVzIGlmIHdlIGFyZSBjdXJyZW50bHkgb24gYSBkb21haW4gbG9jYWxlXG4gICAgICAgIC8vIHNvIHRoYXQgbG9jYWxlIGxpbmtzIGFyZSBzdGlsbCB2aXNpdGFibGUgaW4gZGV2ZWxvcG1lbnQvcHJldmlldyBlbnZzXG4gICAgICAgIGNvbnN0IGxvY2FsZURvbWFpbiA9IHJvdXRlciAmJiByb3V0ZXIuaXNMb2NhbGVEb21haW4gJiYgKDAsIF9nZXREb21haW5Mb2NhbGUpLmdldERvbWFpbkxvY2FsZShhcywgY3VyTG9jYWxlLCByb3V0ZXIubG9jYWxlcywgcm91dGVyLmRvbWFpbkxvY2FsZXMpO1xuICAgICAgICBjaGlsZFByb3BzLmhyZWYgPSBsb2NhbGVEb21haW4gfHwgKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgoKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShhcywgY3VyTG9jYWxlLCByb3V0ZXIgJiYgcm91dGVyLmRlZmF1bHRMb2NhbGUpKTtcbiAgICB9XG4gICAgcmV0dXJuIGxlZ2FjeUJlaGF2aW9yID8gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jbG9uZUVsZW1lbnQoY2hpbGQsIGNoaWxkUHJvcHMpIDogLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBPYmplY3QuYXNzaWduKHt9LCByZXN0UHJvcHMsIGNoaWxkUHJvcHMpLCBjaGlsZHJlbik7XG59KTtcbnZhciBfZGVmYXVsdCA9IExpbms7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGluay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwicmVxdWlyZSIsIl9vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlIiwiX3JlYWN0IiwiX3JvdXRlciIsIl9hZGRMb2NhbGUiLCJfcm91dGVyQ29udGV4dCIsIl9hcHBSb3V0ZXJDb250ZXh0IiwiX3VzZUludGVyc2VjdGlvbiIsIl9nZXREb21haW5Mb2NhbGUiLCJfYWRkQmFzZVBhdGgiLCJoYXNVc2VUcmFuc2l0aW9uIiwidXNlVHJhbnNpdGlvbiIsInByZWZldGNoZWQiLCJwcmVmZXRjaCIsInJvdXRlciIsImhyZWYiLCJhcyIsIm9wdGlvbnMiLCJpc0xvY2FsVVJMIiwiY2F0Y2giLCJlcnIiLCJwcm9jZXNzIiwiY3VyTG9jYWxlIiwibG9jYWxlIiwiaXNNb2RpZmllZEV2ZW50IiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwibWV0YUtleSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm5hdGl2ZUV2ZW50Iiwid2hpY2giLCJsaW5rQ2xpY2tlZCIsImUiLCJyZXBsYWNlIiwic29mdCIsInNoYWxsb3ciLCJzY3JvbGwiLCJzdGFydFRyYW5zaXRpb24iLCJub2RlTmFtZSIsImlzQW5jaG9yTm9kZU5hbWUiLCJ0b1VwcGVyQ2FzZSIsInByZXZlbnREZWZhdWx0IiwibmF2aWdhdGUiLCJtZXRob2QiLCJMaW5rIiwiZm9yd2FyZFJlZiIsIkxpbmtDb21wb25lbnQiLCJwcm9wcyIsImZvcndhcmRlZFJlZiIsImNyZWF0ZVByb3BFcnJvciIsImFyZ3MiLCJFcnJvciIsImtleSIsImV4cGVjdGVkIiwiYWN0dWFsIiwicmVxdWlyZWRQcm9wc0d1YXJkIiwicmVxdWlyZWRQcm9wcyIsImtleXMiLCJmb3JFYWNoIiwiXyIsIm9wdGlvbmFsUHJvcHNHdWFyZCIsInBhc3NIcmVmIiwib25DbGljayIsIm9uTW91c2VFbnRlciIsIm9uVG91Y2hTdGFydCIsImxlZ2FjeUJlaGF2aW9yIiwib3B0aW9uYWxQcm9wcyIsInZhbFR5cGUiLCJoYXNXYXJuZWQiLCJ1c2VSZWYiLCJjdXJyZW50IiwiY29uc29sZSIsIndhcm4iLCJjaGlsZHJlbiIsImhyZWZQcm9wIiwiYXNQcm9wIiwiY2hpbGRyZW5Qcm9wIiwicHJlZmV0Y2hQcm9wIiwiQm9vbGVhbiIsImVudiIsIl9fTkVYVF9ORVdfTElOS19CRUhBVklPUiIsInJlc3RQcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJwIiwidXNlQ29udGV4dCIsIlJvdXRlckNvbnRleHQiLCJhcHBSb3V0ZXIiLCJBcHBSb3V0ZXJDb250ZXh0IiwidXNlTWVtbyIsInJlc29sdmVkSHJlZiIsInJlc29sdmVkQXMiLCJyZXNvbHZlSHJlZiIsInByZXZpb3VzSHJlZiIsInByZXZpb3VzQXMiLCJjaGlsZCIsIkNoaWxkcmVuIiwib25seSIsImNoaWxkUmVmIiwicmVmIiwic2V0SW50ZXJzZWN0aW9uUmVmIiwiaXNWaXNpYmxlIiwicmVzZXRWaXNpYmxlIiwidXNlSW50ZXJzZWN0aW9uIiwicm9vdE1hcmdpbiIsInNldFJlZiIsInVzZUNhbGxiYWNrIiwiZWwiLCJ1c2VFZmZlY3QiLCJzaG91bGRQcmVmZXRjaCIsImlzUHJlZmV0Y2hlZCIsImNoaWxkUHJvcHMiLCJkZWZhdWx0UHJldmVudGVkIiwidW5kZWZpbmVkIiwicHJpb3JpdHkiLCJ0eXBlIiwibG9jYWxlRG9tYWluIiwiaXNMb2NhbGVEb21haW4iLCJnZXREb21haW5Mb2NhbGUiLCJsb2NhbGVzIiwiZG9tYWluTG9jYWxlcyIsImFkZEJhc2VQYXRoIiwiYWRkTG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImNsb25lRWxlbWVudCIsImFzc2lnbiIsIl9kZWZhdWx0IiwiX19lc01vZHVsZSIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.normalizePathTrailingSlash = void 0;\nvar _removeTrailingSlash = __webpack_require__(/*! ../shared/lib/router/utils/remove-trailing-slash */ \"../shared/lib/router/utils/remove-trailing-slash\");\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nconst normalizePathTrailingSlash = (path)=>{\n    if (!path.startsWith(\"/\")) {\n        return path;\n    }\n    const { pathname , query , hash  } = (0, _parsePath).parsePath(path);\n    if (false) {}\n    return `${(0, _removeTrailingSlash).removeTrailingSlash(pathname)}${query}${hash}`;\n};\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=normalize-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCxrQ0FBa0MsR0FBRyxLQUFLLENBQUMsQ0FBQztBQUM1QyxJQUFJRyxvQkFBb0IsR0FBR0MsbUJBQU8sQ0FBQywwR0FBa0QsQ0FBQztBQUN0RixJQUFJQyxVQUFVLEdBQUdELG1CQUFPLENBQUMsb0ZBQXVDLENBQUM7QUFDakUsTUFBTUYsMEJBQTBCLEdBQUcsQ0FBQ0ksSUFBSSxHQUFHO0lBQ3ZDLElBQUksQ0FBQ0EsSUFBSSxDQUFDQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDdkIsT0FBT0QsSUFBSSxDQUFDO0tBQ2Y7SUFDRCxNQUFNLEVBQUVFLFFBQVEsR0FBR0MsS0FBSyxHQUFHQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsRUFBRUwsVUFBVSxDQUFDLENBQUNNLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDO0lBQ3BFLElBQUlNLEtBQWlDLEVBQUUsRUFRdEM7SUFDRCxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRVQsb0JBQW9CLENBQUMsQ0FBQ2EsbUJBQW1CLENBQUNSLFFBQVEsQ0FBQyxDQUFDLEVBQUVDLEtBQUssQ0FBQyxFQUFFQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0NBQ3RGO0FBQ0RWLGtDQUFrQyxHQUFHRSwwQkFBMEIsQ0FBQztBQUVoRSxJQUFJLENBQUMsT0FBT0YsT0FBTyxDQUFDa0IsT0FBTyxLQUFLLFVBQVUsSUFBSyxPQUFPbEIsT0FBTyxDQUFDa0IsT0FBTyxLQUFLLFFBQVEsSUFBSWxCLE9BQU8sQ0FBQ2tCLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPbEIsT0FBTyxDQUFDa0IsT0FBTyxDQUFDQyxVQUFVLEtBQUssV0FBVyxFQUFFO0lBQ3JLckIsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sQ0FBQ2tCLE9BQU8sRUFBRSxZQUFZLEVBQUU7UUFBRWpCLEtBQUssRUFBRSxJQUFJO0tBQUUsQ0FBQyxDQUFDO0lBQ3RFSCxNQUFNLENBQUNzQixNQUFNLENBQUNwQixPQUFPLENBQUNrQixPQUFPLEVBQUVsQixPQUFPLENBQUMsQ0FBQztJQUN4Q3FCLE1BQU0sQ0FBQ3JCLE9BQU8sR0FBR0EsT0FBTyxDQUFDa0IsT0FBTyxDQUFDO0NBQ2xDLENBRUQsb0RBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L25vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcz80YzJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHZvaWQgMDtcbnZhciBfcmVtb3ZlVHJhaWxpbmdTbGFzaCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtdHJhaWxpbmctc2xhc2hcIik7XG52YXIgX3BhcnNlUGF0aCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXJzZS1wYXRoXCIpO1xuY29uc3Qgbm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSAocGF0aCk9PntcbiAgICBpZiAoIXBhdGguc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgLCBoYXNoICB9ID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChwYXRoKTtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX1RSQUlMSU5HX1NMQVNIKSB7XG4gICAgICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRobmFtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHsoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSBpZiAocGF0aG5hbWUuZW5kc1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGAke3BhdGhuYW1lfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7cGF0aG5hbWV9LyR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGAkeygwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZSl9JHtxdWVyeX0ke2hhc2h9YDtcbn07XG5leHBvcnRzLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gbm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2g7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsIl9yZW1vdmVUcmFpbGluZ1NsYXNoIiwicmVxdWlyZSIsIl9wYXJzZVBhdGgiLCJwYXRoIiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicXVlcnkiLCJoYXNoIiwicGFyc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9UUkFJTElOR19TTEFTSCIsInRlc3QiLCJyZW1vdmVUcmFpbGluZ1NsYXNoIiwiZW5kc1dpdGgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/remove-base-path.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/remove-base-path.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removeBasePath = removeBasePath;\nvar _hasBasePath = __webpack_require__(/*! ./has-base-path */ \"./node_modules/next/dist/client/has-base-path.js\");\nconst basePath =  false || \"\";\nfunction removeBasePath(path) {\n    if (false) {}\n    path = path.slice(basePath.length);\n    if (!path.startsWith(\"/\")) path = `/${path}`;\n    return path;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=remove-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZW1vdmUtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csS0FBSyxFQUFFLElBQUk7Q0FDZCxFQUFDLENBQUM7QUFDSEQsc0JBQXNCLEdBQUdFLGNBQWMsQ0FBQztBQUN4QyxJQUFJQyxZQUFZLEdBQUdDLG1CQUFPLENBQUMseUVBQWlCLENBQUM7QUFDN0MsTUFBTUMsUUFBUSxHQUFHQyxNQUFrQyxJQUFJLEVBQUU7QUFDekQsU0FBU0osY0FBYyxDQUFDTyxJQUFJLEVBQUU7SUFDMUIsSUFBSUgsS0FBMEMsRUFBRSxFQUkvQztJQUNERyxJQUFJLEdBQUdBLElBQUksQ0FBQ0csS0FBSyxDQUFDUCxRQUFRLENBQUNRLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLElBQUksQ0FBQ0osSUFBSSxDQUFDSyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUVMLElBQUksR0FBRyxDQUFDLENBQUMsRUFBRUEsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUM3QyxPQUFPQSxJQUFJLENBQUM7Q0FDZjtBQUVELElBQUksQ0FBQyxPQUFPVCxPQUFPLENBQUNlLE9BQU8sS0FBSyxVQUFVLElBQUssT0FBT2YsT0FBTyxDQUFDZSxPQUFPLEtBQUssUUFBUSxJQUFJZixPQUFPLENBQUNlLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPZixPQUFPLENBQUNlLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtJQUNyS2xCLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLENBQUNlLE9BQU8sRUFBRSxZQUFZLEVBQUU7UUFBRWQsS0FBSyxFQUFFLElBQUk7S0FBRSxDQUFDLENBQUM7SUFDdEVILE1BQU0sQ0FBQ21CLE1BQU0sQ0FBQ2pCLE9BQU8sQ0FBQ2UsT0FBTyxFQUFFZixPQUFPLENBQUMsQ0FBQztJQUN4Q2tCLE1BQU0sQ0FBQ2xCLE9BQU8sR0FBR0EsT0FBTyxDQUFDZSxPQUFPLENBQUM7Q0FDbEMsQ0FFRCw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWJhc2UtcGF0aC5qcz9iNGYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZW1vdmVCYXNlUGF0aCA9IHJlbW92ZUJhc2VQYXRoO1xudmFyIF9oYXNCYXNlUGF0aCA9IHJlcXVpcmUoXCIuL2hhcy1iYXNlLXBhdGhcIik7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiByZW1vdmVCYXNlUGF0aChwYXRoKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9NQU5VQUxfQ0xJRU5UX0JBU0VfUEFUSCkge1xuICAgICAgICBpZiAoISgwLCBfaGFzQmFzZVBhdGgpLmhhc0Jhc2VQYXRoKHBhdGgpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwYXRoID0gcGF0aC5zbGljZShiYXNlUGF0aC5sZW5ndGgpO1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKCcvJykpIHBhdGggPSBgLyR7cGF0aH1gO1xuICAgIHJldHVybiBwYXRoO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtYmFzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInJlbW92ZUJhc2VQYXRoIiwiX2hhc0Jhc2VQYXRoIiwicmVxdWlyZSIsImJhc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ST1VURVJfQkFTRVBBVEgiLCJwYXRoIiwiX19ORVhUX01BTlVBTF9DTElFTlRfQkFTRV9QQVRIIiwiaGFzQmFzZVBhdGgiLCJzbGljZSIsImxlbmd0aCIsInN0YXJ0c1dpdGgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/remove-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/remove-locale.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/remove-locale.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removeLocale = removeLocale;\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nfunction removeLocale(path, locale) {\n    if (false) {}\n    return path;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=remove-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZW1vdmUtbG9jYWxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csS0FBSyxFQUFFLElBQUk7Q0FDZCxFQUFDLENBQUM7QUFDSEQsb0JBQW9CLEdBQUdFLFlBQVksQ0FBQztBQUNwQyxJQUFJQyxVQUFVLEdBQUdDLG1CQUFPLENBQUMsb0ZBQXVDLENBQUM7QUFDakUsU0FBU0YsWUFBWSxDQUFDRyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtJQUNoQyxJQUFJQyxLQUErQixFQUFFLEVBS3BDO0lBQ0QsT0FBT0YsSUFBSSxDQUFDO0NBQ2Y7QUFFRCxJQUFJLENBQUMsT0FBT0wsT0FBTyxDQUFDa0IsT0FBTyxLQUFLLFVBQVUsSUFBSyxPQUFPbEIsT0FBTyxDQUFDa0IsT0FBTyxLQUFLLFFBQVEsSUFBSWxCLE9BQU8sQ0FBQ2tCLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPbEIsT0FBTyxDQUFDa0IsT0FBTyxDQUFDQyxVQUFVLEtBQUssV0FBVyxFQUFFO0lBQ3JLckIsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sQ0FBQ2tCLE9BQU8sRUFBRSxZQUFZLEVBQUU7UUFBRWpCLEtBQUssRUFBRSxJQUFJO0tBQUUsQ0FBQyxDQUFDO0lBQ3RFSCxNQUFNLENBQUNzQixNQUFNLENBQUNwQixPQUFPLENBQUNrQixPQUFPLEVBQUVsQixPQUFPLENBQUMsQ0FBQztJQUN4Q3FCLE1BQU0sQ0FBQ3JCLE9BQU8sR0FBR0EsT0FBTyxDQUFDa0IsT0FBTyxDQUFDO0NBQ2xDLENBRUQseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlbW92ZS1sb2NhbGUuanM/NDc1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucmVtb3ZlTG9jYWxlID0gcmVtb3ZlTG9jYWxlO1xudmFyIF9wYXJzZVBhdGggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aFwiKTtcbmZ1bmN0aW9uIHJlbW92ZUxvY2FsZShwYXRoLCBsb2NhbGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICBjb25zdCB7IHBhdGhuYW1lICB9ID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChwYXRoKTtcbiAgICAgICAgY29uc3QgcGF0aExvd2VyID0gcGF0aG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgY29uc3QgbG9jYWxlTG93ZXIgPSBsb2NhbGUgPT0gbnVsbCA/IHZvaWQgMCA6IGxvY2FsZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXR1cm4gbG9jYWxlICYmIChwYXRoTG93ZXIuc3RhcnRzV2l0aChgLyR7bG9jYWxlTG93ZXJ9L2ApIHx8IHBhdGhMb3dlciA9PT0gYC8ke2xvY2FsZUxvd2VyfWApID8gYCR7cGF0aG5hbWUubGVuZ3RoID09PSBsb2NhbGUubGVuZ3RoICsgMSA/IGAvYCA6IGBgfSR7cGF0aC5zbGljZShsb2NhbGUubGVuZ3RoICsgMSl9YCA6IHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInJlbW92ZUxvY2FsZSIsIl9wYXJzZVBhdGgiLCJyZXF1aXJlIiwicGF0aCIsImxvY2FsZSIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfSTE4Tl9TVVBQT1JUIiwicGF0aG5hbWUiLCJwYXJzZVBhdGgiLCJwYXRoTG93ZXIiLCJ0b0xvd2VyQ2FzZSIsImxvY2FsZUxvd2VyIiwic3RhcnRzV2l0aCIsImxlbmd0aCIsInNsaWNlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/remove-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nexports.requestIdleCallback = requestIdleCallback;\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nexports.cancelIdleCallback = cancelIdleCallback;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-idle-callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCwwQkFBMEIsR0FBR0EsMkJBQTJCLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDbEUsTUFBTUcsbUJBQW1CLEdBQUcsT0FBT0MsSUFBSSxLQUFLLFdBQVcsSUFBSUEsSUFBSSxDQUFDRCxtQkFBbUIsSUFBSUMsSUFBSSxDQUFDRCxtQkFBbUIsQ0FBQ0UsSUFBSSxDQUFDQyxNQUFNLENBQUMsSUFBSSxTQUFTQyxFQUFFLEVBQUU7SUFDekksSUFBSUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLEdBQUcsRUFBRTtJQUN0QixPQUFPQyxVQUFVLENBQUMsV0FBVztRQUN6QkosRUFBRSxDQUFDO1lBQ0NLLFVBQVUsRUFBRSxLQUFLO1lBQ2pCQyxhQUFhLEVBQUUsV0FBVztnQkFDdEIsT0FBT0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDTixJQUFJLENBQUNDLEdBQUcsRUFBRSxHQUFHRixLQUFLLENBQUMsQ0FBQyxDQUFDO2FBQ2pEO1NBQ0osQ0FBQyxDQUFDO0tBQ04sRUFBRSxDQUFDLENBQUMsQ0FBQztDQUNUO0FBQ0RSLDJCQUEyQixHQUFHRyxtQkFBbUIsQ0FBQztBQUNsRCxNQUFNRCxrQkFBa0IsR0FBRyxPQUFPRSxJQUFJLEtBQUssV0FBVyxJQUFJQSxJQUFJLENBQUNGLGtCQUFrQixJQUFJRSxJQUFJLENBQUNGLGtCQUFrQixDQUFDRyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxJQUFJLFNBQVNVLEVBQUUsRUFBRTtJQUN0SSxPQUFPQyxZQUFZLENBQUNELEVBQUUsQ0FBQyxDQUFDO0NBQzNCO0FBQ0RoQiwwQkFBMEIsR0FBR0Usa0JBQWtCLENBQUM7QUFFaEQsSUFBSSxDQUFDLE9BQU9GLE9BQU8sQ0FBQ2tCLE9BQU8sS0FBSyxVQUFVLElBQUssT0FBT2xCLE9BQU8sQ0FBQ2tCLE9BQU8sS0FBSyxRQUFRLElBQUlsQixPQUFPLENBQUNrQixPQUFPLEtBQUssSUFBSSxDQUFFLElBQUksT0FBT2xCLE9BQU8sQ0FBQ2tCLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtJQUNyS3JCLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLENBQUNrQixPQUFPLEVBQUUsWUFBWSxFQUFFO1FBQUVqQixLQUFLLEVBQUUsSUFBSTtLQUFFLENBQUMsQ0FBQztJQUN0RUgsTUFBTSxDQUFDc0IsTUFBTSxDQUFDcEIsT0FBTyxDQUFDa0IsT0FBTyxFQUFFbEIsT0FBTyxDQUFDLENBQUM7SUFDeENxQixNQUFNLENBQUNyQixPQUFPLEdBQUdBLE9BQU8sQ0FBQ2tCLE9BQU8sQ0FBQztDQUNsQyxDQUVELGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanM/MWUyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gZXhwb3J0cy5yZXF1ZXN0SWRsZUNhbGxiYWNrID0gdm9pZCAwO1xuY29uc3QgcmVxdWVzdElkbGVDYWxsYmFjayA9IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2sgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihjYikge1xuICAgIGxldCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNiKHtcbiAgICAgICAgICAgIGRpZFRpbWVvdXQ6IGZhbHNlLFxuICAgICAgICAgICAgdGltZVJlbWFpbmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIDUwIC0gKERhdGUubm93KCkgLSBzdGFydCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LCAxKTtcbn07XG5leHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSByZXF1ZXN0SWRsZUNhbGxiYWNrO1xuY29uc3QgY2FuY2VsSWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihpZCkge1xuICAgIHJldHVybiBjbGVhclRpbWVvdXQoaWQpO1xufTtcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gY2FuY2VsSWRsZUNhbGxiYWNrO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwicmVxdWVzdElkbGVDYWxsYmFjayIsInNlbGYiLCJiaW5kIiwid2luZG93IiwiY2IiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiZGlkVGltZW91dCIsInRpbWVSZW1haW5pbmciLCJNYXRoIiwibWF4IiwiaWQiLCJjbGVhclRpbWVvdXQiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.createRouteLoader = createRouteLoader;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _getAssetPathFromRoute = _interop_require_default(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\nvar _trustedTypes = __webpack_require__(/*! ./trusted-types */ \"./node_modules/next/dist/client/trusted-types.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800;\nfunction withFuture(key, map, generator) {\n    let entry = map.get(key);\n    if (entry) {\n        if (\"future\" in entry) {\n            return entry.future;\n        }\n        return Promise.resolve(entry);\n    }\n    let resolver;\n    const prom = new Promise((resolve)=>{\n        resolver = resolve;\n    });\n    map.set(key, entry = {\n        resolve: resolver,\n        future: prom\n    });\n    return generator ? generator() // eslint-disable-next-line no-sequences\n    .then((value)=>(resolver(value), value)).catch((err)=>{\n        map.delete(key);\n        throw err;\n    }) : prom;\n}\nfunction hasPrefetch(link) {\n    try {\n        link = document.createElement(\"link\");\n        return(// with relList.support\n        (!!window.MSInputMethodContext && !!document.documentMode) || link.relList.supports(\"prefetch\"));\n    } catch (e) {\n        return false;\n    }\n}\nconst canPrefetch = hasPrefetch();\nfunction prefetchViaDom(href, as, link) {\n    return new Promise((res, rej)=>{\n        const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n        if (document.querySelector(selector)) {\n            return res();\n        }\n        link = document.createElement(\"link\");\n        // The order of property assignment here is intentional:\n        if (as) link.as = as;\n        link.rel = `prefetch`;\n        link.crossOrigin = undefined;\n        link.onload = res;\n        link.onerror = rej;\n        // `href` should always be last:\n        link.href = href;\n        document.head.appendChild(link);\n    });\n}\nconst ASSET_LOAD_ERROR = Symbol(\"ASSET_LOAD_ERROR\");\nfunction markAssetError(err) {\n    return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\nfunction isAssetError(err) {\n    return err && ASSET_LOAD_ERROR in err;\n}\nfunction appendScript(src, script) {\n    return new Promise((resolve, reject)=>{\n        script = document.createElement(\"script\");\n        // The order of property assignment here is intentional.\n        // 1. Setup success/failure hooks in case the browser synchronously\n        //    executes when `src` is set.\n        script.onload = resolve;\n        script.onerror = ()=>reject(markAssetError(new Error(`Failed to load script: ${src}`)));\n        // 2. Configure the cross-origin attribute before setting `src` in case the\n        //    browser begins to fetch.\n        script.crossOrigin = undefined;\n        // 3. Finally, set the source and inject into the DOM in case the child\n        //    must be appended for fetching to start.\n        script.src = src;\n        document.body.appendChild(script);\n    });\n}\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise;\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout(p, ms, err) {\n    return new Promise((resolve, reject)=>{\n        let cancelled = false;\n        p.then((r)=>{\n            // Resolved, cancel the timeout\n            cancelled = true;\n            resolve(r);\n        }).catch(reject);\n        // We wrap these checks separately for better dead-code elimination in\n        // production bundles.\n        if (true) {\n            (devBuildPromise || Promise.resolve()).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>setTimeout(()=>{\n                        if (!cancelled) {\n                            reject(err);\n                        }\n                    }, ms));\n            });\n        }\n        if (false) {}\n    });\n}\nfunction getClientBuildManifest() {\n    if (self.__BUILD_MANIFEST) {\n        return Promise.resolve(self.__BUILD_MANIFEST);\n    }\n    const onBuildManifest = new Promise((resolve)=>{\n        // Mandatory because this is not concurrent safe:\n        const cb = self.__BUILD_MANIFEST_CB;\n        self.__BUILD_MANIFEST_CB = ()=>{\n            resolve(self.__BUILD_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Failed to load client build manifest\")));\n}\nfunction getFilesForRoute(assetPrefix, route) {\n    if (true) {\n        const scriptUrl = assetPrefix + \"/_next/static/chunks/pages\" + encodeURI((0, _getAssetPathFromRoute).default(route, \".js\"));\n        return Promise.resolve({\n            scripts: [\n                (0, _trustedTypes).__unsafeCreateTrustedScriptURL(scriptUrl)\n            ],\n            // Styles are handled by `style-loader` in development:\n            css: []\n        });\n    }\n    return getClientBuildManifest().then((manifest)=>{\n        if (!(route in manifest)) {\n            throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n        }\n        const allFiles = manifest[route].map((entry)=>assetPrefix + \"/_next/\" + encodeURI(entry));\n        return {\n            scripts: allFiles.filter((v)=>v.endsWith(\".js\")).map((v)=>(0, _trustedTypes).__unsafeCreateTrustedScriptURL(v)),\n            css: allFiles.filter((v)=>v.endsWith(\".css\"))\n        };\n    });\n}\nfunction createRouteLoader(assetPrefix) {\n    const entrypoints = new Map();\n    const loadedScripts = new Map();\n    const styleSheets = new Map();\n    const routes = new Map();\n    function maybeExecuteScript(src) {\n        // With HMR we might need to \"reload\" scripts when they are\n        // disposed and readded. Executing scripts twice has no functional\n        // differences\n        if (false) {} else {\n            return appendScript(src);\n        }\n    }\n    function fetchStyleSheet(href) {\n        let prom = styleSheets.get(href);\n        if (prom) {\n            return prom;\n        }\n        styleSheets.set(href, prom = fetch(href).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to load stylesheet: ${href}`);\n            }\n            return res.text().then((text)=>({\n                    href: href,\n                    content: text\n                }));\n        }).catch((err)=>{\n            throw markAssetError(err);\n        }));\n        return prom;\n    }\n    return {\n        whenEntrypoint (route) {\n            return withFuture(route, entrypoints);\n        },\n        onEntrypoint (route, execute) {\n            (execute ? Promise.resolve().then(()=>execute()).then((exports1)=>({\n                    component: exports1 && exports1.default || exports1,\n                    exports: exports1\n                }), (err)=>({\n                    error: err\n                })) : Promise.resolve(undefined)).then((input)=>{\n                const old = entrypoints.get(route);\n                if (old && \"resolve\" in old) {\n                    if (input) {\n                        entrypoints.set(route, input);\n                        old.resolve(input);\n                    }\n                } else {\n                    if (input) {\n                        entrypoints.set(route, input);\n                    } else {\n                        entrypoints.delete(route);\n                    }\n                    // when this entrypoint has been resolved before\n                    // the route is outdated and we want to invalidate\n                    // this cache entry\n                    routes.delete(route);\n                }\n            });\n        },\n        loadRoute (route, prefetch) {\n            return withFuture(route, routes, ()=>{\n                let devBuildPromiseResolve;\n                if (true) {\n                    devBuildPromise = new Promise((resolve)=>{\n                        devBuildPromiseResolve = resolve;\n                    });\n                }\n                return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({ scripts , css  })=>{\n                    return Promise.all([\n                        entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)),\n                        Promise.all(css.map(fetchStyleSheet)), \n                    ]);\n                }).then((res)=>{\n                    return this.whenEntrypoint(route).then((entrypoint)=>({\n                            entrypoint,\n                            styles: res[1]\n                        }));\n                }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({ entrypoint , styles  })=>{\n                    const res = Object.assign({\n                        styles: styles\n                    }, entrypoint);\n                    return \"error\" in entrypoint ? entrypoint : res;\n                }).catch((err)=>{\n                    if (prefetch) {\n                        // we don't want to cache errors during prefetch\n                        throw err;\n                    }\n                    return {\n                        error: err\n                    };\n                }).finally(()=>{\n                    return devBuildPromiseResolve == null ? void 0 : devBuildPromiseResolve();\n                });\n            });\n        },\n        prefetch (route) {\n            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n            // License: Apache 2.0\n            let cn;\n            if (cn = navigator.connection) {\n                // Don't prefetch if using 2G or if Save-Data is enabled.\n                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n            }\n            return getFilesForRoute(assetPrefix, route).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script.toString(), \"script\")) : [])).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>this.loadRoute(route, true).catch(()=>{}));\n            }).catch(()=>{});\n        }\n    };\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=route-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/script.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/script.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.handleClientScriptLoad = handleClientScriptLoad;\nexports.initScriptLoader = initScriptLoader;\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _headManagerContext = __webpack_require__(/*! ../shared/lib/head-manager-context */ \"../shared/lib/head-manager-context\");\nvar _headManager = __webpack_require__(/*! ./head-manager */ \"./node_modules/next/dist/client/head-manager.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = [\n    \"onLoad\",\n    \"onReady\",\n    \"dangerouslySetInnerHTML\",\n    \"children\",\n    \"onError\",\n    \"strategy\", \n];\nconst loadScript = (props)=>{\n    const { src , id , onLoad =()=>{} , onReady =null , dangerouslySetInnerHTML , children =\"\" , strategy =\"afterInteractive\" , onError ,  } = props;\n    const cacheKey = id || src;\n    // Script has already loaded\n    if (cacheKey && LoadCache.has(cacheKey)) {\n        return;\n    }\n    // Contents of this script are already loading/loaded\n    if (ScriptCache.has(src)) {\n        LoadCache.add(cacheKey);\n        // Execute onLoad since the script loading has begun\n        ScriptCache.get(src).then(onLoad, onError);\n        return;\n    }\n    const el = document.createElement(\"script\");\n    const loadPromise = new Promise((resolve, reject)=>{\n        el.addEventListener(\"load\", function(e) {\n            resolve();\n            if (onLoad) {\n                onLoad.call(this, e);\n            }\n            // Run onReady for the first time after load event\n            if (onReady) {\n                onReady();\n            }\n        });\n        el.addEventListener(\"error\", function(e) {\n            reject(e);\n        });\n    }).catch(function(e) {\n        if (onError) {\n            onError(e);\n        }\n    });\n    if (src) {\n        ScriptCache.set(src, loadPromise);\n    }\n    LoadCache.add(cacheKey);\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    } else if (src) {\n        el.src = src;\n    }\n    for (const [k, value] of Object.entries(props)){\n        if (value === undefined || ignoreProps.includes(k)) {\n            continue;\n        }\n        const attr = _headManager.DOMAttributeNames[k] || k.toLowerCase();\n        el.setAttribute(attr, value);\n    }\n    if (strategy === \"worker\") {\n        el.setAttribute(\"type\", \"text/partytown\");\n    }\n    el.setAttribute(\"data-nscript\", strategy);\n    document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n    const { strategy =\"afterInteractive\"  } = props;\n    if (strategy === \"lazyOnload\") {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n        });\n    } else {\n        loadScript(props);\n    }\n}\nfunction loadLazyScript(props) {\n    if (document.readyState === \"complete\") {\n        (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n    } else {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n        });\n    }\n}\nfunction addBeforeInteractiveToCache() {\n    const scripts = [\n        ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n        ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'), \n    ];\n    scripts.forEach((script)=>{\n        const cacheKey = script.id || script.getAttribute(\"src\");\n        LoadCache.add(cacheKey);\n    });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n    scriptLoaderItems.forEach(handleClientScriptLoad);\n    addBeforeInteractiveToCache();\n}\nfunction Script(props) {\n    const { id , src =\"\" , onLoad =()=>{} , onReady =null , strategy =\"afterInteractive\" , onError  } = props, restProps = _object_without_properties_loose(props, [\n        \"id\",\n        \"src\",\n        \"onLoad\",\n        \"onReady\",\n        \"strategy\",\n        \"onError\"\n    ]);\n    // Context is available only during SSR\n    const { updateScripts , scripts , getIsSsr  } = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n    (0, _react).useEffect(()=>{\n        const cacheKey = id || src;\n        // Run onReady if script has loaded before but component is re-mounted\n        if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n            onReady();\n        }\n    }, [\n        onReady,\n        id,\n        src\n    ]);\n    (0, _react).useEffect(()=>{\n        if (strategy === \"afterInteractive\") {\n            loadScript(props);\n        } else if (strategy === \"lazyOnload\") {\n            loadLazyScript(props);\n        }\n    }, [\n        props,\n        strategy\n    ]);\n    if (strategy === \"beforeInteractive\" || strategy === \"worker\") {\n        if (updateScripts) {\n            scripts[strategy] = (scripts[strategy] || []).concat([\n                _extends({\n                    id,\n                    src,\n                    onLoad,\n                    onReady,\n                    onError\n                }, restProps), \n            ]);\n            updateScripts(scripts);\n        } else if (getIsSsr && getIsSsr()) {\n            // Script has already loaded during SSR\n            LoadCache.add(id || src);\n        } else if (getIsSsr && !getIsSsr()) {\n            loadScript(props);\n        }\n    }\n    return null;\n}\nvar _default = Script;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=script.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/script.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/trusted-types.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/trusted-types.js ***!
  \********************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.__unsafeCreateTrustedScriptURL = __unsafeCreateTrustedScriptURL;\n/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */ let policy;\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */ function getPolicy() {\n    if (typeof policy === \"undefined\" && \"undefined\" !== \"undefined\") { var ref; }\n    return policy;\n}\nfunction __unsafeCreateTrustedScriptURL(url) {\n    var ref;\n    return ((ref = getPolicy()) == null ? void 0 : ref.createScriptURL(url)) || url;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=trusted-types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC90cnVzdGVkLXR5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csS0FBSyxFQUFFLElBQUk7Q0FDZCxFQUFDLENBQUM7QUFDSEQsc0NBQXNDLEdBQUdFLDhCQUE4QixDQUFDO0FBQ3hFOzs7Q0FHQyxHQUFHLElBQUlDLE1BQU07QUFDZDs7O0NBR0MsR0FBRyxTQUFTQyxTQUFTLEdBQUc7SUFDckIsSUFBSSxPQUFPRCxNQUFNLEtBQUssV0FBVyxJQUFJLFdBQWEsS0FBSyxXQUFXLEVBQUUsWUFPbkU7SUFDRCxPQUFPQSxNQUFNLENBQUM7Q0FDakI7QUFDRCxTQUFTRCw4QkFBOEIsQ0FBQ1csR0FBRyxFQUFFO0lBQ3pDLElBQUlSLEdBQUc7SUFDUCxPQUFPLENBQUMsQ0FBQ0EsR0FBRyxHQUFHRCxTQUFTLEVBQUUsQ0FBQyxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0MsR0FBRyxDQUFDTyxlQUFlLENBQUNDLEdBQUcsQ0FBQyxDQUFDLElBQUlBLEdBQUcsQ0FBQztDQUNuRjtBQUVELElBQUksQ0FBQyxPQUFPYixPQUFPLENBQUNjLE9BQU8sS0FBSyxVQUFVLElBQUssT0FBT2QsT0FBTyxDQUFDYyxPQUFPLEtBQUssUUFBUSxJQUFJZCxPQUFPLENBQUNjLE9BQU8sS0FBSyxJQUFJLENBQUUsSUFBSSxPQUFPZCxPQUFPLENBQUNjLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtJQUNyS2pCLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLENBQUNjLE9BQU8sRUFBRSxZQUFZLEVBQUU7UUFBRWIsS0FBSyxFQUFFLElBQUk7S0FBRSxDQUFDLENBQUM7SUFDdEVILE1BQU0sQ0FBQ2tCLE1BQU0sQ0FBQ2hCLE9BQU8sQ0FBQ2MsT0FBTyxFQUFFZCxPQUFPLENBQUMsQ0FBQztJQUN4Q2lCLE1BQU0sQ0FBQ2pCLE9BQU8sR0FBR0EsT0FBTyxDQUFDYyxPQUFPLENBQUM7Q0FDbEMsQ0FFRCx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvdHJ1c3RlZC10eXBlcy5qcz9hNDExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5fX3Vuc2FmZUNyZWF0ZVRydXN0ZWRTY3JpcHRVUkwgPSBfX3Vuc2FmZUNyZWF0ZVRydXN0ZWRTY3JpcHRVUkw7XG4vKipcbiAqIFN0b3JlcyB0aGUgVHJ1c3RlZCBUeXBlcyBQb2xpY3kuIFN0YXJ0cyBhcyB1bmRlZmluZWQgYW5kIGNhbiBiZSBzZXQgdG8gbnVsbFxuICogaWYgVHJ1c3RlZCBUeXBlcyBpcyBub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyLlxuICovIGxldCBwb2xpY3k7XG4vKipcbiAqIEdldHRlciBmb3IgdGhlIFRydXN0ZWQgVHlwZXMgUG9saWN5LiBJZiBpdCBpcyB1bmRlZmluZWQsIGl0IGlzIGluc3RhbnRpYXRlZFxuICogaGVyZSBvciBzZXQgdG8gbnVsbCBpZiBUcnVzdGVkIFR5cGVzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIuXG4gKi8gZnVuY3Rpb24gZ2V0UG9saWN5KCkge1xuICAgIGlmICh0eXBlb2YgcG9saWN5ID09PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YXIgcmVmO1xuICAgICAgICBwb2xpY3kgPSAoKHJlZiA9IHdpbmRvdy50cnVzdGVkVHlwZXMpID09IG51bGwgPyB2b2lkIDAgOiByZWYuY3JlYXRlUG9saWN5KCduZXh0anMnLCB7XG4gICAgICAgICAgICBjcmVhdGVIVE1MOiAoaW5wdXQpPT5pbnB1dCxcbiAgICAgICAgICAgIGNyZWF0ZVNjcmlwdDogKGlucHV0KT0+aW5wdXQsXG4gICAgICAgICAgICBjcmVhdGVTY3JpcHRVUkw6IChpbnB1dCk9PmlucHV0XG4gICAgICAgIH0pKSB8fCBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gcG9saWN5O1xufVxuZnVuY3Rpb24gX191bnNhZmVDcmVhdGVUcnVzdGVkU2NyaXB0VVJMKHVybCkge1xuICAgIHZhciByZWY7XG4gICAgcmV0dXJuICgocmVmID0gZ2V0UG9saWN5KCkpID09IG51bGwgPyB2b2lkIDAgOiByZWYuY3JlYXRlU2NyaXB0VVJMKHVybCkpIHx8IHVybDtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJ1c3RlZC10eXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfX3Vuc2FmZUNyZWF0ZVRydXN0ZWRTY3JpcHRVUkwiLCJwb2xpY3kiLCJnZXRQb2xpY3kiLCJyZWYiLCJ3aW5kb3ciLCJ0cnVzdGVkVHlwZXMiLCJjcmVhdGVQb2xpY3kiLCJjcmVhdGVIVE1MIiwiaW5wdXQiLCJjcmVhdGVTY3JpcHQiLCJjcmVhdGVTY3JpcHRVUkwiLCJ1cmwiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/trusted-types.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"react\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nfunction useIntersection({ rootRef , rootMargin , disabled  }) {\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const unobserve = (0, _react).useRef();\n    const [visible, setVisible] = (0, _react).useState(false);\n    const [element, setElement] = (0, _react).useState(null);\n    (0, _react).useEffect(()=>{\n        if (hasIntersectionObserver) {\n            if (unobserve.current) {\n                unobserve.current();\n                unobserve.current = undefined;\n            }\n            if (isDisabled || visible) return;\n            if (element && element.tagName) {\n                unobserve.current = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n            }\n            return ()=>{\n                unobserve.current == null ? void 0 : unobserve.current();\n                unobserve.current = undefined;\n            };\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true));\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n            }\n        }\n    }, [\n        element,\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\nconst observers = new Map();\nconst idList = [];\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports.createKey = createKey;\nexports[\"default\"] = void 0;\nvar _async_to_generator = (__webpack_require__(/*! @swc/helpers/lib/_async_to_generator.js */ \"./node_modules/@swc/helpers/lib/_async_to_generator.js\")[\"default\"]);\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nvar _removeTrailingSlash = __webpack_require__(/*! ./utils/remove-trailing-slash */ \"../shared/lib/router/utils/remove-trailing-slash\");\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\nvar _script = __webpack_require__(/*! ../../../client/script */ \"./node_modules/next/dist/client/script.js\");\nvar _isError = _interop_require_wildcard(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _denormalizePagePath = __webpack_require__(/*! ../page-path/denormalize-page-path */ \"../page-path/denormalize-page-path\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\nvar _mitt = _interop_require_default(__webpack_require__(/*! ../mitt */ \"../mitt\"));\nvar _utils = __webpack_require__(/*! ../utils */ \"../../shared/lib/utils\");\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\nvar _resolveRewrites = _interop_require_default(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\nvar _formatUrl = __webpack_require__(/*! ./utils/format-url */ \"./utils/format-url\");\nvar _detectDomainLocale = __webpack_require__(/*! ../../../client/detect-domain-locale */ \"./node_modules/next/dist/client/detect-domain-locale.js\");\nvar _parsePath = __webpack_require__(/*! ./utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nvar _addLocale = __webpack_require__(/*! ../../../client/add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\nvar _removeLocale = __webpack_require__(/*! ../../../client/remove-locale */ \"./node_modules/next/dist/client/remove-locale.js\");\nvar _removeBasePath = __webpack_require__(/*! ../../../client/remove-base-path */ \"./node_modules/next/dist/client/remove-base-path.js\");\nvar _addBasePath = __webpack_require__(/*! ../../../client/add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\nvar _hasBasePath = __webpack_require__(/*! ../../../client/has-base-path */ \"./node_modules/next/dist/client/has-base-path.js\");\nvar _getNextPathnameInfo = __webpack_require__(/*! ./utils/get-next-pathname-info */ \"./utils/get-next-pathname-info\");\nvar _formatNextPathnameInfo = __webpack_require__(/*! ./utils/format-next-pathname-info */ \"./utils/format-next-pathname-info\");\nvar _compareStates = __webpack_require__(/*! ./utils/compare-states */ \"./utils/compare-states\");\nfunction buildCancellationError() {\n    return Object.assign(new Error(\"Route Cancelled\"), {\n        cancelled: true\n    });\n}\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils).isAbsoluteUrl(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils).getLocationOrigin();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasBasePath).hasBasePath(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n}\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = \"\";\n    const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : \"\") || // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || \"\";\n        const { repeat , optional  } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = `[${repeat ? \"...\" : \"\"}${param}]`;\n        if (optional) {\n            replaced = `${!value ? \"/\" : \"\"}[${replaced}]`;\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)).join(\"/\") : encodeURIComponent(value)) || \"/\");\n    })) {\n        interpolatedRoute = \"\" // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n}\nfunction omit(object, keys) {\n    const omitted = {};\n    Object.keys(object).forEach((key)=>{\n        if (!keys.includes(key)) {\n            omitted[key] = object[key];\n        }\n    });\n    return omitted;\n}\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === \"string\" ? href : (0, _formatUrl).formatWithValidation(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split(\"?\");\n    if ((urlParts[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n        console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n        const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : \"\") + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!isLocalURL(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith(\"#\") ? router.asPath : router.pathname, \"http://n\");\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL(\"/\", \"http://n\");\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n        let interpolatedAs = \"\";\n        if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n            const { result , params  } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _formatUrl).formatWithValidation({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: omit(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_1) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nfunction stripOrigin(url) {\n    const origin = (0, _utils).getLocationOrigin();\n    return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\nfunction prepareUrlAs(router, url, as) {\n    // If url and as provided as an object representation,\n    // we'll format them into the string version here.\n    let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n    const origin = (0, _utils).getLocationOrigin();\n    const hrefHadOrigin = resolvedHref.startsWith(origin);\n    const asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n    resolvedHref = stripOrigin(resolvedHref);\n    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n    const preparedUrl = hrefHadOrigin ? resolvedHref : (0, _addBasePath).addBasePath(resolvedHref);\n    const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n    return {\n        url: preparedUrl,\n        as: asHadOrigin ? preparedAs : (0, _addBasePath).addBasePath(preparedAs)\n    };\n}\nfunction resolveDynamicRoute(pathname, pages) {\n    const cleanPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n    if (cleanPathname === \"/404\" || cleanPathname === \"/_error\") {\n        return pathname;\n    }\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some((page)=>{\n            if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n                pathname = page;\n                return true;\n            }\n        });\n    }\n    return (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n}\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol(\"SSG_DATA_NOT_FOUND\");\nfunction fetchRetry(url, attempts, options) {\n    return fetch(url, {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: \"same-origin\",\n        method: options.method || \"GET\",\n        headers: Object.assign({}, options.headers, {\n            \"x-nextjs-data\": \"1\"\n        })\n    }).then((response)=>{\n        return !response.ok && attempts > 1 && response.status >= 500 ? fetchRetry(url, attempts - 1, options) : response;\n    });\n}\nconst backgroundCache = {};\nfunction fetchNextData({ dataHref , inflightCache , isPrefetch , hasMiddleware , isServerRender , parseJSON , persistCache , isBackground , unstable_skipClientCache  }) {\n    const { href: cacheKey  } = new URL(dataHref, window.location.href);\n    var ref1;\n    const getData = (params)=>{\n        return fetchRetry(dataHref, isServerRender ? 3 : 1, {\n            headers: isPrefetch ? {\n                purpose: \"prefetch\"\n            } : {},\n            method: (ref1 = params == null ? void 0 : params.method) != null ? ref1 : \"GET\"\n        }).then((response)=>{\n            if (response.ok && (params == null ? void 0 : params.method) === \"HEAD\") {\n                return {\n                    dataHref,\n                    response,\n                    text: \"\",\n                    json: {}\n                };\n            }\n            return response.text().then((text)=>{\n                if (!response.ok) {\n                    /**\n             * When the data response is a redirect because of a middleware\n             * we do not consider it an error. The headers must bring the\n             * mapped location.\n             * TODO: Change the status code in the handler.\n             */ if (hasMiddleware && [\n                        301,\n                        302,\n                        307,\n                        308\n                    ].includes(response.status)) {\n                        return {\n                            dataHref,\n                            response,\n                            text,\n                            json: {}\n                        };\n                    }\n                    if (!hasMiddleware && response.status === 404) {\n                        var ref;\n                        if ((ref = tryToParseAsJSON(text)) == null ? void 0 : ref.notFound) {\n                            return {\n                                dataHref,\n                                json: {\n                                    notFound: SSG_DATA_NOT_FOUND\n                                },\n                                response,\n                                text\n                            };\n                        }\n                    }\n                    const error = new Error(`Failed to load static props`);\n                    /**\n             * We should only trigger a server-side transition if this was\n             * caused on a client-side transition. Otherwise, we'd get into\n             * an infinite loop.\n             */ if (!isServerRender) {\n                        (0, _routeLoader).markAssetError(error);\n                    }\n                    throw error;\n                }\n                return {\n                    dataHref,\n                    json: parseJSON ? tryToParseAsJSON(text) : null,\n                    response,\n                    text\n                };\n            });\n        }).then((data)=>{\n            if (!persistCache || \"development\" !== \"production\" || 0) {\n                delete inflightCache[cacheKey];\n            }\n            return data;\n        }).catch((err)=>{\n            delete inflightCache[cacheKey];\n            throw err;\n        });\n    };\n    // when skipping client cache we wait to update\n    // inflight cache until successful data response\n    // this allows racing click event with fetching newer data\n    // without blocking navigation when stale data is available\n    if (unstable_skipClientCache && persistCache) {\n        return getData({}).then((data)=>{\n            inflightCache[cacheKey] = Promise.resolve(data);\n            return data;\n        });\n    }\n    if (inflightCache[cacheKey] !== undefined) {\n        return inflightCache[cacheKey];\n    }\n    return inflightCache[cacheKey] = getData(isBackground ? {\n        method: \"HEAD\"\n    } : {});\n}\nfunction tryToParseAsJSON(text) {\n    try {\n        return JSON.parse(text);\n    } catch (error) {\n        return null;\n    }\n}\nfunction createKey() {\n    return Math.random().toString(36).slice(2, 10);\n}\nfunction handleHardNavigation({ url , router  }) {\n    // ensure we don't trigger a hard navigation to the same\n    // URL as this can end up with an infinite refresh\n    if (url === (0, _addBasePath).addBasePath((0, _addLocale).addLocale(router.asPath, router.locale))) {\n        throw new Error(`Invariant: attempted to hard navigate to the same URL ${url} ${location.href}`);\n    }\n    window.location.href = url;\n}\nconst getCancelledHandler = ({ route , router  })=>{\n    let cancelled = false;\n    const cancel = router.clc = ()=>{\n        cancelled = true;\n    };\n    const handleCancelled = ()=>{\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === router.clc) {\n            router.clc = null;\n        }\n    };\n    return handleCancelled;\n};\nclass Router {\n    reload() {\n        window.location.reload();\n    }\n    /**\n   * Go back in history\n   */ back() {\n        window.history.back();\n    }\n    /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ push(url, as, options = {}) {\n        if (true) {\n            // TODO: remove in the future when we update history before route change\n            // is complete, as the popstate event should handle this capture.\n            if (manualScrollRestoration) {\n                try {\n                    // Snapshot scroll position right before navigating to a new page:\n                    sessionStorage.setItem(\"__next_scroll_\" + this._key, JSON.stringify({\n                        x: self.pageXOffset,\n                        y: self.pageYOffset\n                    }));\n                } catch (e) {}\n            }\n        }\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"pushState\", url, as, options);\n    }\n    /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ replace(url, as, options = {}) {\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"replaceState\", url, as, options);\n    }\n    change(method, url, as, options, forcedScroll) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            if (!isLocalURL(url)) {\n                handleHardNavigation({\n                    url,\n                    router: _this\n                });\n                return false;\n            }\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            const isQueryUpdating = options._h;\n            const shouldResolveHref = isQueryUpdating || options._shouldResolveHref || (0, _parsePath).parsePath(url).pathname === (0, _parsePath).parsePath(as).pathname;\n            const nextState = _extends({}, _this.state);\n            // for static pages with query params in the URL we delay\n            // marking the router ready until after the query is updated\n            // or a navigation has occurred\n            const readyStateChange = _this.isReady !== true;\n            _this.isReady = true;\n            const isSsr = _this.isSsr;\n            if (!isQueryUpdating) {\n                _this.isSsr = false;\n            }\n            // if a route transition is already in progress before\n            // the query updating is triggered ignore query updating\n            if (isQueryUpdating && _this.clc) {\n                return false;\n            }\n            const prevLocale = nextState.locale;\n            if (false) { var ref; }\n            // marking route changes as a navigation start entry\n            if (_utils.ST) {\n                performance.mark(\"routeChange\");\n            }\n            const { shallow =false , scroll =true  } = options;\n            const routeProps = {\n                shallow\n            };\n            if (_this._inFlightRoute && _this.clc) {\n                if (!isSsr) {\n                    Router.events.emit(\"routeChangeError\", buildCancellationError(), _this._inFlightRoute, routeProps);\n                }\n                _this.clc();\n                _this.clc = null;\n            }\n            as = (0, _addBasePath).addBasePath((0, _addLocale).addLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, options.locale, _this.defaultLocale));\n            const cleanedAs = (0, _removeLocale).removeLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, nextState.locale);\n            _this._inFlightRoute = as;\n            const localeChange = prevLocale !== nextState.locale;\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            if (!isQueryUpdating && _this.onlyAHashChange(cleanedAs) && !localeChange) {\n                nextState.asPath = cleanedAs;\n                Router.events.emit(\"hashChangeStart\", as, routeProps);\n                // TODO: do we need the resolved href when only a hash change?\n                _this.changeState(method, url, as, _extends({}, options, {\n                    scroll: false\n                }));\n                if (scroll) {\n                    _this.scrollToHash(cleanedAs);\n                }\n                try {\n                    yield _this.set(nextState, _this.components[nextState.route], null);\n                } catch (err) {\n                    if ((0, _isError).default(err) && err.cancelled) {\n                        Router.events.emit(\"routeChangeError\", err, cleanedAs, routeProps);\n                    }\n                    throw err;\n                }\n                Router.events.emit(\"hashChangeComplete\", as, routeProps);\n                return true;\n            }\n            let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            let { pathname , query  } = parsed;\n            // The build manifest needs to be loaded before auto-static dynamic pages\n            // get their query parameters to allow ensuring they can be parsed properly\n            // when rewritten to\n            let pages, rewrites;\n            try {\n                [pages, { __rewrites: rewrites  }] = yield Promise.all([\n                    _this.pageLoader.getPageList(),\n                    (0, _routeLoader).getClientBuildManifest(),\n                    _this.pageLoader.getMiddleware(), \n                ]);\n            } catch (err1) {\n                // If we fail to resolve the page list or client-build manifest, we must\n                // do a server-side transition:\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                return false;\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!_this.urlIsNew(cleanedAs) && !localeChange) {\n                method = \"replaceState\";\n            }\n            // we need to resolve the as value using rewrites for dynamic SSG\n            // pages to allow building the data URL correctly\n            let resolvedAs = as;\n            // url and as should always be prefixed with basePath by this\n            // point by either next/link or router.push/replace so strip the\n            // basePath from the pathname to match the pages dir 1-to-1\n            pathname = pathname ? (0, _removeTrailingSlash).removeTrailingSlash((0, _removeBasePath).removeBasePath(pathname)) : pathname;\n            // we don't attempt resolve asPath when we need to execute\n            // middleware as the resolving will occur server-side\n            const isMiddlewareMatch = yield matchesMiddleware({\n                asPath: as,\n                locale: nextState.locale,\n                router: _this\n            });\n            if (options.shallow && isMiddlewareMatch) {\n                pathname = _this.pathname;\n            }\n            if (shouldResolveHref && pathname !== \"/_error\") {\n                options._shouldResolveHref = true;\n                if (false) {} else {\n                    parsed.pathname = resolveDynamicRoute(pathname, pages);\n                    if (parsed.pathname !== pathname) {\n                        pathname = parsed.pathname;\n                        parsed.pathname = (0, _addBasePath).addBasePath(pathname);\n                        if (!isMiddlewareMatch) {\n                            url = (0, _formatUrl).formatWithValidation(parsed);\n                        }\n                    }\n                }\n            }\n            if (!isLocalURL(as)) {\n                if (true) {\n                    throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n                }\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                return false;\n            }\n            resolvedAs = (0, _removeLocale).removeLocale((0, _removeBasePath).removeBasePath(resolvedAs), nextState.locale);\n            let route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            let routeMatch = false;\n            if ((0, _isDynamic).isDynamicRoute(route)) {\n                const parsedAs1 = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n                const asPathname = parsedAs1.pathname;\n                const routeRegex = (0, _routeRegex).getRouteRegex(route);\n                routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n                const shouldInterpolate = route === asPathname;\n                const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n                if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n                    const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param]);\n                    if (missingParams.length > 0 && !isMiddlewareMatch) {\n                        if (true) {\n                            console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(\", \")} in the \\`href\\`'s \\`query\\``);\n                        }\n                        throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\", \")}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? \"href-interpolation-failed\" : \"incompatible-href-as\"}`);\n                    }\n                } else if (shouldInterpolate) {\n                    as = (0, _formatUrl).formatWithValidation(Object.assign({}, parsedAs1, {\n                        pathname: interpolatedAs.result,\n                        query: omit(query, interpolatedAs.params)\n                    }));\n                } else {\n                    // Merge params into `query`, overwriting any specified in search\n                    Object.assign(query, routeMatch);\n                }\n            }\n            if (!isQueryUpdating) {\n                Router.events.emit(\"routeChangeStart\", as, routeProps);\n            }\n            try {\n                var ref2, ref3;\n                let routeInfo = yield _this.getRouteInfo({\n                    route,\n                    pathname,\n                    query,\n                    as,\n                    resolvedAs,\n                    routeProps,\n                    locale: nextState.locale,\n                    isPreview: nextState.isPreview,\n                    hasMiddleware: isMiddlewareMatch\n                });\n                if (\"route\" in routeInfo && isMiddlewareMatch) {\n                    pathname = routeInfo.route || route;\n                    route = pathname;\n                    if (!routeProps.shallow) {\n                        query = Object.assign({}, routeInfo.query || {}, query);\n                    }\n                    if (routeMatch && pathname !== parsed.pathname) {\n                        Object.keys(routeMatch).forEach((key)=>{\n                            if (routeMatch && query[key] === routeMatch[key]) {\n                                delete query[key];\n                            }\n                        });\n                    }\n                    if ((0, _isDynamic).isDynamicRoute(pathname)) {\n                        const prefixedAs = !routeProps.shallow && routeInfo.resolvedAs ? routeInfo.resolvedAs : (0, _addBasePath).addBasePath((0, _addLocale).addLocale(new URL(as, location.href).pathname, nextState.locale), true);\n                        let rewriteAs = prefixedAs;\n                        if ((0, _hasBasePath).hasBasePath(rewriteAs)) {\n                            rewriteAs = (0, _removeBasePath).removeBasePath(rewriteAs);\n                        }\n                        if (false) {}\n                        const routeRegex1 = (0, _routeRegex).getRouteRegex(pathname);\n                        const curRouteMatch = (0, _routeMatcher).getRouteMatcher(routeRegex1)(rewriteAs);\n                        if (curRouteMatch) {\n                            Object.assign(query, curRouteMatch);\n                        }\n                    }\n                }\n                // If the routeInfo brings a redirect we simply apply it.\n                if (\"type\" in routeInfo) {\n                    if (routeInfo.type === \"redirect-internal\") {\n                        return _this.change(method, routeInfo.newUrl, routeInfo.newAs, options);\n                    } else {\n                        handleHardNavigation({\n                            url: routeInfo.destination,\n                            router: _this\n                        });\n                        return new Promise(()=>{});\n                    }\n                }\n                let { error , props , __N_SSG , __N_SSP  } = routeInfo;\n                const component = routeInfo.Component;\n                if (component && component.unstable_scriptLoader) {\n                    const scripts = [].concat(component.unstable_scriptLoader());\n                    scripts.forEach((script)=>{\n                        (0, _script).handleClientScriptLoad(script.props);\n                    });\n                }\n                // handle redirect on client-transition\n                if ((__N_SSG || __N_SSP) && props) {\n                    if (props.pageProps && props.pageProps.__N_REDIRECT) {\n                        // Use the destination from redirect without adding locale\n                        options.locale = false;\n                        const destination = props.pageProps.__N_REDIRECT;\n                        // check if destination is internal (resolves to a page) and attempt\n                        // client-navigation if it is falling back to hard navigation if\n                        // it's not\n                        if (destination.startsWith(\"/\") && props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n                            const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n                            parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n                            const { url: newUrl , as: newAs  } = prepareUrlAs(_this, destination, destination);\n                            return _this.change(method, newUrl, newAs, options);\n                        }\n                        handleHardNavigation({\n                            url: destination,\n                            router: _this\n                        });\n                        return new Promise(()=>{});\n                    }\n                    nextState.isPreview = !!props.__N_PREVIEW;\n                    // handle SSG data 404\n                    if (props.notFound === SSG_DATA_NOT_FOUND) {\n                        let notFoundRoute;\n                        try {\n                            yield _this.fetchComponent(\"/404\");\n                            notFoundRoute = \"/404\";\n                        } catch (_) {\n                            notFoundRoute = \"/_error\";\n                        }\n                        routeInfo = yield _this.getRouteInfo({\n                            route: notFoundRoute,\n                            pathname: notFoundRoute,\n                            query,\n                            as,\n                            resolvedAs,\n                            routeProps: {\n                                shallow: false\n                            },\n                            locale: nextState.locale,\n                            isPreview: nextState.isPreview\n                        });\n                        if (\"type\" in routeInfo) {\n                            throw new Error(`Unexpected middleware effect on /404`);\n                        }\n                    }\n                }\n                Router.events.emit(\"beforeHistoryChange\", as, routeProps);\n                _this.changeState(method, url, as, options);\n                if (isQueryUpdating && pathname === \"/_error\" && ((ref2 = self.__NEXT_DATA__.props) == null ? void 0 : (ref3 = ref2.pageProps) == null ? void 0 : ref3.statusCode) === 500 && (props == null ? void 0 : props.pageProps)) {\n                    // ensure statusCode is still correct for static 500 page\n                    // when updating query information\n                    props.pageProps.statusCode = 500;\n                }\n                var _route;\n                // shallow routing is only allowed for same page URL changes.\n                const isValidShallowRoute = options.shallow && nextState.route === ((_route = routeInfo.route) != null ? _route : route);\n                var _scroll;\n                const shouldScroll = (_scroll = options.scroll) != null ? _scroll : !options._h && !isValidShallowRoute;\n                const resetScroll = shouldScroll ? {\n                    x: 0,\n                    y: 0\n                } : null;\n                // the new state that the router gonna set\n                const upcomingRouterState = _extends({}, nextState, {\n                    route,\n                    pathname,\n                    query,\n                    asPath: cleanedAs,\n                    isFallback: false\n                });\n                const upcomingScrollState = forcedScroll != null ? forcedScroll : resetScroll;\n                // for query updates we can skip it if the state is unchanged and we don't\n                // need to scroll\n                // https://github.com/vercel/next.js/issues/37139\n                const canSkipUpdating = options._h && !upcomingScrollState && !readyStateChange && !localeChange && (0, _compareStates).compareRouterStates(upcomingRouterState, _this.state);\n                if (!canSkipUpdating) {\n                    yield _this.set(upcomingRouterState, routeInfo, upcomingScrollState).catch((e)=>{\n                        if (e.cancelled) error = error || e;\n                        else throw e;\n                    });\n                    if (error) {\n                        if (!isQueryUpdating) {\n                            Router.events.emit(\"routeChangeError\", error, cleanedAs, routeProps);\n                        }\n                        throw error;\n                    }\n                    if (false) {}\n                    if (!isQueryUpdating) {\n                        Router.events.emit(\"routeChangeComplete\", as, routeProps);\n                    }\n                    // A hash mark # is the optional last part of a URL\n                    const hashRegex = /#.+$/;\n                    if (shouldScroll && hashRegex.test(as)) {\n                        _this.scrollToHash(as);\n                    }\n                }\n                return true;\n            } catch (err11) {\n                if ((0, _isError).default(err11) && err11.cancelled) {\n                    return false;\n                }\n                throw err11;\n            }\n        })();\n    }\n    changeState(method, url, as, options = {}) {\n        if (true) {\n            if (typeof window.history === \"undefined\") {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === \"undefined\") {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== \"pushState\" || (0, _utils).getURL() !== as) {\n            this._shallow = options.shallow;\n            window.history[method]({\n                url,\n                as,\n                options,\n                __N: true,\n                key: this._key = method !== \"pushState\" ? this._key : createKey()\n            }, // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            \"\", as);\n        }\n    }\n    handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            console.error(err);\n            if (err.cancelled) {\n                // bubble up cancellation errors\n                throw err;\n            }\n            if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n                Router.events.emit(\"routeChangeError\", err, as, routeProps);\n                // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                // Changing the URL doesn't block executing the current code path.\n                // So let's throw a cancellation error stop the routing logic.\n                throw buildCancellationError();\n            }\n            try {\n                let props;\n                const { page: Component , styleSheets  } = yield _this.fetchComponent(\"/_error\");\n                const routeInfo = {\n                    props,\n                    Component,\n                    styleSheets,\n                    err,\n                    error: err\n                };\n                if (!routeInfo.props) {\n                    try {\n                        routeInfo.props = yield _this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query\n                        });\n                    } catch (gipErr) {\n                        console.error(\"Error in error page `getInitialProps`: \", gipErr);\n                        routeInfo.props = {};\n                    }\n                }\n                return routeInfo;\n            } catch (routeInfoErr) {\n                return _this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + \"\"), pathname, query, as, routeProps, true);\n            }\n        })();\n    }\n    getRouteInfo({ route: requestedRoute , pathname , query , as , resolvedAs , routeProps , locale , hasMiddleware , isPreview , unstable_skipClientCache  }) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            /**\n     * This `route` binding can change if there's a rewrite\n     * so we keep a reference to the original requested route\n     * so we can store the cache for it and avoid re-requesting every time\n     * for shallow routing purposes.\n     */ let route = requestedRoute;\n            try {\n                var ref, ref4, ref5;\n                const handleCancelled = getCancelledHandler({\n                    route,\n                    router: _this\n                });\n                let existingInfo = _this.components[route];\n                if (routeProps.shallow && existingInfo && _this.route === route) {\n                    return existingInfo;\n                }\n                if (hasMiddleware) {\n                    existingInfo = undefined;\n                }\n                let cachedRouteInfo = existingInfo && !(\"initial\" in existingInfo) && \"development\" !== \"development\" ? 0 : undefined;\n                const fetchNextDataParams = {\n                    dataHref: _this.pageLoader.getDataHref({\n                        href: (0, _formatUrl).formatWithValidation({\n                            pathname,\n                            query\n                        }),\n                        skipInterpolation: true,\n                        asPath: resolvedAs,\n                        locale\n                    }),\n                    hasMiddleware: true,\n                    isServerRender: _this.isSsr,\n                    parseJSON: true,\n                    inflightCache: _this.sdc,\n                    persistCache: !isPreview,\n                    isPrefetch: false,\n                    unstable_skipClientCache\n                };\n                const data = yield withMiddlewareEffects({\n                    fetchData: ()=>fetchNextData(fetchNextDataParams),\n                    asPath: resolvedAs,\n                    locale: locale,\n                    router: _this\n                });\n                handleCancelled();\n                if ((data == null ? void 0 : (ref = data.effect) == null ? void 0 : ref.type) === \"redirect-internal\" || (data == null ? void 0 : (ref4 = data.effect) == null ? void 0 : ref4.type) === \"redirect-external\") {\n                    return data.effect;\n                }\n                if ((data == null ? void 0 : (ref5 = data.effect) == null ? void 0 : ref5.type) === \"rewrite\") {\n                    route = (0, _removeTrailingSlash).removeTrailingSlash(data.effect.resolvedHref);\n                    pathname = data.effect.resolvedHref;\n                    query = _extends({}, query, data.effect.parsedAs.query);\n                    resolvedAs = (0, _removeBasePath).removeBasePath((0, _normalizeLocalePath).normalizeLocalePath(data.effect.parsedAs.pathname, _this.locales).pathname);\n                    // Check again the cache with the new destination.\n                    existingInfo = _this.components[route];\n                    if (routeProps.shallow && existingInfo && _this.route === route && !hasMiddleware) {\n                        // If we have a match with the current route due to rewrite,\n                        // we can copy the existing information to the rewritten one.\n                        // Then, we return the information along with the matched route.\n                        return _extends({}, existingInfo, {\n                            route\n                        });\n                    }\n                }\n                if (route === \"/api\" || route.startsWith(\"/api/\")) {\n                    handleHardNavigation({\n                        url: as,\n                        router: _this\n                    });\n                    return new Promise(()=>{});\n                }\n                const routeInfo = cachedRouteInfo || (yield _this.fetchComponent(route).then((res)=>({\n                        Component: res.page,\n                        styleSheets: res.styleSheets,\n                        __N_SSG: res.mod.__N_SSG,\n                        __N_SSP: res.mod.__N_SSP,\n                        __N_RSC: !!res.mod.__next_rsc__\n                    })));\n                if (true) {\n                    const { isValidElementType  } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n                    if (!isValidElementType(routeInfo.Component)) {\n                        throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                    }\n                }\n                /**\n       * For server components, non-SSR pages will have statically optimized\n       * flight data in a production build. So only development and SSR pages\n       * will always have the real-time generated and streamed flight data.\n       */ const useStreamedFlightData = routeInfo.__N_RSC && ( true || 0);\n                const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP || routeInfo.__N_RSC;\n                const { props  } = yield _this._getData(_async_to_generator(function*() {\n                    if (shouldFetchData && !useStreamedFlightData) {\n                        const { json  } = (data == null ? void 0 : data.json) ? data : yield fetchNextData({\n                            dataHref: _this.pageLoader.getDataHref({\n                                href: (0, _formatUrl).formatWithValidation({\n                                    pathname,\n                                    query\n                                }),\n                                asPath: resolvedAs,\n                                locale\n                            }),\n                            isServerRender: _this.isSsr,\n                            parseJSON: true,\n                            inflightCache: _this.sdc,\n                            persistCache: !isPreview,\n                            isPrefetch: false,\n                            unstable_skipClientCache\n                        });\n                        return {\n                            props: json || {}\n                        };\n                    }\n                    return {\n                        headers: {},\n                        props: yield _this.getInitialProps(routeInfo.Component, {\n                            pathname,\n                            query,\n                            asPath: as,\n                            locale,\n                            locales: _this.locales,\n                            defaultLocale: _this.defaultLocale\n                        })\n                    };\n                }));\n                // Only bust the data cache for SSP routes although\n                // middleware can skip cache per request with\n                // x-middleware-cache: no-cache as well\n                if (routeInfo.__N_SSP && fetchNextDataParams.dataHref) {\n                    const cacheKey = new URL(fetchNextDataParams.dataHref, window.location.href).href;\n                    delete _this.sdc[cacheKey];\n                }\n                // we kick off a HEAD request in the background\n                // when a non-prefetch request is made to signal revalidation\n                if (!_this.isPreview && routeInfo.__N_SSG && \"development\" !== \"development\") {}\n                let flightInfo;\n                if (routeInfo.__N_RSC) {\n                    flightInfo = {\n                        __flight__: useStreamedFlightData ? (yield _this._getData(()=>_this._getFlightData((0, _formatUrl).formatWithValidation({\n                                query: _extends({}, query, {\n                                    __flight__: \"1\"\n                                }),\n                                pathname: (0, _isDynamic).isDynamicRoute(route) ? interpolateAs(pathname, (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs).pathname, query).result : pathname\n                            })))).data : props.__flight__\n                    };\n                }\n                props.pageProps = Object.assign({}, props.pageProps, flightInfo);\n                routeInfo.props = props;\n                routeInfo.route = route;\n                routeInfo.query = query;\n                routeInfo.resolvedAs = resolvedAs;\n                _this.components[route] = routeInfo;\n                return routeInfo;\n            } catch (err) {\n                return _this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n            }\n        })();\n    }\n    set(state, data, resetScroll) {\n        this.state = state;\n        return this.sub(data, this.components[\"/_app\"].Component, resetScroll);\n    }\n    /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */ beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath) return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split(\"#\");\n        const [newUrlNoHash, newHash] = as.split(\"#\");\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash = \"\"] = as.split(\"#\");\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === \"\" || hash === \"top\") {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // Decode hash to make non-latin anchor works.\n        const rawHash = decodeURIComponent(hash);\n        // First we check if the element by id is found\n        const idEl = document.getElementById(rawHash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(rawHash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */ prefetch(url, asPath = url, options = {}) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            let { pathname , query  } = parsed;\n            if (false) {}\n            const pages = yield _this.pageLoader.getPageList();\n            let resolvedAs = asPath;\n            const locale = typeof options.locale !== \"undefined\" ? options.locale || undefined : _this.locale;\n            const isMiddlewareMatch = yield matchesMiddleware({\n                asPath: asPath,\n                locale: locale,\n                router: _this\n            });\n            if (false) {}\n            parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n            if ((0, _isDynamic).isDynamicRoute(parsed.pathname)) {\n                pathname = parsed.pathname;\n                parsed.pathname = pathname;\n                Object.assign(query, (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(parsed.pathname))((0, _parsePath).parsePath(asPath).pathname) || {});\n                if (!isMiddlewareMatch) {\n                    url = (0, _formatUrl).formatWithValidation(parsed);\n                }\n            }\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (true) {\n                return;\n            }\n            // TODO: if the route middleware's data request\n            // resolves to is not an SSG route we should bust the cache\n            // but we shouldn't allow prefetch to keep triggering\n            // requests for SSP pages\n            const data = yield withMiddlewareEffects({\n                fetchData: ()=>fetchNextData({\n                        dataHref: _this.pageLoader.getDataHref({\n                            href: (0, _formatUrl).formatWithValidation({\n                                pathname,\n                                query\n                            }),\n                            skipInterpolation: true,\n                            asPath: resolvedAs,\n                            locale\n                        }),\n                        hasMiddleware: true,\n                        isServerRender: _this.isSsr,\n                        parseJSON: true,\n                        inflightCache: _this.sdc,\n                        persistCache: !_this.isPreview,\n                        isPrefetch: true\n                    }),\n                asPath: asPath,\n                locale: locale,\n                router: _this\n            });\n            /**\n     * If there was a rewrite we apply the effects of the rewrite on the\n     * current parameters for the prefetch.\n     */ if ((data == null ? void 0 : data.effect.type) === \"rewrite\") {\n                parsed.pathname = data.effect.resolvedHref;\n                pathname = data.effect.resolvedHref;\n                query = _extends({}, query, data.effect.parsedAs.query);\n                resolvedAs = data.effect.parsedAs.pathname;\n                url = (0, _formatUrl).formatWithValidation(parsed);\n            }\n            /**\n     * If there is a redirect to an external destination then we don't have\n     * to prefetch content as it will be unused.\n     */ if ((data == null ? void 0 : data.effect.type) === \"redirect-external\") {\n                return;\n            }\n            const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            yield Promise.all([\n                _this.pageLoader._isSsg(route).then((isSsg)=>{\n                    return isSsg ? fetchNextData({\n                        dataHref: (data == null ? void 0 : data.dataHref) || _this.pageLoader.getDataHref({\n                            href: url,\n                            asPath: resolvedAs,\n                            locale: locale\n                        }),\n                        isServerRender: false,\n                        parseJSON: true,\n                        inflightCache: _this.sdc,\n                        persistCache: !_this.isPreview,\n                        isPrefetch: true,\n                        unstable_skipClientCache: options.unstable_skipClientCache || options.priority && !!true\n                    }).then(()=>false) : false;\n                }),\n                _this.pageLoader[options.priority ? \"loadPage\" : \"prefetch\"](route), \n            ]);\n        })();\n    }\n    fetchComponent(route) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            const handleCancelled = getCancelledHandler({\n                route,\n                router: _this\n            });\n            try {\n                const componentResult = yield _this.pageLoader.loadPage(route);\n                handleCancelled();\n                return componentResult;\n            } catch (err) {\n                handleCancelled();\n                throw err;\n            }\n        })();\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = ()=>{\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then((data)=>{\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error(\"Loading initial props cancelled\");\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    _getFlightData(dataHref) {\n        // Do not cache RSC flight response since it's not a static resource\n        return fetchNextData({\n            dataHref,\n            isServerRender: true,\n            parseJSON: false,\n            inflightCache: this.sdc,\n            persistCache: false,\n            isPrefetch: false\n        }).then(({ text  })=>({\n                data: text\n            }));\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App  } = this.components[\"/_app\"];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return (0, _utils).loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx\n        });\n    }\n    get route() {\n        return this.state.route;\n    }\n    get pathname() {\n        return this.state.pathname;\n    }\n    get query() {\n        return this.state.query;\n    }\n    get asPath() {\n        return this.state.asPath;\n    }\n    get locale() {\n        return this.state.locale;\n    }\n    get isFallback() {\n        return this.state.isFallback;\n    }\n    get isPreview() {\n        return this.state.isPreview;\n    }\n    constructor(pathname1, query1, as1, { initialProps , pageLoader , App , wrapApp , Component , err , subscription , isFallback , locale , locales , defaultLocale , domainLocales , isPreview , isRsc  }){\n        // Server Data Cache\n        this.sdc = {};\n        this.isFirstPopStateEvent = true;\n        this._key = createKey();\n        this.onPopState = (e)=>{\n            const { isFirstPopStateEvent  } = this;\n            this.isFirstPopStateEvent = false;\n            const state = e.state;\n            if (!state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname , query  } = this;\n                this.changeState(\"replaceState\", (0, _formatUrl).formatWithValidation({\n                    pathname: (0, _addBasePath).addBasePath(pathname),\n                    query\n                }), (0, _utils).getURL());\n                return;\n            }\n            // __NA is used to identify if the history entry can be handled by the app-router.\n            if (state.__NA) {\n                window.location.reload();\n                return;\n            }\n            if (!state.__N) {\n                return;\n            }\n            // Safari fires popstateevent when reopening the browser.\n            if (isFirstPopStateEvent && this.locale === state.options.locale && state.as === this.asPath) {\n                return;\n            }\n            let forcedScroll;\n            const { url , as , options , key  } = state;\n            if (true) {\n                if (manualScrollRestoration) {\n                    if (this._key !== key) {\n                        // Snapshot current scroll position:\n                        try {\n                            sessionStorage.setItem(\"__next_scroll_\" + this._key, JSON.stringify({\n                                x: self.pageXOffset,\n                                y: self.pageYOffset\n                            }));\n                        } catch (e1) {}\n                        // Restore old scroll position:\n                        try {\n                            const v = sessionStorage.getItem(\"__next_scroll_\" + key);\n                            forcedScroll = JSON.parse(v);\n                        } catch (e11) {\n                            forcedScroll = {\n                                x: 0,\n                                y: 0\n                            };\n                        }\n                    }\n                }\n            }\n            this._key = key;\n            const { pathname: pathname1  } = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (this.isSsr && as === (0, _addBasePath).addBasePath(this.asPath) && pathname1 === (0, _addBasePath).addBasePath(this.pathname)) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(state)) {\n                return;\n            }\n            this.change(\"replaceState\", url, as, Object.assign({}, options, {\n                shallow: options.shallow && this._shallow,\n                locale: options.locale || this.defaultLocale,\n                // @ts-ignore internal value not exposed on types\n                _h: 0\n            }), forcedScroll);\n        };\n        // represents the current component key\n        const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname1);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname1 !== \"/_error\") {\n            this.components[route] = {\n                Component,\n                initial: true,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP,\n                __N_RSC: !!isRsc\n            };\n        }\n        this.components[\"/_app\"] = {\n            Component: App,\n            styleSheets: []\n        };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n        this.basePath =  false || \"\";\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isLocaleDomain = false;\n        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n        if (false) {}\n        this.state = {\n            route,\n            pathname: pathname1,\n            query: query1,\n            asPath: autoExportDynamic ? pathname1 : as1,\n            isPreview: !!isPreview,\n            locale:  false ? 0 : undefined,\n            isFallback\n        };\n        this._initialMatchesMiddlewarePromise = Promise.resolve(false);\n        if (false) {}\n    }\n}\nRouter.events = (0, _mitt).default();\nfunction matchesMiddleware(options) {\n    return Promise.resolve(options.router.pageLoader.getMiddleware()).then((middleware)=>{\n        const { pathname: asPathname  } = (0, _parsePath).parsePath(options.asPath);\n        const cleanedAs = (0, _hasBasePath).hasBasePath(asPathname) ? (0, _removeBasePath).removeBasePath(asPathname) : asPathname;\n        const regex = middleware == null ? void 0 : middleware.location;\n        return !!regex && new RegExp(regex).test((0, _addLocale).addLocale(cleanedAs, options.locale));\n    });\n}\nfunction withMiddlewareEffects(options) {\n    return matchesMiddleware(options).then((matches)=>{\n        if (matches && options.fetchData) {\n            return options.fetchData().then((data)=>getMiddlewareData(data.dataHref, data.response, options).then((effect)=>({\n                        dataHref: data.dataHref,\n                        json: data.json,\n                        response: data.response,\n                        text: data.text,\n                        effect\n                    }))).catch((_err)=>{\n                /**\n           * TODO: Revisit this in the future.\n           * For now we will not consider middleware data errors to be fatal.\n           * maybe we should revisit in the future.\n           */ return null;\n            });\n        }\n        return null;\n    });\n}\nfunction getMiddlewareData(source, response, options) {\n    const nextConfig = {\n        basePath: options.router.basePath,\n        i18n: {\n            locales: options.router.locales\n        },\n        trailingSlash: Boolean(false)\n    };\n    const rewriteHeader = response.headers.get(\"x-nextjs-rewrite\");\n    let rewriteTarget = rewriteHeader || response.headers.get(\"x-nextjs-matched-path\");\n    const matchedPath = response.headers.get(\"x-matched-path\");\n    if (matchedPath && !rewriteTarget && !matchedPath.includes(\"__next_data_catchall\") && !matchedPath.includes(\"/_error\") && !matchedPath.includes(\"/404\")) {\n        // leverage x-matched-path to detect next.config.js rewrites\n        rewriteTarget = matchedPath;\n    }\n    if (rewriteTarget) {\n        if (rewriteTarget.startsWith(\"/\")) {\n            const parsedRewriteTarget = (0, _parseRelativeUrl).parseRelativeUrl(rewriteTarget);\n            const pathnameInfo = (0, _getNextPathnameInfo).getNextPathnameInfo(parsedRewriteTarget.pathname, {\n                nextConfig,\n                parseData: true\n            });\n            let fsPathname = (0, _removeTrailingSlash).removeTrailingSlash(pathnameInfo.pathname);\n            return Promise.all([\n                options.router.pageLoader.getPageList(),\n                (0, _routeLoader).getClientBuildManifest(), \n            ]).then(([pages, { __rewrites: rewrites  }])=>{\n                let as = (0, _addLocale).addLocale(pathnameInfo.pathname, pathnameInfo.locale);\n                if ((0, _isDynamic).isDynamicRoute(as) || !rewriteHeader && pages.includes((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(as), options.router.locales).pathname)) {\n                    const parsedSource = (0, _getNextPathnameInfo).getNextPathnameInfo((0, _parseRelativeUrl).parseRelativeUrl(source).pathname, {\n                        parseData: true\n                    });\n                    as = (0, _addBasePath).addBasePath(parsedSource.pathname);\n                    parsedRewriteTarget.pathname = as;\n                }\n                if (false) {} else if (!pages.includes(fsPathname)) {\n                    const resolvedPathname = resolveDynamicRoute(fsPathname, pages);\n                    if (resolvedPathname !== fsPathname) {\n                        fsPathname = resolvedPathname;\n                    }\n                }\n                const resolvedHref = !pages.includes(fsPathname) ? resolveDynamicRoute((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(parsedRewriteTarget.pathname), options.router.locales).pathname, pages) : fsPathname;\n                if ((0, _isDynamic).isDynamicRoute(resolvedHref)) {\n                    const matches = (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(resolvedHref))(as);\n                    Object.assign(parsedRewriteTarget.query, matches || {});\n                }\n                return {\n                    type: \"rewrite\",\n                    parsedAs: parsedRewriteTarget,\n                    resolvedHref\n                };\n            });\n        }\n        const src = (0, _parsePath).parsePath(source);\n        const pathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src.pathname, {\n            nextConfig,\n            parseData: true\n        }), {\n            defaultLocale: options.router.defaultLocale,\n            buildId: \"\"\n        }));\n        return Promise.resolve({\n            type: \"redirect-external\",\n            destination: `${pathname}${src.query}${src.hash}`\n        });\n    }\n    const redirectTarget = response.headers.get(\"x-nextjs-redirect\");\n    if (redirectTarget) {\n        if (redirectTarget.startsWith(\"/\")) {\n            const src1 = (0, _parsePath).parsePath(redirectTarget);\n            const pathname1 = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src1.pathname, {\n                nextConfig,\n                parseData: true\n            }), {\n                defaultLocale: options.router.defaultLocale,\n                buildId: \"\"\n            }));\n            return Promise.resolve({\n                type: \"redirect-internal\",\n                newAs: `${pathname1}${src1.query}${src1.hash}`,\n                newUrl: `${pathname1}${src1.query}${src1.hash}`\n            });\n        }\n        return Promise.resolve({\n            type: \"redirect-external\",\n            destination: redirectTarget\n        });\n    }\n    return Promise.resolve({\n        type: \"next\"\n    });\n}\nexports[\"default\"] = Router; //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3JvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLEtBQUssRUFBRSxJQUFJO0NBQ2QsRUFBQyxDQUFDO0FBQ0hELGtCQUFrQixHQUFHRSxVQUFVLENBQUM7QUFDaENGLHFCQUFxQixHQUFHRyxhQUFhLENBQUM7QUFDdENILG1CQUFtQixHQUFHSSxXQUFXLENBQUM7QUFDbENKLGlCQUFpQixHQUFHSyxTQUFTLENBQUM7QUFDOUJMLGtCQUFlLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDekIsSUFBSU8sbUJBQW1CLEdBQUdDLHlJQUEwRDtBQUNwRixJQUFJQyxRQUFRLEdBQUdELG1IQUErQztBQUM5RCxJQUFJRSx3QkFBd0IsR0FBR0YsbUpBQStEO0FBQzlGLElBQUlHLHlCQUF5QixHQUFHSCxxSkFBZ0U7QUFDaEcsSUFBSUksdUJBQXVCLEdBQUdKLG1CQUFPLENBQUMsNkdBQTBDLENBQUM7QUFDakYsSUFBSUssb0JBQW9CLEdBQUdMLG1CQUFPLENBQUMsdUZBQStCLENBQUM7QUFDbkUsSUFBSU0sWUFBWSxHQUFHTixtQkFBTyxDQUFDLHFGQUE4QixDQUFDO0FBQzFELElBQUlPLE9BQU8sR0FBR1AsbUJBQU8sQ0FBQyx5RUFBd0IsQ0FBQztBQUMvQyxJQUFJUSxRQUFRLEdBQUdMLHlCQUF5QixDQUFDSCxtQkFBTyxDQUFDLHVFQUF1QixDQUFDLENBQUM7QUFDMUUsSUFBSVMsb0JBQW9CLEdBQUdULG1CQUFPLENBQUMsOEVBQW9DLENBQUM7QUFDeEUsSUFBSVUsb0JBQW9CLEdBQUdWLG1CQUFPLENBQUMsb0VBQStCLENBQUM7QUFDbkUsSUFBSVcsS0FBSyxHQUFHVCx3QkFBd0IsQ0FBQ0YsbUJBQU8sQ0FBQyx3QkFBUyxDQUFDLENBQUM7QUFDeEQsSUFBSVksTUFBTSxHQUFHWixtQkFBTyxDQUFDLHdDQUFVLENBQUM7QUFDaEMsSUFBSWEsVUFBVSxHQUFH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Q0FBQ3pVLElBQUksQ0FBQyxDQUFDO2dCQUMzQ29MLE1BQU0sRUFBRSxDQUFDLEVBQUU5TyxTQUFRLENBQUMsRUFBRW1ZLElBQUcsQ0FBQy9YLEtBQUssQ0FBQyxFQUFFK1gsSUFBRyxDQUFDelUsSUFBSSxDQUFDLENBQUM7YUFDL0MsQ0FBQyxDQUFDO1NBQ047UUFDRCxPQUFPd0UsT0FBTyxDQUFDQyxPQUFPLENBQUM7WUFDbkIwRyxJQUFJLEVBQUUsbUJBQW1CO1lBQ3pCRyxXQUFXLEVBQUVzSixjQUFjO1NBQzlCLENBQUMsQ0FBQztLQUNOO0lBQ0QsT0FBT3BRLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO1FBQ25CMEcsSUFBSSxFQUFFLE1BQU07S0FDZixDQUFDLENBQUM7Q0FDTjtBQUNEL1Isa0JBQWUsR0FBR21NLE1BQU0sQ0FBQyxDQUV6QixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci9yb3V0ZXIuanM/ODY4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaXNMb2NhbFVSTCA9IGlzTG9jYWxVUkw7XG5leHBvcnRzLmludGVycG9sYXRlQXMgPSBpbnRlcnBvbGF0ZUFzO1xuZXhwb3J0cy5yZXNvbHZlSHJlZiA9IHJlc29sdmVIcmVmO1xuZXhwb3J0cy5jcmVhdGVLZXkgPSBjcmVhdGVLZXk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX2FzeW5jX3RvX2dlbmVyYXRvciA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19hc3luY190b19nZW5lcmF0b3IuanNcIikuZGVmYXVsdDtcbnZhciBfZXh0ZW5kcyA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19leHRlbmRzLmpzXCIpLmRlZmF1bHQ7XG52YXIgX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0ID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0LmpzXCIpLmRlZmF1bHQ7XG52YXIgX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQuanNcIikuZGVmYXVsdDtcbnZhciBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvbm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9yZW1vdmVUcmFpbGluZ1NsYXNoID0gcmVxdWlyZShcIi4vdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9yb3V0ZUxvYWRlciA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvcm91dGUtbG9hZGVyXCIpO1xudmFyIF9zY3JpcHQgPSByZXF1aXJlKFwiLi4vLi4vLi4vY2xpZW50L3NjcmlwdFwiKTtcbnZhciBfaXNFcnJvciA9IF9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQocmVxdWlyZShcIi4uLy4uLy4uL2xpYi9pcy1lcnJvclwiKSk7XG52YXIgX2Rlbm9ybWFsaXplUGFnZVBhdGggPSByZXF1aXJlKFwiLi4vcGFnZS1wYXRoL2Rlbm9ybWFsaXplLXBhZ2UtcGF0aFwiKTtcbnZhciBfbm9ybWFsaXplTG9jYWxlUGF0aCA9IHJlcXVpcmUoXCIuLi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aFwiKTtcbnZhciBfbWl0dCA9IF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdChyZXF1aXJlKFwiLi4vbWl0dFwiKSk7XG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xudmFyIF9pc0R5bmFtaWMgPSByZXF1aXJlKFwiLi91dGlscy9pcy1keW5hbWljXCIpO1xudmFyIF9wYXJzZVJlbGF0aXZlVXJsID0gcmVxdWlyZShcIi4vdXRpbHMvcGFyc2UtcmVsYXRpdmUtdXJsXCIpO1xudmFyIF9xdWVyeXN0cmluZyA9IHJlcXVpcmUoXCIuL3V0aWxzL3F1ZXJ5c3RyaW5nXCIpO1xudmFyIF9yZXNvbHZlUmV3cml0ZXMgPSBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQocmVxdWlyZShcIi4vdXRpbHMvcmVzb2x2ZS1yZXdyaXRlc1wiKSk7XG52YXIgX3JvdXRlTWF0Y2hlciA9IHJlcXVpcmUoXCIuL3V0aWxzL3JvdXRlLW1hdGNoZXJcIik7XG52YXIgX3JvdXRlUmVnZXggPSByZXF1aXJlKFwiLi91dGlscy9yb3V0ZS1yZWdleFwiKTtcbnZhciBfZm9ybWF0VXJsID0gcmVxdWlyZShcIi4vdXRpbHMvZm9ybWF0LXVybFwiKTtcbnZhciBfZGV0ZWN0RG9tYWluTG9jYWxlID0gcmVxdWlyZShcIi4uLy4uLy4uL2NsaWVudC9kZXRlY3QtZG9tYWluLWxvY2FsZVwiKTtcbnZhciBfcGFyc2VQYXRoID0gcmVxdWlyZShcIi4vdXRpbHMvcGFyc2UtcGF0aFwiKTtcbnZhciBfYWRkTG9jYWxlID0gcmVxdWlyZShcIi4uLy4uLy4uL2NsaWVudC9hZGQtbG9jYWxlXCIpO1xudmFyIF9yZW1vdmVMb2NhbGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vY2xpZW50L3JlbW92ZS1sb2NhbGVcIik7XG52YXIgX3JlbW92ZUJhc2VQYXRoID0gcmVxdWlyZShcIi4uLy4uLy4uL2NsaWVudC9yZW1vdmUtYmFzZS1wYXRoXCIpO1xudmFyIF9hZGRCYXNlUGF0aCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvYWRkLWJhc2UtcGF0aFwiKTtcbnZhciBfaGFzQmFzZVBhdGggPSByZXF1aXJlKFwiLi4vLi4vLi4vY2xpZW50L2hhcy1iYXNlLXBhdGhcIik7XG52YXIgX2dldE5leHRQYXRobmFtZUluZm8gPSByZXF1aXJlKFwiLi91dGlscy9nZXQtbmV4dC1wYXRobmFtZS1pbmZvXCIpO1xudmFyIF9mb3JtYXROZXh0UGF0aG5hbWVJbmZvID0gcmVxdWlyZShcIi4vdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mb1wiKTtcbnZhciBfY29tcGFyZVN0YXRlcyA9IHJlcXVpcmUoXCIuL3V0aWxzL2NvbXBhcmUtc3RhdGVzXCIpO1xuZnVuY3Rpb24gYnVpbGRDYW5jZWxsYXRpb25FcnJvcigpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgRXJyb3IoJ1JvdXRlIENhbmNlbGxlZCcpLCB7XG4gICAgICAgIGNhbmNlbGxlZDogdHJ1ZVxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNMb2NhbFVSTCh1cmwpIHtcbiAgICAvLyBwcmV2ZW50IGEgaHlkcmF0aW9uIG1pc21hdGNoIG9uIGhyZWYgZm9yIHVybCB3aXRoIGFuY2hvciByZWZzXG4gICAgaWYgKCEoMCwgX3V0aWxzKS5pc0Fic29sdXRlVXJsKHVybCkpIHJldHVybiB0cnVlO1xuICAgIHRyeSB7XG4gICAgICAgIC8vIGFic29sdXRlIHVybHMgY2FuIGJlIGxvY2FsIGlmIHRoZXkgYXJlIG9uIHRoZSBzYW1lIG9yaWdpblxuICAgICAgICBjb25zdCBsb2NhdGlvbk9yaWdpbiA9ICgwLCBfdXRpbHMpLmdldExvY2F0aW9uT3JpZ2luKCk7XG4gICAgICAgIGNvbnN0IHJlc29sdmVkID0gbmV3IFVSTCh1cmwsIGxvY2F0aW9uT3JpZ2luKTtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVkLm9yaWdpbiA9PT0gbG9jYXRpb25PcmlnaW4gJiYgKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgocmVzb2x2ZWQucGF0aG5hbWUpO1xuICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGludGVycG9sYXRlQXMocm91dGUsIGFzUGF0aG5hbWUsIHF1ZXJ5KSB7XG4gICAgbGV0IGludGVycG9sYXRlZFJvdXRlID0gJyc7XG4gICAgY29uc3QgZHluYW1pY1JlZ2V4ID0gKDAsIF9yb3V0ZVJlZ2V4KS5nZXRSb3V0ZVJlZ2V4KHJvdXRlKTtcbiAgICBjb25zdCBkeW5hbWljR3JvdXBzID0gZHluYW1pY1JlZ2V4Lmdyb3VwcztcbiAgICBjb25zdCBkeW5hbWljTWF0Y2hlcyA9IC8vIFRyeSB0byBtYXRjaCB0aGUgZHluYW1pYyByb3V0ZSBhZ2FpbnN0IHRoZSBhc1BhdGhcbiAgICAoYXNQYXRobmFtZSAhPT0gcm91dGUgPyAoMCwgX3JvdXRlTWF0Y2hlcikuZ2V0Um91dGVNYXRjaGVyKGR5bmFtaWNSZWdleCkoYXNQYXRobmFtZSkgOiAnJykgfHwgLy8gRmFsbCBiYWNrIHRvIHJlYWRpbmcgdGhlIHZhbHVlcyBmcm9tIHRoZSBocmVmXG4gICAgLy8gVE9ETzogc2hvdWxkIHRoaXMgdGFrZSBwcmlvcml0eTsgYWxzbyBuZWVkIHRvIGNoYW5nZSBpbiB0aGUgcm91dGVyLlxuICAgIHF1ZXJ5O1xuICAgIGludGVycG9sYXRlZFJvdXRlID0gcm91dGU7XG4gICAgY29uc3QgcGFyYW1zID0gT2JqZWN0LmtleXMoZHluYW1pY0dyb3Vwcyk7XG4gICAgaWYgKCFwYXJhbXMuZXZlcnkoKHBhcmFtKT0+e1xuICAgICAgICBsZXQgdmFsdWUgPSBkeW5hbWljTWF0Y2hlc1twYXJhbV0gfHwgJyc7XG4gICAgICAgIGNvbnN0IHsgcmVwZWF0ICwgb3B0aW9uYWwgIH0gPSBkeW5hbWljR3JvdXBzW3BhcmFtXTtcbiAgICAgICAgLy8gc3VwcG9ydCBzaW5nbGUtbGV2ZWwgY2F0Y2gtYWxsXG4gICAgICAgIC8vIFRPRE86IG1vcmUgcm9idXN0IGhhbmRsaW5nIGZvciB1c2VyLWVycm9yIChwYXNzaW5nIGAvYClcbiAgICAgICAgbGV0IHJlcGxhY2VkID0gYFske3JlcGVhdCA/ICcuLi4nIDogJyd9JHtwYXJhbX1dYDtcbiAgICAgICAgaWYgKG9wdGlvbmFsKSB7XG4gICAgICAgICAgICByZXBsYWNlZCA9IGAkeyF2YWx1ZSA/ICcvJyA6ICcnfVske3JlcGxhY2VkfV1gO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXBlYXQgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpKSB2YWx1ZSA9IFtcbiAgICAgICAgICAgIHZhbHVlXG4gICAgICAgIF07XG4gICAgICAgIHJldHVybiAob3B0aW9uYWwgfHwgcGFyYW0gaW4gZHluYW1pY01hdGNoZXMpICYmIC8vIEludGVycG9sYXRlIGdyb3VwIGludG8gZGF0YSBVUkwgaWYgcHJlc2VudFxuICAgICAgICAoaW50ZXJwb2xhdGVkUm91dGUgPSBpbnRlcnBvbGF0ZWRSb3V0ZS5yZXBsYWNlKHJlcGxhY2VkLCByZXBlYXQgPyB2YWx1ZS5tYXAoLy8gdGhlc2UgdmFsdWVzIHNob3VsZCBiZSBmdWxseSBlbmNvZGVkIGluc3RlYWQgb2YganVzdFxuICAgICAgICAvLyBwYXRoIGRlbGltaXRlciBlc2NhcGVkIHNpbmNlIHRoZXkgYXJlIGJlaW5nIGluc2VydGVkXG4gICAgICAgIC8vIGludG8gdGhlIFVSTCBhbmQgd2UgZXhwZWN0IFVSTCBlbmNvZGVkIHNlZ21lbnRzXG4gICAgICAgIC8vIHdoZW4gcGFyc2luZyBkeW5hbWljIHJvdXRlIHBhcmFtc1xuICAgICAgICAoc2VnbWVudCk9PmVuY29kZVVSSUNvbXBvbmVudChzZWdtZW50KSkuam9pbignLycpIDogZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSkgfHwgJy8nKTtcbiAgICB9KSkge1xuICAgICAgICBpbnRlcnBvbGF0ZWRSb3V0ZSA9ICcnIC8vIGRpZCBub3Qgc2F0aXNmeSBhbGwgcmVxdWlyZW1lbnRzXG4gICAgICAgIDtcbiAgICAvLyBuLmIuIFdlIGlnbm9yZSB0aGlzIGVycm9yIGJlY2F1c2Ugd2UgaGFuZGxlIHdhcm5pbmcgZm9yIHRoaXMgY2FzZSBpblxuICAgIC8vIGRldmVsb3BtZW50IGluIHRoZSBgPExpbms+YCBjb21wb25lbnQgZGlyZWN0bHkuXG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtcyxcbiAgICAgICAgcmVzdWx0OiBpbnRlcnBvbGF0ZWRSb3V0ZVxuICAgIH07XG59XG5mdW5jdGlvbiBvbWl0KG9iamVjdCwga2V5cykge1xuICAgIGNvbnN0IG9taXR0ZWQgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhvYmplY3QpLmZvckVhY2goKGtleSk9PntcbiAgICAgICAgaWYgKCFrZXlzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIG9taXR0ZWRba2V5XSA9IG9iamVjdFtrZXldO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG9taXR0ZWQ7XG59XG5mdW5jdGlvbiByZXNvbHZlSHJlZihyb3V0ZXIsIGhyZWYsIHJlc29sdmVBcykge1xuICAgIC8vIHdlIHVzZSBhIGR1bW15IGJhc2UgdXJsIGZvciByZWxhdGl2ZSB1cmxzXG4gICAgbGV0IGJhc2U7XG4gICAgbGV0IHVybEFzU3RyaW5nID0gdHlwZW9mIGhyZWYgPT09ICdzdHJpbmcnID8gaHJlZiA6ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihocmVmKTtcbiAgICAvLyByZXBlYXRlZCBzbGFzaGVzIGFuZCBiYWNrc2xhc2hlcyBpbiB0aGUgVVJMIGFyZSBjb25zaWRlcmVkXG4gICAgLy8gaW52YWxpZCBhbmQgd2lsbCBuZXZlciBtYXRjaCBhIE5leHQuanMgcGFnZS9maWxlXG4gICAgY29uc3QgdXJsUHJvdG9NYXRjaCA9IHVybEFzU3RyaW5nLm1hdGNoKC9eW2EtekEtWl17MSx9OlxcL1xcLy8pO1xuICAgIGNvbnN0IHVybEFzU3RyaW5nTm9Qcm90byA9IHVybFByb3RvTWF0Y2ggPyB1cmxBc1N0cmluZy5zbGljZSh1cmxQcm90b01hdGNoWzBdLmxlbmd0aCkgOiB1cmxBc1N0cmluZztcbiAgICBjb25zdCB1cmxQYXJ0cyA9IHVybEFzU3RyaW5nTm9Qcm90by5zcGxpdCgnPycpO1xuICAgIGlmICgodXJsUGFydHNbMF0gfHwgJycpLm1hdGNoKC8oXFwvXFwvfFxcXFwpLykpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgSW52YWxpZCBocmVmIHBhc3NlZCB0byBuZXh0L3JvdXRlcjogJHt1cmxBc1N0cmluZ30sIHJlcGVhdGVkIGZvcndhcmQtc2xhc2hlcyAoLy8pIG9yIGJhY2tzbGFzaGVzIFxcXFwgYXJlIG5vdCB2YWxpZCBpbiB0aGUgaHJlZmApO1xuICAgICAgICBjb25zdCBub3JtYWxpemVkVXJsID0gKDAsIF91dGlscykubm9ybWFsaXplUmVwZWF0ZWRTbGFzaGVzKHVybEFzU3RyaW5nTm9Qcm90byk7XG4gICAgICAgIHVybEFzU3RyaW5nID0gKHVybFByb3RvTWF0Y2ggPyB1cmxQcm90b01hdGNoWzBdIDogJycpICsgbm9ybWFsaXplZFVybDtcbiAgICB9XG4gICAgLy8gUmV0dXJuIGJlY2F1c2UgaXQgY2Fubm90IGJlIHJvdXRlZCBieSB0aGUgTmV4dC5qcyByb3V0ZXJcbiAgICBpZiAoIWlzTG9jYWxVUkwodXJsQXNTdHJpbmcpKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlQXMgPyBbXG4gICAgICAgICAgICB1cmxBc1N0cmluZ1xuICAgICAgICBdIDogdXJsQXNTdHJpbmc7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGJhc2UgPSBuZXcgVVJMKHVybEFzU3RyaW5nLnN0YXJ0c1dpdGgoJyMnKSA/IHJvdXRlci5hc1BhdGggOiByb3V0ZXIucGF0aG5hbWUsICdodHRwOi8vbicpO1xuICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgLy8gZmFsbGJhY2sgdG8gLyBmb3IgaW52YWxpZCBhc1BhdGggdmFsdWVzIGUuZy4gLy9cbiAgICAgICAgYmFzZSA9IG5ldyBVUkwoJy8nLCAnaHR0cDovL24nKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZmluYWxVcmwgPSBuZXcgVVJMKHVybEFzU3RyaW5nLCBiYXNlKTtcbiAgICAgICAgZmluYWxVcmwucGF0aG5hbWUgPSAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoKGZpbmFsVXJsLnBhdGhuYW1lKTtcbiAgICAgICAgbGV0IGludGVycG9sYXRlZEFzID0gJyc7XG4gICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUoZmluYWxVcmwucGF0aG5hbWUpICYmIGZpbmFsVXJsLnNlYXJjaFBhcmFtcyAmJiByZXNvbHZlQXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gKDAsIF9xdWVyeXN0cmluZykuc2VhcmNoUGFyYW1zVG9VcmxRdWVyeShmaW5hbFVybC5zZWFyY2hQYXJhbXMpO1xuICAgICAgICAgICAgY29uc3QgeyByZXN1bHQgLCBwYXJhbXMgIH0gPSBpbnRlcnBvbGF0ZUFzKGZpbmFsVXJsLnBhdGhuYW1lLCBmaW5hbFVybC5wYXRobmFtZSwgcXVlcnkpO1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGludGVycG9sYXRlZEFzID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6IHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgaGFzaDogZmluYWxVcmwuaGFzaCxcbiAgICAgICAgICAgICAgICAgICAgcXVlcnk6IG9taXQocXVlcnksIHBhcmFtcylcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBpZiB0aGUgb3JpZ2luIGRpZG4ndCBjaGFuZ2UsIGl0IG1lYW5zIHdlIHJlY2VpdmVkIGEgcmVsYXRpdmUgaHJlZlxuICAgICAgICBjb25zdCByZXNvbHZlZEhyZWYgPSBmaW5hbFVybC5vcmlnaW4gPT09IGJhc2Uub3JpZ2luID8gZmluYWxVcmwuaHJlZi5zbGljZShmaW5hbFVybC5vcmlnaW4ubGVuZ3RoKSA6IGZpbmFsVXJsLmhyZWY7XG4gICAgICAgIHJldHVybiByZXNvbHZlQXMgPyBbXG4gICAgICAgICAgICByZXNvbHZlZEhyZWYsXG4gICAgICAgICAgICBpbnRlcnBvbGF0ZWRBcyB8fCByZXNvbHZlZEhyZWZcbiAgICAgICAgXSA6IHJlc29sdmVkSHJlZjtcbiAgICB9IGNhdGNoIChfMSkge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZUFzID8gW1xuICAgICAgICAgICAgdXJsQXNTdHJpbmdcbiAgICAgICAgXSA6IHVybEFzU3RyaW5nO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHN0cmlwT3JpZ2luKHVybCkge1xuICAgIGNvbnN0IG9yaWdpbiA9ICgwLCBfdXRpbHMpLmdldExvY2F0aW9uT3JpZ2luKCk7XG4gICAgcmV0dXJuIHVybC5zdGFydHNXaXRoKG9yaWdpbikgPyB1cmwuc3Vic3RyaW5nKG9yaWdpbi5sZW5ndGgpIDogdXJsO1xufVxuZnVuY3Rpb24gcHJlcGFyZVVybEFzKHJvdXRlciwgdXJsLCBhcykge1xuICAgIC8vIElmIHVybCBhbmQgYXMgcHJvdmlkZWQgYXMgYW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uLFxuICAgIC8vIHdlJ2xsIGZvcm1hdCB0aGVtIGludG8gdGhlIHN0cmluZyB2ZXJzaW9uIGhlcmUuXG4gICAgbGV0IFtyZXNvbHZlZEhyZWYsIHJlc29sdmVkQXNdID0gcmVzb2x2ZUhyZWYocm91dGVyLCB1cmwsIHRydWUpO1xuICAgIGNvbnN0IG9yaWdpbiA9ICgwLCBfdXRpbHMpLmdldExvY2F0aW9uT3JpZ2luKCk7XG4gICAgY29uc3QgaHJlZkhhZE9yaWdpbiA9IHJlc29sdmVkSHJlZi5zdGFydHNXaXRoKG9yaWdpbik7XG4gICAgY29uc3QgYXNIYWRPcmlnaW4gPSByZXNvbHZlZEFzICYmIHJlc29sdmVkQXMuc3RhcnRzV2l0aChvcmlnaW4pO1xuICAgIHJlc29sdmVkSHJlZiA9IHN0cmlwT3JpZ2luKHJlc29sdmVkSHJlZik7XG4gICAgcmVzb2x2ZWRBcyA9IHJlc29sdmVkQXMgPyBzdHJpcE9yaWdpbihyZXNvbHZlZEFzKSA6IHJlc29sdmVkQXM7XG4gICAgY29uc3QgcHJlcGFyZWRVcmwgPSBocmVmSGFkT3JpZ2luID8gcmVzb2x2ZWRIcmVmIDogKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgocmVzb2x2ZWRIcmVmKTtcbiAgICBjb25zdCBwcmVwYXJlZEFzID0gYXMgPyBzdHJpcE9yaWdpbihyZXNvbHZlSHJlZihyb3V0ZXIsIGFzKSkgOiByZXNvbHZlZEFzIHx8IHJlc29sdmVkSHJlZjtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cmw6IHByZXBhcmVkVXJsLFxuICAgICAgICBhczogYXNIYWRPcmlnaW4gPyBwcmVwYXJlZEFzIDogKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgocHJlcGFyZWRBcylcbiAgICB9O1xufVxuZnVuY3Rpb24gcmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXRobmFtZSwgcGFnZXMpIHtcbiAgICBjb25zdCBjbGVhblBhdGhuYW1lID0gKDAsIF9yZW1vdmVUcmFpbGluZ1NsYXNoKS5yZW1vdmVUcmFpbGluZ1NsYXNoKCgwLCBfZGVub3JtYWxpemVQYWdlUGF0aCkuZGVub3JtYWxpemVQYWdlUGF0aChwYXRobmFtZSkpO1xuICAgIGlmIChjbGVhblBhdGhuYW1lID09PSAnLzQwNCcgfHwgY2xlYW5QYXRobmFtZSA9PT0gJy9fZXJyb3InKSB7XG4gICAgICAgIHJldHVybiBwYXRobmFtZTtcbiAgICB9XG4gICAgLy8gaGFuZGxlIHJlc29sdmluZyBocmVmIGZvciBkeW5hbWljIHJvdXRlc1xuICAgIGlmICghcGFnZXMuaW5jbHVkZXMoY2xlYW5QYXRobmFtZSkpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGFycmF5LWNhbGxiYWNrLXJldHVyblxuICAgICAgICBwYWdlcy5zb21lKChwYWdlKT0+e1xuICAgICAgICAgICAgaWYgKCgwLCBfaXNEeW5hbWljKS5pc0R5bmFtaWNSb3V0ZShwYWdlKSAmJiAoMCwgX3JvdXRlUmVnZXgpLmdldFJvdXRlUmVnZXgocGFnZSkucmUudGVzdChjbGVhblBhdGhuYW1lKSkge1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcGFnZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xufVxuY29uc3QgbWFudWFsU2Nyb2xsUmVzdG9yYXRpb24gPSBwcm9jZXNzLmVudi5fX05FWFRfU0NST0xMX1JFU1RPUkFUSU9OICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICdzY3JvbGxSZXN0b3JhdGlvbicgaW4gd2luZG93Lmhpc3RvcnkgJiYgISFmdW5jdGlvbigpIHtcbiAgICB0cnkge1xuICAgICAgICBsZXQgdiA9ICdfX25leHQnO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VxdWVuY2VzXG4gICAgICAgIHJldHVybiBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKHYsIHYpLCBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKHYpLCB0cnVlO1xuICAgIH0gY2F0Y2ggKG4pIHt9XG59KCk7XG5jb25zdCBTU0dfREFUQV9OT1RfRk9VTkQgPSBTeW1ib2woJ1NTR19EQVRBX05PVF9GT1VORCcpO1xuZnVuY3Rpb24gZmV0Y2hSZXRyeSh1cmwsIGF0dGVtcHRzLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgICAgICAvLyBDb29raWVzIGFyZSByZXF1aXJlZCB0byBiZSBwcmVzZW50IGZvciBOZXh0LmpzJyBTU0cgXCJQcmV2aWV3IE1vZGVcIi5cbiAgICAgICAgLy8gQ29va2llcyBtYXkgYWxzbyBiZSByZXF1aXJlZCBmb3IgYGdldFNlcnZlclNpZGVQcm9wc2AuXG4gICAgICAgIC8vXG4gICAgICAgIC8vID4gYGZldGNoYCB3b27igJl0IHNlbmQgY29va2llcywgdW5sZXNzIHlvdSBzZXQgdGhlIGNyZWRlbnRpYWxzIGluaXRcbiAgICAgICAgLy8gPiBvcHRpb24uXG4gICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9GZXRjaF9BUEkvVXNpbmdfRmV0Y2hcbiAgICAgICAgLy9cbiAgICAgICAgLy8gPiBGb3IgbWF4aW11bSBicm93c2VyIGNvbXBhdGliaWxpdHkgd2hlbiBpdCBjb21lcyB0byBzZW5kaW5nICZcbiAgICAgICAgLy8gPiByZWNlaXZpbmcgY29va2llcywgYWx3YXlzIHN1cHBseSB0aGUgYGNyZWRlbnRpYWxzOiAnc2FtZS1vcmlnaW4nYFxuICAgICAgICAvLyA+IG9wdGlvbiBpbnN0ZWFkIG9mIHJlbHlpbmcgb24gdGhlIGRlZmF1bHQuXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9naXRodWIvZmV0Y2gjY2F2ZWF0c1xuICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgICAgbWV0aG9kOiBvcHRpb25zLm1ldGhvZCB8fCAnR0VUJyxcbiAgICAgICAgaGVhZGVyczogT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucy5oZWFkZXJzLCB7XG4gICAgICAgICAgICAneC1uZXh0anMtZGF0YSc6ICcxJ1xuICAgICAgICB9KVxuICAgIH0pLnRoZW4oKHJlc3BvbnNlKT0+e1xuICAgICAgICByZXR1cm4gIXJlc3BvbnNlLm9rICYmIGF0dGVtcHRzID4gMSAmJiByZXNwb25zZS5zdGF0dXMgPj0gNTAwID8gZmV0Y2hSZXRyeSh1cmwsIGF0dGVtcHRzIC0gMSwgb3B0aW9ucykgOiByZXNwb25zZTtcbiAgICB9KTtcbn1cbmNvbnN0IGJhY2tncm91bmRDYWNoZSA9IHt9O1xuZnVuY3Rpb24gZmV0Y2hOZXh0RGF0YSh7IGRhdGFIcmVmICwgaW5mbGlnaHRDYWNoZSAsIGlzUHJlZmV0Y2ggLCBoYXNNaWRkbGV3YXJlICwgaXNTZXJ2ZXJSZW5kZXIgLCBwYXJzZUpTT04gLCBwZXJzaXN0Q2FjaGUgLCBpc0JhY2tncm91bmQgLCB1bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUgIH0pIHtcbiAgICBjb25zdCB7IGhyZWY6IGNhY2hlS2V5ICB9ID0gbmV3IFVSTChkYXRhSHJlZiwgd2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIHZhciByZWYxO1xuICAgIGNvbnN0IGdldERhdGEgPSAocGFyYW1zKT0+e1xuICAgICAgICByZXR1cm4gZmV0Y2hSZXRyeShkYXRhSHJlZiwgaXNTZXJ2ZXJSZW5kZXIgPyAzIDogMSwge1xuICAgICAgICAgICAgaGVhZGVyczogaXNQcmVmZXRjaCA/IHtcbiAgICAgICAgICAgICAgICBwdXJwb3NlOiAncHJlZmV0Y2gnXG4gICAgICAgICAgICB9IDoge30sXG4gICAgICAgICAgICBtZXRob2Q6IChyZWYxID0gcGFyYW1zID09IG51bGwgPyB2b2lkIDAgOiBwYXJhbXMubWV0aG9kKSAhPSBudWxsID8gcmVmMSA6ICdHRVQnXG4gICAgICAgIH0pLnRoZW4oKHJlc3BvbnNlKT0+e1xuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm9rICYmIChwYXJhbXMgPT0gbnVsbCA/IHZvaWQgMCA6IHBhcmFtcy5tZXRob2QpID09PSAnSEVBRCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhSHJlZixcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6ICcnLFxuICAgICAgICAgICAgICAgICAgICBqc29uOiB7fVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpLnRoZW4oKHRleHQpPT57XG4gICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFdoZW4gdGhlIGRhdGEgcmVzcG9uc2UgaXMgYSByZWRpcmVjdCBiZWNhdXNlIG9mIGEgbWlkZGxld2FyZVxuICAgICAgICAgICAgICogd2UgZG8gbm90IGNvbnNpZGVyIGl0IGFuIGVycm9yLiBUaGUgaGVhZGVycyBtdXN0IGJyaW5nIHRoZVxuICAgICAgICAgICAgICogbWFwcGVkIGxvY2F0aW9uLlxuICAgICAgICAgICAgICogVE9ETzogQ2hhbmdlIHRoZSBzdGF0dXMgY29kZSBpbiB0aGUgaGFuZGxlci5cbiAgICAgICAgICAgICAqLyBpZiAoaGFzTWlkZGxld2FyZSAmJiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAzMDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAzMDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAzMDcsXG4gICAgICAgICAgICAgICAgICAgICAgICAzMDhcbiAgICAgICAgICAgICAgICAgICAgXS5pbmNsdWRlcyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFIcmVmLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbjoge31cbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFoYXNNaWRkbGV3YXJlICYmIHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVmO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChyZWYgPSB0cnlUb1BhcnNlQXNKU09OKHRleHQpKSA9PSBudWxsID8gdm9pZCAwIDogcmVmLm5vdEZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUhyZWYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEZvdW5kOiBTU0dfREFUQV9OT1RfRk9VTkRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKGBGYWlsZWQgdG8gbG9hZCBzdGF0aWMgcHJvcHNgKTtcbiAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBXZSBzaG91bGQgb25seSB0cmlnZ2VyIGEgc2VydmVyLXNpZGUgdHJhbnNpdGlvbiBpZiB0aGlzIHdhc1xuICAgICAgICAgICAgICogY2F1c2VkIG9uIGEgY2xpZW50LXNpZGUgdHJhbnNpdGlvbi4gT3RoZXJ3aXNlLCB3ZSdkIGdldCBpbnRvXG4gICAgICAgICAgICAgKiBhbiBpbmZpbml0ZSBsb29wLlxuICAgICAgICAgICAgICovIGlmICghaXNTZXJ2ZXJSZW5kZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfcm91dGVMb2FkZXIpLm1hcmtBc3NldEVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YUhyZWYsXG4gICAgICAgICAgICAgICAgICAgIGpzb246IHBhcnNlSlNPTiA/IHRyeVRvUGFyc2VBc0pTT04odGV4dCkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkudGhlbigoZGF0YSk9PntcbiAgICAgICAgICAgIGlmICghcGVyc2lzdENhY2hlIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgfHwgZGF0YS5yZXNwb25zZS5oZWFkZXJzLmdldCgneC1taWRkbGV3YXJlLWNhY2hlJykgPT09ICduby1jYWNoZScpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgaW5mbGlnaHRDYWNoZVtjYWNoZUtleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSkuY2F0Y2goKGVycik9PntcbiAgICAgICAgICAgIGRlbGV0ZSBpbmZsaWdodENhY2hlW2NhY2hlS2V5XTtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvLyB3aGVuIHNraXBwaW5nIGNsaWVudCBjYWNoZSB3ZSB3YWl0IHRvIHVwZGF0ZVxuICAgIC8vIGluZmxpZ2h0IGNhY2hlIHVudGlsIHN1Y2Nlc3NmdWwgZGF0YSByZXNwb25zZVxuICAgIC8vIHRoaXMgYWxsb3dzIHJhY2luZyBjbGljayBldmVudCB3aXRoIGZldGNoaW5nIG5ld2VyIGRhdGFcbiAgICAvLyB3aXRob3V0IGJsb2NraW5nIG5hdmlnYXRpb24gd2hlbiBzdGFsZSBkYXRhIGlzIGF2YWlsYWJsZVxuICAgIGlmICh1bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUgJiYgcGVyc2lzdENhY2hlKSB7XG4gICAgICAgIHJldHVybiBnZXREYXRhKHt9KS50aGVuKChkYXRhKT0+e1xuICAgICAgICAgICAgaW5mbGlnaHRDYWNoZVtjYWNoZUtleV0gPSBQcm9taXNlLnJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChpbmZsaWdodENhY2hlW2NhY2hlS2V5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBpbmZsaWdodENhY2hlW2NhY2hlS2V5XTtcbiAgICB9XG4gICAgcmV0dXJuIGluZmxpZ2h0Q2FjaGVbY2FjaGVLZXldID0gZ2V0RGF0YShpc0JhY2tncm91bmQgPyB7XG4gICAgICAgIG1ldGhvZDogJ0hFQUQnXG4gICAgfSA6IHt9KTtcbn1cbmZ1bmN0aW9uIHRyeVRvUGFyc2VBc0pTT04odGV4dCkge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHRleHQpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiwgMTApO1xufVxuZnVuY3Rpb24gaGFuZGxlSGFyZE5hdmlnYXRpb24oeyB1cmwgLCByb3V0ZXIgIH0pIHtcbiAgICAvLyBlbnN1cmUgd2UgZG9uJ3QgdHJpZ2dlciBhIGhhcmQgbmF2aWdhdGlvbiB0byB0aGUgc2FtZVxuICAgIC8vIFVSTCBhcyB0aGlzIGNhbiBlbmQgdXAgd2l0aCBhbiBpbmZpbml0ZSByZWZyZXNoXG4gICAgaWYgKHVybCA9PT0gKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgoKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShyb3V0ZXIuYXNQYXRoLCByb3V0ZXIubG9jYWxlKSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhcmlhbnQ6IGF0dGVtcHRlZCB0byBoYXJkIG5hdmlnYXRlIHRvIHRoZSBzYW1lIFVSTCAke3VybH0gJHtsb2NhdGlvbi5ocmVmfWApO1xuICAgIH1cbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybDtcbn1cbmNvbnN0IGdldENhbmNlbGxlZEhhbmRsZXIgPSAoeyByb3V0ZSAsIHJvdXRlciAgfSk9PntcbiAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG4gICAgY29uc3QgY2FuY2VsID0gcm91dGVyLmNsYyA9ICgpPT57XG4gICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgfTtcbiAgICBjb25zdCBoYW5kbGVDYW5jZWxsZWQgPSAoKT0+e1xuICAgICAgICBpZiAoY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihgQWJvcnQgZmV0Y2hpbmcgY29tcG9uZW50IGZvciByb3V0ZTogXCIke3JvdXRlfVwiYCk7XG4gICAgICAgICAgICBlcnJvci5jYW5jZWxsZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhbmNlbCA9PT0gcm91dGVyLmNsYykge1xuICAgICAgICAgICAgcm91dGVyLmNsYyA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBoYW5kbGVDYW5jZWxsZWQ7XG59O1xuY2xhc3MgUm91dGVyIHtcbiAgICByZWxvYWQoKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAqIEdvIGJhY2sgaW4gaGlzdG9yeVxuICAgKi8gYmFjaygpIHtcbiAgICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xuICAgIH1cbiAgICAvKipcbiAgICogUGVyZm9ybXMgYSBgcHVzaFN0YXRlYCB3aXRoIGFyZ3VtZW50c1xuICAgKiBAcGFyYW0gdXJsIG9mIHRoZSByb3V0ZVxuICAgKiBAcGFyYW0gYXMgbWFza3MgYHVybGAgZm9yIHRoZSBicm93c2VyXG4gICAqIEBwYXJhbSBvcHRpb25zIG9iamVjdCB5b3UgY2FuIGRlZmluZSBgc2hhbGxvd2AgYW5kIG90aGVyIG9wdGlvbnNcbiAgICovIHB1c2godXJsLCBhcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfU0NST0xMX1JFU1RPUkFUSU9OKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiByZW1vdmUgaW4gdGhlIGZ1dHVyZSB3aGVuIHdlIHVwZGF0ZSBoaXN0b3J5IGJlZm9yZSByb3V0ZSBjaGFuZ2VcbiAgICAgICAgICAgIC8vIGlzIGNvbXBsZXRlLCBhcyB0aGUgcG9wc3RhdGUgZXZlbnQgc2hvdWxkIGhhbmRsZSB0aGlzIGNhcHR1cmUuXG4gICAgICAgICAgICBpZiAobWFudWFsU2Nyb2xsUmVzdG9yYXRpb24pIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBTbmFwc2hvdCBzY3JvbGwgcG9zaXRpb24gcmlnaHQgYmVmb3JlIG5hdmlnYXRpbmcgdG8gYSBuZXcgcGFnZTpcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnX19uZXh0X3Njcm9sbF8nICsgdGhpcy5fa2V5LCBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB4OiBzZWxmLnBhZ2VYT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgeTogc2VsZi5wYWdlWU9mZnNldFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAoeyB1cmwgLCBhcyAgfSA9IHByZXBhcmVVcmxBcyh0aGlzLCB1cmwsIGFzKSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYW5nZSgncHVzaFN0YXRlJywgdXJsLCBhcywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBQZXJmb3JtcyBhIGByZXBsYWNlU3RhdGVgIHdpdGggYXJndW1lbnRzXG4gICAqIEBwYXJhbSB1cmwgb2YgdGhlIHJvdXRlXG4gICAqIEBwYXJhbSBhcyBtYXNrcyBgdXJsYCBmb3IgdGhlIGJyb3dzZXJcbiAgICogQHBhcmFtIG9wdGlvbnMgb2JqZWN0IHlvdSBjYW4gZGVmaW5lIGBzaGFsbG93YCBhbmQgb3RoZXIgb3B0aW9uc1xuICAgKi8gcmVwbGFjZSh1cmwsIGFzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgKHsgdXJsICwgYXMgIH0gPSBwcmVwYXJlVXJsQXModGhpcywgdXJsLCBhcykpO1xuICAgICAgICByZXR1cm4gdGhpcy5jaGFuZ2UoJ3JlcGxhY2VTdGF0ZScsIHVybCwgYXMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBjaGFuZ2UobWV0aG9kLCB1cmwsIGFzLCBvcHRpb25zLCBmb3JjZWRTY3JvbGwpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgcmV0dXJuIF9hc3luY190b19nZW5lcmF0b3IoZnVuY3Rpb24qKCkge1xuICAgICAgICAgICAgaWYgKCFpc0xvY2FsVVJMKHVybCkpIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIHVybCxcbiAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFdBUk5JTkc6IGBfaGAgaXMgYW4gaW50ZXJuYWwgb3B0aW9uIGZvciBoYW5kaW5nIE5leHQuanMgY2xpZW50LXNpZGVcbiAgICAgICAgICAgIC8vIGh5ZHJhdGlvbi4gWW91ciBhcHAgc2hvdWxkIF9uZXZlcl8gdXNlIHRoaXMgcHJvcGVydHkuIEl0IG1heSBjaGFuZ2UgYXRcbiAgICAgICAgICAgIC8vIGFueSB0aW1lIHdpdGhvdXQgbm90aWNlLlxuICAgICAgICAgICAgY29uc3QgaXNRdWVyeVVwZGF0aW5nID0gb3B0aW9ucy5faDtcbiAgICAgICAgICAgIGNvbnN0IHNob3VsZFJlc29sdmVIcmVmID0gaXNRdWVyeVVwZGF0aW5nIHx8IG9wdGlvbnMuX3Nob3VsZFJlc29sdmVIcmVmIHx8ICgwLCBfcGFyc2VQYXRoKS5wYXJzZVBhdGgodXJsKS5wYXRobmFtZSA9PT0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChhcykucGF0aG5hbWU7XG4gICAgICAgICAgICBjb25zdCBuZXh0U3RhdGUgPSBfZXh0ZW5kcyh7fSwgX3RoaXMuc3RhdGUpO1xuICAgICAgICAgICAgLy8gZm9yIHN0YXRpYyBwYWdlcyB3aXRoIHF1ZXJ5IHBhcmFtcyBpbiB0aGUgVVJMIHdlIGRlbGF5XG4gICAgICAgICAgICAvLyBtYXJraW5nIHRoZSByb3V0ZXIgcmVhZHkgdW50aWwgYWZ0ZXIgdGhlIHF1ZXJ5IGlzIHVwZGF0ZWRcbiAgICAgICAgICAgIC8vIG9yIGEgbmF2aWdhdGlvbiBoYXMgb2NjdXJyZWRcbiAgICAgICAgICAgIGNvbnN0IHJlYWR5U3RhdGVDaGFuZ2UgPSBfdGhpcy5pc1JlYWR5ICE9PSB0cnVlO1xuICAgICAgICAgICAgX3RoaXMuaXNSZWFkeSA9IHRydWU7XG4gICAgICAgICAgICBjb25zdCBpc1NzciA9IF90aGlzLmlzU3NyO1xuICAgICAgICAgICAgaWYgKCFpc1F1ZXJ5VXBkYXRpbmcpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5pc1NzciA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaWYgYSByb3V0ZSB0cmFuc2l0aW9uIGlzIGFscmVhZHkgaW4gcHJvZ3Jlc3MgYmVmb3JlXG4gICAgICAgICAgICAvLyB0aGUgcXVlcnkgdXBkYXRpbmcgaXMgdHJpZ2dlcmVkIGlnbm9yZSBxdWVyeSB1cGRhdGluZ1xuICAgICAgICAgICAgaWYgKGlzUXVlcnlVcGRhdGluZyAmJiBfdGhpcy5jbGMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwcmV2TG9jYWxlID0gbmV4dFN0YXRlLmxvY2FsZTtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgICAgICAgICAgbmV4dFN0YXRlLmxvY2FsZSA9IG9wdGlvbnMubG9jYWxlID09PSBmYWxzZSA/IF90aGlzLmRlZmF1bHRMb2NhbGUgOiBvcHRpb25zLmxvY2FsZSB8fCBuZXh0U3RhdGUubG9jYWxlO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb2NhbGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubG9jYWxlID0gbmV4dFN0YXRlLmxvY2FsZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkQXMgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwoKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgoYXMpID8gKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgoYXMpIDogYXMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvY2FsZVBhdGhSZXN1bHQgPSAoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgocGFyc2VkQXMucGF0aG5hbWUsIF90aGlzLmxvY2FsZXMpO1xuICAgICAgICAgICAgICAgIGlmIChsb2NhbGVQYXRoUmVzdWx0LmRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgICAgICAgICAgICAgIG5leHRTdGF0ZS5sb2NhbGUgPSBsb2NhbGVQYXRoUmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICAgICAgICAgICAgICBwYXJzZWRBcy5wYXRobmFtZSA9ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKHBhcnNlZEFzLnBhdGhuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgYXMgPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkQXMpO1xuICAgICAgICAgICAgICAgICAgICB1cmwgPSAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aCgoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgoKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgodXJsKSA/ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKHVybCkgOiB1cmwsIF90aGlzLmxvY2FsZXMpLnBhdGhuYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IGRpZE5hdmlnYXRlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgLy8gd2UgbmVlZCB0byB3cmFwIHRoaXMgaW4gdGhlIGVudiBjaGVjayBhZ2FpbiBzaW5jZSByZWdlbmVyYXRvciBydW50aW1lXG4gICAgICAgICAgICAgICAgLy8gbW92ZXMgdGhpcyBvbiBpdHMgb3duIGR1ZSB0byB0aGUgcmV0dXJuXG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlZjtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhlIGxvY2FsZSBpc24ndCBjb25maWd1cmVkIGhhcmQgbmF2aWdhdGUgdG8gc2hvdyA0MDQgcGFnZVxuICAgICAgICAgICAgICAgICAgICBpZiAoISgocmVmID0gX3RoaXMubG9jYWxlcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5pbmNsdWRlcyhuZXh0U3RhdGUubG9jYWxlKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZEFzLnBhdGhuYW1lID0gKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShwYXJzZWRBcy5wYXRobmFtZSwgbmV4dFN0YXRlLmxvY2FsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkQXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyB3YXMgcHJldmlvdXNseSBhIHJldHVybiBidXQgd2FzIHJlbW92ZWQgaW4gZmF2b3JcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9mIGJldHRlciBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2l0aCByZWdlbmVyYXRvciBydW50aW1lXG4gICAgICAgICAgICAgICAgICAgICAgICBkaWROYXZpZ2F0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZGV0ZWN0ZWREb21haW4gPSAoMCwgX2RldGVjdERvbWFpbkxvY2FsZSkuZGV0ZWN0RG9tYWluTG9jYWxlKF90aGlzLmRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgbmV4dFN0YXRlLmxvY2FsZSk7XG4gICAgICAgICAgICAgICAgLy8gd2UgbmVlZCB0byB3cmFwIHRoaXMgaW4gdGhlIGVudiBjaGVjayBhZ2FpbiBzaW5jZSByZWdlbmVyYXRvciBydW50aW1lXG4gICAgICAgICAgICAgICAgLy8gbW92ZXMgdGhpcyBvbiBpdHMgb3duIGR1ZSB0byB0aGUgcmV0dXJuXG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgd2UgYXJlIG5hdmlnYXRpbmcgdG8gYSBkb21haW4gbG9jYWxlIGVuc3VyZSB3ZSByZWRpcmVjdCB0byB0aGVcbiAgICAgICAgICAgICAgICAgICAgLy8gY29ycmVjdCBkb21haW5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFkaWROYXZpZ2F0ZSAmJiBkZXRlY3RlZERvbWFpbiAmJiBfdGhpcy5pc0xvY2FsZURvbWFpbiAmJiBzZWxmLmxvY2F0aW9uLmhvc3RuYW1lICE9PSBkZXRlY3RlZERvbWFpbi5kb21haW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFzTm9CYXNlUGF0aCA9ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKGFzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUhhcmROYXZpZ2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGBodHRwJHtkZXRlY3RlZERvbWFpbi5odHRwID8gJycgOiAncyd9Oi8vJHtkZXRlY3RlZERvbWFpbi5kb21haW59JHsoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aChgJHtuZXh0U3RhdGUubG9jYWxlID09PSBkZXRlY3RlZERvbWFpbi5kZWZhdWx0TG9jYWxlID8gJycgOiBgLyR7bmV4dFN0YXRlLmxvY2FsZX1gfSR7YXNOb0Jhc2VQYXRoID09PSAnLycgPyAnJyA6IGFzTm9CYXNlUGF0aH1gIHx8ICcvJyl9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgd2FzIHByZXZpb3VzbHkgYSByZXR1cm4gYnV0IHdhcyByZW1vdmVkIGluIGZhdm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBvZiBiZXR0ZXIgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdpdGggcmVnZW5lcmF0b3IgcnVudGltZVxuICAgICAgICAgICAgICAgICAgICAgICAgZGlkTmF2aWdhdGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkaWROYXZpZ2F0ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKCk9Pnt9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBtYXJraW5nIHJvdXRlIGNoYW5nZXMgYXMgYSBuYXZpZ2F0aW9uIHN0YXJ0IGVudHJ5XG4gICAgICAgICAgICBpZiAoX3V0aWxzLlNUKSB7XG4gICAgICAgICAgICAgICAgcGVyZm9ybWFuY2UubWFyaygncm91dGVDaGFuZ2UnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgc2hhbGxvdyA9ZmFsc2UgLCBzY3JvbGwgPXRydWUgIH0gPSBvcHRpb25zO1xuICAgICAgICAgICAgY29uc3Qgcm91dGVQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICBzaGFsbG93XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKF90aGlzLl9pbkZsaWdodFJvdXRlICYmIF90aGlzLmNsYykge1xuICAgICAgICAgICAgICAgIGlmICghaXNTc3IpIHtcbiAgICAgICAgICAgICAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdyb3V0ZUNoYW5nZUVycm9yJywgYnVpbGRDYW5jZWxsYXRpb25FcnJvcigpLCBfdGhpcy5faW5GbGlnaHRSb3V0ZSwgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF90aGlzLmNsYygpO1xuICAgICAgICAgICAgICAgIF90aGlzLmNsYyA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhcyA9ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKCgwLCBfYWRkTG9jYWxlKS5hZGRMb2NhbGUoKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgoYXMpID8gKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgoYXMpIDogYXMsIG9wdGlvbnMubG9jYWxlLCBfdGhpcy5kZWZhdWx0TG9jYWxlKSk7XG4gICAgICAgICAgICBjb25zdCBjbGVhbmVkQXMgPSAoMCwgX3JlbW92ZUxvY2FsZSkucmVtb3ZlTG9jYWxlKCgwLCBfaGFzQmFzZVBhdGgpLmhhc0Jhc2VQYXRoKGFzKSA/ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKGFzKSA6IGFzLCBuZXh0U3RhdGUubG9jYWxlKTtcbiAgICAgICAgICAgIF90aGlzLl9pbkZsaWdodFJvdXRlID0gYXM7XG4gICAgICAgICAgICBjb25zdCBsb2NhbGVDaGFuZ2UgPSBwcmV2TG9jYWxlICE9PSBuZXh0U3RhdGUubG9jYWxlO1xuICAgICAgICAgICAgLy8gSWYgdGhlIHVybCBjaGFuZ2UgaXMgb25seSByZWxhdGVkIHRvIGEgaGFzaCBjaGFuZ2VcbiAgICAgICAgICAgIC8vIFdlIHNob3VsZCBub3QgcHJvY2VlZC4gV2Ugc2hvdWxkIG9ubHkgY2hhbmdlIHRoZSBzdGF0ZS5cbiAgICAgICAgICAgIGlmICghaXNRdWVyeVVwZGF0aW5nICYmIF90aGlzLm9ubHlBSGFzaENoYW5nZShjbGVhbmVkQXMpICYmICFsb2NhbGVDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICBuZXh0U3RhdGUuYXNQYXRoID0gY2xlYW5lZEFzO1xuICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgnaGFzaENoYW5nZVN0YXJ0JywgYXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICAgICAgICAgIC8vIFRPRE86IGRvIHdlIG5lZWQgdGhlIHJlc29sdmVkIGhyZWYgd2hlbiBvbmx5IGEgaGFzaCBjaGFuZ2U/XG4gICAgICAgICAgICAgICAgX3RoaXMuY2hhbmdlU3RhdGUobWV0aG9kLCB1cmwsIGFzLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGw6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGlmIChzY3JvbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2Nyb2xsVG9IYXNoKGNsZWFuZWRBcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIF90aGlzLnNldChuZXh0U3RhdGUsIF90aGlzLmNvbXBvbmVudHNbbmV4dFN0YXRlLnJvdXRlXSwgbnVsbCk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoMCwgX2lzRXJyb3IpLmRlZmF1bHQoZXJyKSAmJiBlcnIuY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ3JvdXRlQ2hhbmdlRXJyb3InLCBlcnIsIGNsZWFuZWRBcywgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ2hhc2hDaGFuZ2VDb21wbGV0ZScsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBwYXJzZWQgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwodXJsKTtcbiAgICAgICAgICAgIGxldCB7IHBhdGhuYW1lICwgcXVlcnkgIH0gPSBwYXJzZWQ7XG4gICAgICAgICAgICAvLyBUaGUgYnVpbGQgbWFuaWZlc3QgbmVlZHMgdG8gYmUgbG9hZGVkIGJlZm9yZSBhdXRvLXN0YXRpYyBkeW5hbWljIHBhZ2VzXG4gICAgICAgICAgICAvLyBnZXQgdGhlaXIgcXVlcnkgcGFyYW1ldGVycyB0byBhbGxvdyBlbnN1cmluZyB0aGV5IGNhbiBiZSBwYXJzZWQgcHJvcGVybHlcbiAgICAgICAgICAgIC8vIHdoZW4gcmV3cml0dGVuIHRvXG4gICAgICAgICAgICBsZXQgcGFnZXMsIHJld3JpdGVzO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBbcGFnZXMsIHsgX19yZXdyaXRlczogcmV3cml0ZXMgIH1dID0geWllbGQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5wYWdlTG9hZGVyLmdldFBhZ2VMaXN0KCksXG4gICAgICAgICAgICAgICAgICAgICgwLCBfcm91dGVMb2FkZXIpLmdldENsaWVudEJ1aWxkTWFuaWZlc3QoKSxcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucGFnZUxvYWRlci5nZXRNaWRkbGV3YXJlKCksIFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgd2UgZmFpbCB0byByZXNvbHZlIHRoZSBwYWdlIGxpc3Qgb3IgY2xpZW50LWJ1aWxkIG1hbmlmZXN0LCB3ZSBtdXN0XG4gICAgICAgICAgICAgICAgLy8gZG8gYSBzZXJ2ZXItc2lkZSB0cmFuc2l0aW9uOlxuICAgICAgICAgICAgICAgIGhhbmRsZUhhcmROYXZpZ2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBhcyxcbiAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIGFza2VkIHRvIGNoYW5nZSB0aGUgY3VycmVudCBVUkwgd2Ugc2hvdWxkIHJlbG9hZCB0aGUgY3VycmVudCBwYWdlXG4gICAgICAgICAgICAvLyAobm90IGxvY2F0aW9uLnJlbG9hZCgpIGJ1dCByZWxvYWQgZ2V0SW5pdGlhbFByb3BzIGFuZCBvdGhlciBOZXh0LmpzIHN0dWZmcylcbiAgICAgICAgICAgIC8vIFdlIGFsc28gbmVlZCB0byBzZXQgdGhlIG1ldGhvZCA9IHJlcGxhY2VTdGF0ZSBhbHdheXNcbiAgICAgICAgICAgIC8vIGFzIHRoaXMgc2hvdWxkIG5vdCBnbyBpbnRvIHRoZSBoaXN0b3J5IChUaGF0J3MgaG93IGJyb3dzZXJzIHdvcmspXG4gICAgICAgICAgICAvLyBXZSBzaG91bGQgY29tcGFyZSB0aGUgbmV3IGFzUGF0aCB0byB0aGUgY3VycmVudCBhc1BhdGgsIG5vdCB0aGUgdXJsXG4gICAgICAgICAgICBpZiAoIV90aGlzLnVybElzTmV3KGNsZWFuZWRBcykgJiYgIWxvY2FsZUNoYW5nZSkge1xuICAgICAgICAgICAgICAgIG1ldGhvZCA9ICdyZXBsYWNlU3RhdGUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gd2UgbmVlZCB0byByZXNvbHZlIHRoZSBhcyB2YWx1ZSB1c2luZyByZXdyaXRlcyBmb3IgZHluYW1pYyBTU0dcbiAgICAgICAgICAgIC8vIHBhZ2VzIHRvIGFsbG93IGJ1aWxkaW5nIHRoZSBkYXRhIFVSTCBjb3JyZWN0bHlcbiAgICAgICAgICAgIGxldCByZXNvbHZlZEFzID0gYXM7XG4gICAgICAgICAgICAvLyB1cmwgYW5kIGFzIHNob3VsZCBhbHdheXMgYmUgcHJlZml4ZWQgd2l0aCBiYXNlUGF0aCBieSB0aGlzXG4gICAgICAgICAgICAvLyBwb2ludCBieSBlaXRoZXIgbmV4dC9saW5rIG9yIHJvdXRlci5wdXNoL3JlcGxhY2Ugc28gc3RyaXAgdGhlXG4gICAgICAgICAgICAvLyBiYXNlUGF0aCBmcm9tIHRoZSBwYXRobmFtZSB0byBtYXRjaCB0aGUgcGFnZXMgZGlyIDEtdG8tMVxuICAgICAgICAgICAgcGF0aG5hbWUgPSBwYXRobmFtZSA/ICgwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaCgoMCwgX3JlbW92ZUJhc2VQYXRoKS5yZW1vdmVCYXNlUGF0aChwYXRobmFtZSkpIDogcGF0aG5hbWU7XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBhdHRlbXB0IHJlc29sdmUgYXNQYXRoIHdoZW4gd2UgbmVlZCB0byBleGVjdXRlXG4gICAgICAgICAgICAvLyBtaWRkbGV3YXJlIGFzIHRoZSByZXNvbHZpbmcgd2lsbCBvY2N1ciBzZXJ2ZXItc2lkZVxuICAgICAgICAgICAgY29uc3QgaXNNaWRkbGV3YXJlTWF0Y2ggPSB5aWVsZCBtYXRjaGVzTWlkZGxld2FyZSh7XG4gICAgICAgICAgICAgICAgYXNQYXRoOiBhcyxcbiAgICAgICAgICAgICAgICBsb2NhbGU6IG5leHRTdGF0ZS5sb2NhbGUsXG4gICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5zaGFsbG93ICYmIGlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgcGF0aG5hbWUgPSBfdGhpcy5wYXRobmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzaG91bGRSZXNvbHZlSHJlZiAmJiBwYXRobmFtZSAhPT0gJy9fZXJyb3InKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5fc2hvdWxkUmVzb2x2ZUhyZWYgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSEFTX1JFV1JJVEVTICYmIGFzLnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXdyaXRlc1Jlc3VsdCA9ICgwLCBfcmVzb2x2ZVJld3JpdGVzKS5kZWZhdWx0KCgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKCgwLCBfYWRkTG9jYWxlKS5hZGRMb2NhbGUoY2xlYW5lZEFzLCBuZXh0U3RhdGUubG9jYWxlKSwgdHJ1ZSksIHBhZ2VzLCByZXdyaXRlcywgcXVlcnksIChwKT0+cmVzb2x2ZUR5bmFtaWNSb3V0ZShwLCBwYWdlcyksIF90aGlzLmxvY2FsZXMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmV3cml0ZXNSZXN1bHQuZXh0ZXJuYWxEZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBhcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNNaWRkbGV3YXJlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVkQXMgPSByZXdyaXRlc1Jlc3VsdC5hc1BhdGg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHJld3JpdGVzUmVzdWx0Lm1hdGNoZWRQYWdlICYmIHJld3JpdGVzUmVzdWx0LnJlc29sdmVkSHJlZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBkaXJlY3RseSBtYXRjaGVzIGEgcGFnZSB3ZSBuZWVkIHRvIHVwZGF0ZSB0aGUgaHJlZiB0b1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYWxsb3cgdGhlIGNvcnJlY3QgcGFnZSBjaHVuayB0byBiZSBsb2FkZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcmV3cml0ZXNSZXN1bHQucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgocGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc01pZGRsZXdhcmVNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gcmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXRobmFtZSwgcGFnZXMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VkLnBhdGhuYW1lICE9PSBwYXRobmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWUgPSBwYXJzZWQucGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWQucGF0aG5hbWUgPSAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aChwYXRobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWlzTG9jYWxVUkwoYXMpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGhyZWY6IFwiJHt1cmx9XCIgYW5kIGFzOiBcIiR7YXN9XCIsIHJlY2VpdmVkIHJlbGF0aXZlIGhyZWYgYW5kIGV4dGVybmFsIGFzYCArIGBcXG5TZWUgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9pbnZhbGlkLXJlbGF0aXZlLXVybC1leHRlcm5hbC1hc2ApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIHVybDogYXMsXG4gICAgICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNvbHZlZEFzID0gKDAsIF9yZW1vdmVMb2NhbGUpLnJlbW92ZUxvY2FsZSgoMCwgX3JlbW92ZUJhc2VQYXRoKS5yZW1vdmVCYXNlUGF0aChyZXNvbHZlZEFzKSwgbmV4dFN0YXRlLmxvY2FsZSk7XG4gICAgICAgICAgICBsZXQgcm91dGUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgICAgICAgICAgbGV0IHJvdXRlTWF0Y2ggPSBmYWxzZTtcbiAgICAgICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUocm91dGUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkQXMgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwocmVzb2x2ZWRBcyk7XG4gICAgICAgICAgICAgICAgY29uc3QgYXNQYXRobmFtZSA9IHBhcnNlZEFzLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvdXRlUmVnZXggPSAoMCwgX3JvdXRlUmVnZXgpLmdldFJvdXRlUmVnZXgocm91dGUpO1xuICAgICAgICAgICAgICAgIHJvdXRlTWF0Y2ggPSAoMCwgX3JvdXRlTWF0Y2hlcikuZ2V0Um91dGVNYXRjaGVyKHJvdXRlUmVnZXgpKGFzUGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNob3VsZEludGVycG9sYXRlID0gcm91dGUgPT09IGFzUGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgY29uc3QgaW50ZXJwb2xhdGVkQXMgPSBzaG91bGRJbnRlcnBvbGF0ZSA/IGludGVycG9sYXRlQXMocm91dGUsIGFzUGF0aG5hbWUsIHF1ZXJ5KSA6IHt9O1xuICAgICAgICAgICAgICAgIGlmICghcm91dGVNYXRjaCB8fCBzaG91bGRJbnRlcnBvbGF0ZSAmJiAhaW50ZXJwb2xhdGVkQXMucmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1pc3NpbmdQYXJhbXMgPSBPYmplY3Qua2V5cyhyb3V0ZVJlZ2V4Lmdyb3VwcykuZmlsdGVyKChwYXJhbSk9PiFxdWVyeVtwYXJhbV0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWlzc2luZ1BhcmFtcy5sZW5ndGggPiAwICYmICFpc01pZGRsZXdhcmVNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYCR7c2hvdWxkSW50ZXJwb2xhdGUgPyBgSW50ZXJwb2xhdGluZyBocmVmYCA6IGBNaXNtYXRjaGluZyBcXGBhc1xcYCBhbmQgXFxgaHJlZlxcYGB9IGZhaWxlZCB0byBtYW51YWxseSBwcm92aWRlIGAgKyBgdGhlIHBhcmFtczogJHttaXNzaW5nUGFyYW1zLmpvaW4oJywgJyl9IGluIHRoZSBcXGBocmVmXFxgJ3MgXFxgcXVlcnlcXGBgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigoc2hvdWxkSW50ZXJwb2xhdGUgPyBgVGhlIHByb3ZpZGVkIFxcYGhyZWZcXGAgKCR7dXJsfSkgdmFsdWUgaXMgbWlzc2luZyBxdWVyeSB2YWx1ZXMgKCR7bWlzc2luZ1BhcmFtcy5qb2luKCcsICcpfSkgdG8gYmUgaW50ZXJwb2xhdGVkIHByb3Blcmx5LiBgIDogYFRoZSBwcm92aWRlZCBcXGBhc1xcYCB2YWx1ZSAoJHthc1BhdGhuYW1lfSkgaXMgaW5jb21wYXRpYmxlIHdpdGggdGhlIFxcYGhyZWZcXGAgdmFsdWUgKCR7cm91dGV9KS4gYCkgKyBgUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy8ke3Nob3VsZEludGVycG9sYXRlID8gJ2hyZWYtaW50ZXJwb2xhdGlvbi1mYWlsZWQnIDogJ2luY29tcGF0aWJsZS1ocmVmLWFzJ31gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2hvdWxkSW50ZXJwb2xhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgYXMgPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24oT2JqZWN0LmFzc2lnbih7fSwgcGFyc2VkQXMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiBpbnRlcnBvbGF0ZWRBcy5yZXN1bHQsXG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeTogb21pdChxdWVyeSwgaW50ZXJwb2xhdGVkQXMucGFyYW1zKVxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gTWVyZ2UgcGFyYW1zIGludG8gYHF1ZXJ5YCwgb3ZlcndyaXRpbmcgYW55IHNwZWNpZmllZCBpbiBzZWFyY2hcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihxdWVyeSwgcm91dGVNYXRjaCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1F1ZXJ5VXBkYXRpbmcpIHtcbiAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ3JvdXRlQ2hhbmdlU3RhcnQnLCBhcywgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciByZWYyLCByZWYzO1xuICAgICAgICAgICAgICAgIGxldCByb3V0ZUluZm8gPSB5aWVsZCBfdGhpcy5nZXRSb3V0ZUluZm8oe1xuICAgICAgICAgICAgICAgICAgICByb3V0ZSxcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgICAgICAgICBhcyxcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZWRBcyxcbiAgICAgICAgICAgICAgICAgICAgcm91dGVQcm9wcyxcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxlOiBuZXh0U3RhdGUubG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICBpc1ByZXZpZXc6IG5leHRTdGF0ZS5pc1ByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgIGhhc01pZGRsZXdhcmU6IGlzTWlkZGxld2FyZU1hdGNoXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKCdyb3V0ZScgaW4gcm91dGVJbmZvICYmIGlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcm91dGVJbmZvLnJvdXRlIHx8IHJvdXRlO1xuICAgICAgICAgICAgICAgICAgICByb3V0ZSA9IHBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXJvdXRlUHJvcHMuc2hhbGxvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnkgPSBPYmplY3QuYXNzaWduKHt9LCByb3V0ZUluZm8ucXVlcnkgfHwge30sIHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocm91dGVNYXRjaCAmJiBwYXRobmFtZSAhPT0gcGFyc2VkLnBhdGhuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhyb3V0ZU1hdGNoKS5mb3JFYWNoKChrZXkpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJvdXRlTWF0Y2ggJiYgcXVlcnlba2V5XSA9PT0gcm91dGVNYXRjaFtrZXldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBxdWVyeVtrZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUocGF0aG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwcmVmaXhlZEFzID0gIXJvdXRlUHJvcHMuc2hhbGxvdyAmJiByb3V0ZUluZm8ucmVzb2x2ZWRBcyA/IHJvdXRlSW5mby5yZXNvbHZlZEFzIDogKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgoKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShuZXcgVVJMKGFzLCBsb2NhdGlvbi5ocmVmKS5wYXRobmFtZSwgbmV4dFN0YXRlLmxvY2FsZSksIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJld3JpdGVBcyA9IHByZWZpeGVkQXM7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgocmV3cml0ZUFzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJld3JpdGVBcyA9ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKHJld3JpdGVBcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxvY2FsZVJlc3VsdCA9ICgwLCBfbm9ybWFsaXplTG9jYWxlUGF0aCkubm9ybWFsaXplTG9jYWxlUGF0aChyZXdyaXRlQXMsIF90aGlzLmxvY2FsZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHRTdGF0ZS5sb2NhbGUgPSBsb2NhbGVSZXN1bHQuZGV0ZWN0ZWRMb2NhbGUgfHwgbmV4dFN0YXRlLmxvY2FsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXdyaXRlQXMgPSBsb2NhbGVSZXN1bHQucGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByb3V0ZVJlZ2V4ID0gKDAsIF9yb3V0ZVJlZ2V4KS5nZXRSb3V0ZVJlZ2V4KHBhdGhuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1clJvdXRlTWF0Y2ggPSAoMCwgX3JvdXRlTWF0Y2hlcikuZ2V0Um91dGVNYXRjaGVyKHJvdXRlUmVnZXgpKHJld3JpdGVBcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VyUm91dGVNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ocXVlcnksIGN1clJvdXRlTWF0Y2gpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSByb3V0ZUluZm8gYnJpbmdzIGEgcmVkaXJlY3Qgd2Ugc2ltcGx5IGFwcGx5IGl0LlxuICAgICAgICAgICAgICAgIGlmICgndHlwZScgaW4gcm91dGVJbmZvKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyb3V0ZUluZm8udHlwZSA9PT0gJ3JlZGlyZWN0LWludGVybmFsJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmNoYW5nZShtZXRob2QsIHJvdXRlSW5mby5uZXdVcmwsIHJvdXRlSW5mby5uZXdBcywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiByb3V0ZUluZm8uZGVzdGluYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKCk9Pnt9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgeyBlcnJvciAsIHByb3BzICwgX19OX1NTRyAsIF9fTl9TU1AgIH0gPSByb3V0ZUluZm87XG4gICAgICAgICAgICAgICAgY29uc3QgY29tcG9uZW50ID0gcm91dGVJbmZvLkNvbXBvbmVudDtcbiAgICAgICAgICAgICAgICBpZiAoY29tcG9uZW50ICYmIGNvbXBvbmVudC51bnN0YWJsZV9zY3JpcHRMb2FkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2NyaXB0cyA9IFtdLmNvbmNhdChjb21wb25lbnQudW5zdGFibGVfc2NyaXB0TG9hZGVyKCkpO1xuICAgICAgICAgICAgICAgICAgICBzY3JpcHRzLmZvckVhY2goKHNjcmlwdCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfc2NyaXB0KS5oYW5kbGVDbGllbnRTY3JpcHRMb2FkKHNjcmlwdC5wcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBoYW5kbGUgcmVkaXJlY3Qgb24gY2xpZW50LXRyYW5zaXRpb25cbiAgICAgICAgICAgICAgICBpZiAoKF9fTl9TU0cgfHwgX19OX1NTUCkgJiYgcHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3BzLnBhZ2VQcm9wcyAmJiBwcm9wcy5wYWdlUHJvcHMuX19OX1JFRElSRUNUKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBVc2UgdGhlIGRlc3RpbmF0aW9uIGZyb20gcmVkaXJlY3Qgd2l0aG91dCBhZGRpbmcgbG9jYWxlXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmxvY2FsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVzdGluYXRpb24gPSBwcm9wcy5wYWdlUHJvcHMuX19OX1JFRElSRUNUO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgZGVzdGluYXRpb24gaXMgaW50ZXJuYWwgKHJlc29sdmVzIHRvIGEgcGFnZSkgYW5kIGF0dGVtcHRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNsaWVudC1uYXZpZ2F0aW9uIGlmIGl0IGlzIGZhbGxpbmcgYmFjayB0byBoYXJkIG5hdmlnYXRpb24gaWZcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGl0J3Mgbm90XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVzdGluYXRpb24uc3RhcnRzV2l0aCgnLycpICYmIHByb3BzLnBhZ2VQcm9wcy5fX05fUkVESVJFQ1RfQkFTRV9QQVRIICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZEhyZWYgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwoZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZEhyZWYucGF0aG5hbWUgPSByZXNvbHZlRHluYW1pY1JvdXRlKHBhcnNlZEhyZWYucGF0aG5hbWUsIHBhZ2VzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHVybDogbmV3VXJsICwgYXM6IG5ld0FzICB9ID0gcHJlcGFyZVVybEFzKF90aGlzLCBkZXN0aW5hdGlvbiwgZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5jaGFuZ2UobWV0aG9kLCBuZXdVcmwsIG5ld0FzLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUhhcmROYXZpZ2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGRlc3RpbmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCgpPT57fSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbmV4dFN0YXRlLmlzUHJldmlldyA9ICEhcHJvcHMuX19OX1BSRVZJRVc7XG4gICAgICAgICAgICAgICAgICAgIC8vIGhhbmRsZSBTU0cgZGF0YSA0MDRcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3BzLm5vdEZvdW5kID09PSBTU0dfREFUQV9OT1RfRk9VTkQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBub3RGb3VuZFJvdXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5aWVsZCBfdGhpcy5mZXRjaENvbXBvbmVudCgnLzQwNCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEZvdW5kUm91dGUgPSAnLzQwNCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90Rm91bmRSb3V0ZSA9ICcvX2Vycm9yJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlSW5mbyA9IHlpZWxkIF90aGlzLmdldFJvdXRlSW5mbyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm91dGU6IG5vdEZvdW5kUm91dGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6IG5vdEZvdW5kUm91dGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZWRBcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZVByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYWxsb3c6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGU6IG5leHRTdGF0ZS5sb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmV2aWV3OiBuZXh0U3RhdGUuaXNQcmV2aWV3XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgndHlwZScgaW4gcm91dGVJbmZvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIG1pZGRsZXdhcmUgZWZmZWN0IG9uIC80MDRgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ2JlZm9yZUhpc3RvcnlDaGFuZ2UnLCBhcywgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICAgICAgX3RoaXMuY2hhbmdlU3RhdGUobWV0aG9kLCB1cmwsIGFzLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNRdWVyeVVwZGF0aW5nICYmIHBhdGhuYW1lID09PSAnL19lcnJvcicgJiYgKChyZWYyID0gc2VsZi5fX05FWFRfREFUQV9fLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogKHJlZjMgPSByZWYyLnBhZ2VQcm9wcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZjMuc3RhdHVzQ29kZSkgPT09IDUwMCAmJiAocHJvcHMgPT0gbnVsbCA/IHZvaWQgMCA6IHByb3BzLnBhZ2VQcm9wcykpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZW5zdXJlIHN0YXR1c0NvZGUgaXMgc3RpbGwgY29ycmVjdCBmb3Igc3RhdGljIDUwMCBwYWdlXG4gICAgICAgICAgICAgICAgICAgIC8vIHdoZW4gdXBkYXRpbmcgcXVlcnkgaW5mb3JtYXRpb25cbiAgICAgICAgICAgICAgICAgICAgcHJvcHMucGFnZVByb3BzLnN0YXR1c0NvZGUgPSA1MDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBfcm91dGU7XG4gICAgICAgICAgICAgICAgLy8gc2hhbGxvdyByb3V0aW5nIGlzIG9ubHkgYWxsb3dlZCBmb3Igc2FtZSBwYWdlIFVSTCBjaGFuZ2VzLlxuICAgICAgICAgICAgICAgIGNvbnN0IGlzVmFsaWRTaGFsbG93Um91dGUgPSBvcHRpb25zLnNoYWxsb3cgJiYgbmV4dFN0YXRlLnJvdXRlID09PSAoKF9yb3V0ZSA9IHJvdXRlSW5mby5yb3V0ZSkgIT0gbnVsbCA/IF9yb3V0ZSA6IHJvdXRlKTtcbiAgICAgICAgICAgICAgICB2YXIgX3Njcm9sbDtcbiAgICAgICAgICAgICAgICBjb25zdCBzaG91bGRTY3JvbGwgPSAoX3Njcm9sbCA9IG9wdGlvbnMuc2Nyb2xsKSAhPSBudWxsID8gX3Njcm9sbCA6ICFvcHRpb25zLl9oICYmICFpc1ZhbGlkU2hhbGxvd1JvdXRlO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc2V0U2Nyb2xsID0gc2hvdWxkU2Nyb2xsID8ge1xuICAgICAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICAgICAgfSA6IG51bGw7XG4gICAgICAgICAgICAgICAgLy8gdGhlIG5ldyBzdGF0ZSB0aGF0IHRoZSByb3V0ZXIgZ29ubmEgc2V0XG4gICAgICAgICAgICAgICAgY29uc3QgdXBjb21pbmdSb3V0ZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBuZXh0U3RhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgcm91dGUsXG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICAgICAgYXNQYXRoOiBjbGVhbmVkQXMsXG4gICAgICAgICAgICAgICAgICAgIGlzRmFsbGJhY2s6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgdXBjb21pbmdTY3JvbGxTdGF0ZSA9IGZvcmNlZFNjcm9sbCAhPSBudWxsID8gZm9yY2VkU2Nyb2xsIDogcmVzZXRTY3JvbGw7XG4gICAgICAgICAgICAgICAgLy8gZm9yIHF1ZXJ5IHVwZGF0ZXMgd2UgY2FuIHNraXAgaXQgaWYgdGhlIHN0YXRlIGlzIHVuY2hhbmdlZCBhbmQgd2UgZG9uJ3RcbiAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHNjcm9sbFxuICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9pc3N1ZXMvMzcxMzlcbiAgICAgICAgICAgICAgICBjb25zdCBjYW5Ta2lwVXBkYXRpbmcgPSBvcHRpb25zLl9oICYmICF1cGNvbWluZ1Njcm9sbFN0YXRlICYmICFyZWFkeVN0YXRlQ2hhbmdlICYmICFsb2NhbGVDaGFuZ2UgJiYgKDAsIF9jb21wYXJlU3RhdGVzKS5jb21wYXJlUm91dGVyU3RhdGVzKHVwY29taW5nUm91dGVyU3RhdGUsIF90aGlzLnN0YXRlKTtcbiAgICAgICAgICAgICAgICBpZiAoIWNhblNraXBVcGRhdGluZykge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBfdGhpcy5zZXQodXBjb21pbmdSb3V0ZXJTdGF0ZSwgcm91dGVJbmZvLCB1cGNvbWluZ1Njcm9sbFN0YXRlKS5jYXRjaCgoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmNhbmNlbGxlZCkgZXJyb3IgPSBlcnJvciB8fCBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB0aHJvdyBlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzUXVlcnlVcGRhdGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VFcnJvcicsIGVycm9yLCBjbGVhbmVkQXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0U3RhdGUubG9jYWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmxhbmcgPSBuZXh0U3RhdGUubG9jYWxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNRdWVyeVVwZGF0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ3JvdXRlQ2hhbmdlQ29tcGxldGUnLCBhcywgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQSBoYXNoIG1hcmsgIyBpcyB0aGUgb3B0aW9uYWwgbGFzdCBwYXJ0IG9mIGEgVVJMXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc2hSZWdleCA9IC8jLiskLztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZFNjcm9sbCAmJiBoYXNoUmVnZXgudGVzdChhcykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNjcm9sbFRvSGFzaChhcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIxKSB7XG4gICAgICAgICAgICAgICAgaWYgKCgwLCBfaXNFcnJvcikuZGVmYXVsdChlcnIxKSAmJiBlcnIxLmNhbmNlbGxlZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycjE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKCk7XG4gICAgfVxuICAgIGNoYW5nZVN0YXRlKG1ldGhvZCwgdXJsLCBhcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5oaXN0b3J5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFdhcm5pbmc6IHdpbmRvdy5oaXN0b3J5IGlzIG5vdCBhdmFpbGFibGUuYCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuaGlzdG9yeVttZXRob2RdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFdhcm5pbmc6IHdpbmRvdy5oaXN0b3J5LiR7bWV0aG9kfSBpcyBub3QgYXZhaWxhYmxlYCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChtZXRob2QgIT09ICdwdXNoU3RhdGUnIHx8ICgwLCBfdXRpbHMpLmdldFVSTCgpICE9PSBhcykge1xuICAgICAgICAgICAgdGhpcy5fc2hhbGxvdyA9IG9wdGlvbnMuc2hhbGxvdztcbiAgICAgICAgICAgIHdpbmRvdy5oaXN0b3J5W21ldGhvZF0oe1xuICAgICAgICAgICAgICAgIHVybCxcbiAgICAgICAgICAgICAgICBhcyxcbiAgICAgICAgICAgICAgICBvcHRpb25zLFxuICAgICAgICAgICAgICAgIF9fTjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBrZXk6IHRoaXMuX2tleSA9IG1ldGhvZCAhPT0gJ3B1c2hTdGF0ZScgPyB0aGlzLl9rZXkgOiBjcmVhdGVLZXkoKVxuICAgICAgICAgICAgfSwgLy8gTW9zdCBicm93c2VycyBjdXJyZW50bHkgaWdub3JlcyB0aGlzIHBhcmFtZXRlciwgYWx0aG91Z2ggdGhleSBtYXkgdXNlIGl0IGluIHRoZSBmdXR1cmUuXG4gICAgICAgICAgICAvLyBQYXNzaW5nIHRoZSBlbXB0eSBzdHJpbmcgaGVyZSBzaG91bGQgYmUgc2FmZSBhZ2FpbnN0IGZ1dHVyZSBjaGFuZ2VzIHRvIHRoZSBtZXRob2QuXG4gICAgICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSGlzdG9yeS9yZXBsYWNlU3RhdGVcbiAgICAgICAgICAgICcnLCBhcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlUm91dGVJbmZvRXJyb3IoZXJyLCBwYXRobmFtZSwgcXVlcnksIGFzLCByb3V0ZVByb3BzLCBsb2FkRXJyb3JGYWlsKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgIGlmIChlcnIuY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICAgICAgLy8gYnViYmxlIHVwIGNhbmNlbGxhdGlvbiBlcnJvcnNcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKDAsIF9yb3V0ZUxvYWRlcikuaXNBc3NldEVycm9yKGVycikgfHwgbG9hZEVycm9yRmFpbCkge1xuICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VFcnJvcicsIGVyciwgYXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICAgICAgICAgIC8vIElmIHdlIGNhbid0IGxvYWQgdGhlIHBhZ2UgaXQgY291bGQgYmUgb25lIG9mIGZvbGxvd2luZyByZWFzb25zXG4gICAgICAgICAgICAgICAgLy8gIDEuIFBhZ2UgZG9lc24ndCBleGlzdHNcbiAgICAgICAgICAgICAgICAvLyAgMi4gUGFnZSBkb2VzIGV4aXN0IGluIGEgZGlmZmVyZW50IHpvbmVcbiAgICAgICAgICAgICAgICAvLyAgMy4gSW50ZXJuYWwgZXJyb3Igd2hpbGUgbG9hZGluZyB0aGUgcGFnZVxuICAgICAgICAgICAgICAgIC8vIFNvLCBkb2luZyBhIGhhcmQgcmVsb2FkIGlzIHRoZSBwcm9wZXIgd2F5IHRvIGRlYWwgd2l0aCB0aGlzLlxuICAgICAgICAgICAgICAgIGhhbmRsZUhhcmROYXZpZ2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBhcyxcbiAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8vIENoYW5naW5nIHRoZSBVUkwgZG9lc24ndCBibG9jayBleGVjdXRpbmcgdGhlIGN1cnJlbnQgY29kZSBwYXRoLlxuICAgICAgICAgICAgICAgIC8vIFNvIGxldCdzIHRocm93IGEgY2FuY2VsbGF0aW9uIGVycm9yIHN0b3AgdGhlIHJvdXRpbmcgbG9naWMuXG4gICAgICAgICAgICAgICAgdGhyb3cgYnVpbGRDYW5jZWxsYXRpb25FcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsZXQgcHJvcHM7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBwYWdlOiBDb21wb25lbnQgLCBzdHlsZVNoZWV0cyAgfSA9IHlpZWxkIF90aGlzLmZldGNoQ29tcG9uZW50KCcvX2Vycm9yJyk7XG4gICAgICAgICAgICAgICAgY29uc3Qgcm91dGVJbmZvID0ge1xuICAgICAgICAgICAgICAgICAgICBwcm9wcyxcbiAgICAgICAgICAgICAgICAgICAgQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgICAgICBzdHlsZVNoZWV0cyxcbiAgICAgICAgICAgICAgICAgICAgZXJyLFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAoIXJvdXRlSW5mby5wcm9wcykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVJbmZvLnByb3BzID0geWllbGQgX3RoaXMuZ2V0SW5pdGlhbFByb3BzKENvbXBvbmVudCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGdpcEVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZXJyb3IgcGFnZSBgZ2V0SW5pdGlhbFByb3BzYDogJywgZ2lwRXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlSW5mby5wcm9wcyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByb3V0ZUluZm87XG4gICAgICAgICAgICB9IGNhdGNoIChyb3V0ZUluZm9FcnIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuaGFuZGxlUm91dGVJbmZvRXJyb3IoKDAsIF9pc0Vycm9yKS5kZWZhdWx0KHJvdXRlSW5mb0VycikgPyByb3V0ZUluZm9FcnIgOiBuZXcgRXJyb3Iocm91dGVJbmZvRXJyICsgJycpLCBwYXRobmFtZSwgcXVlcnksIGFzLCByb3V0ZVByb3BzLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgZ2V0Um91dGVJbmZvKHsgcm91dGU6IHJlcXVlc3RlZFJvdXRlICwgcGF0aG5hbWUgLCBxdWVyeSAsIGFzICwgcmVzb2x2ZWRBcyAsIHJvdXRlUHJvcHMgLCBsb2NhbGUgLCBoYXNNaWRkbGV3YXJlICwgaXNQcmV2aWV3ICwgdW5zdGFibGVfc2tpcENsaWVudENhY2hlICB9KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKigpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAqIFRoaXMgYHJvdXRlYCBiaW5kaW5nIGNhbiBjaGFuZ2UgaWYgdGhlcmUncyBhIHJld3JpdGVcbiAgICAgKiBzbyB3ZSBrZWVwIGEgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaW5hbCByZXF1ZXN0ZWQgcm91dGVcbiAgICAgKiBzbyB3ZSBjYW4gc3RvcmUgdGhlIGNhY2hlIGZvciBpdCBhbmQgYXZvaWQgcmUtcmVxdWVzdGluZyBldmVyeSB0aW1lXG4gICAgICogZm9yIHNoYWxsb3cgcm91dGluZyBwdXJwb3Nlcy5cbiAgICAgKi8gbGV0IHJvdXRlID0gcmVxdWVzdGVkUm91dGU7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciByZWYsIHJlZjQsIHJlZjU7XG4gICAgICAgICAgICAgICAgY29uc3QgaGFuZGxlQ2FuY2VsbGVkID0gZ2V0Q2FuY2VsbGVkSGFuZGxlcih7XG4gICAgICAgICAgICAgICAgICAgIHJvdXRlLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgbGV0IGV4aXN0aW5nSW5mbyA9IF90aGlzLmNvbXBvbmVudHNbcm91dGVdO1xuICAgICAgICAgICAgICAgIGlmIChyb3V0ZVByb3BzLnNoYWxsb3cgJiYgZXhpc3RpbmdJbmZvICYmIF90aGlzLnJvdXRlID09PSByb3V0ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXhpc3RpbmdJbmZvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaGFzTWlkZGxld2FyZSkge1xuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0luZm8gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxldCBjYWNoZWRSb3V0ZUluZm8gPSBleGlzdGluZ0luZm8gJiYgISgnaW5pdGlhbCcgaW4gZXhpc3RpbmdJbmZvKSAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ2RldmVsb3BtZW50JyA/IGV4aXN0aW5nSW5mbyA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICBjb25zdCBmZXRjaE5leHREYXRhUGFyYW1zID0ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhSHJlZjogX3RoaXMucGFnZUxvYWRlci5nZXREYXRhSHJlZih7XG4gICAgICAgICAgICAgICAgICAgICAgICBocmVmOiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNraXBJbnRlcnBvbGF0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXNQYXRoOiByZXNvbHZlZEFzLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBoYXNNaWRkbGV3YXJlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBpc1NlcnZlclJlbmRlcjogX3RoaXMuaXNTc3IsXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlSlNPTjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgaW5mbGlnaHRDYWNoZTogX3RoaXMuc2RjLFxuICAgICAgICAgICAgICAgICAgICBwZXJzaXN0Q2FjaGU6ICFpc1ByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgIGlzUHJlZmV0Y2g6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB1bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGVcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCB3aXRoTWlkZGxld2FyZUVmZmVjdHMoe1xuICAgICAgICAgICAgICAgICAgICBmZXRjaERhdGE6ICgpPT5mZXRjaE5leHREYXRhKGZldGNoTmV4dERhdGFQYXJhbXMpLFxuICAgICAgICAgICAgICAgICAgICBhc1BhdGg6IHJlc29sdmVkQXMsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaGFuZGxlQ2FuY2VsbGVkKCk7XG4gICAgICAgICAgICAgICAgaWYgKChkYXRhID09IG51bGwgPyB2b2lkIDAgOiAocmVmID0gZGF0YS5lZmZlY3QpID09IG51bGwgPyB2b2lkIDAgOiByZWYudHlwZSkgPT09ICdyZWRpcmVjdC1pbnRlcm5hbCcgfHwgKGRhdGEgPT0gbnVsbCA/IHZvaWQgMCA6IChyZWY0ID0gZGF0YS5lZmZlY3QpID09IG51bGwgPyB2b2lkIDAgOiByZWY0LnR5cGUpID09PSAncmVkaXJlY3QtZXh0ZXJuYWwnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmVmZmVjdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKChkYXRhID09IG51bGwgPyB2b2lkIDAgOiAocmVmNSA9IGRhdGEuZWZmZWN0KSA9PSBudWxsID8gdm9pZCAwIDogcmVmNS50eXBlKSA9PT0gJ3Jld3JpdGUnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJvdXRlID0gKDAsIF9yZW1vdmVUcmFpbGluZ1NsYXNoKS5yZW1vdmVUcmFpbGluZ1NsYXNoKGRhdGEuZWZmZWN0LnJlc29sdmVkSHJlZik7XG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gZGF0YS5lZmZlY3QucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgICAgICBxdWVyeSA9IF9leHRlbmRzKHt9LCBxdWVyeSwgZGF0YS5lZmZlY3QucGFyc2VkQXMucXVlcnkpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEFzID0gKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgoKDAsIF9ub3JtYWxpemVMb2NhbGVQYXRoKS5ub3JtYWxpemVMb2NhbGVQYXRoKGRhdGEuZWZmZWN0LnBhcnNlZEFzLnBhdGhuYW1lLCBfdGhpcy5sb2NhbGVzKS5wYXRobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIENoZWNrIGFnYWluIHRoZSBjYWNoZSB3aXRoIHRoZSBuZXcgZGVzdGluYXRpb24uXG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nSW5mbyA9IF90aGlzLmNvbXBvbmVudHNbcm91dGVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAocm91dGVQcm9wcy5zaGFsbG93ICYmIGV4aXN0aW5nSW5mbyAmJiBfdGhpcy5yb3V0ZSA9PT0gcm91dGUgJiYgIWhhc01pZGRsZXdhcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElmIHdlIGhhdmUgYSBtYXRjaCB3aXRoIHRoZSBjdXJyZW50IHJvdXRlIGR1ZSB0byByZXdyaXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2UgY2FuIGNvcHkgdGhlIGV4aXN0aW5nIGluZm9ybWF0aW9uIHRvIHRoZSByZXdyaXR0ZW4gb25lLlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlbiwgd2UgcmV0dXJuIHRoZSBpbmZvcm1hdGlvbiBhbG9uZyB3aXRoIHRoZSBtYXRjaGVkIHJvdXRlLlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBleGlzdGluZ0luZm8sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJvdXRlID09PSAnL2FwaScgfHwgcm91dGUuc3RhcnRzV2l0aCgnL2FwaS8nKSkge1xuICAgICAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGFzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCgpPT57fSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJvdXRlSW5mbyA9IGNhY2hlZFJvdXRlSW5mbyB8fCAoeWllbGQgX3RoaXMuZmV0Y2hDb21wb25lbnQocm91dGUpLnRoZW4oKHJlcyk9Pih7XG4gICAgICAgICAgICAgICAgICAgICAgICBDb21wb25lbnQ6IHJlcy5wYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVTaGVldHM6IHJlcy5zdHlsZVNoZWV0cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9fTl9TU0c6IHJlcy5tb2QuX19OX1NTRyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9fTl9TU1A6IHJlcy5tb2QuX19OX1NTUCxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9fTl9SU0M6ICEhcmVzLm1vZC5fX25leHRfcnNjX19cbiAgICAgICAgICAgICAgICAgICAgfSkpKTtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGlzVmFsaWRFbGVtZW50VHlwZSAgfSA9IHJlcXVpcmUoJ25leHQvZGlzdC9jb21waWxlZC9yZWFjdC1pcycpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmFsaWRFbGVtZW50VHlwZShyb3V0ZUluZm8uQ29tcG9uZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgZGVmYXVsdCBleHBvcnQgaXMgbm90IGEgUmVhY3QgQ29tcG9uZW50IGluIHBhZ2U6IFwiJHtwYXRobmFtZX1cImApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICogRm9yIHNlcnZlciBjb21wb25lbnRzLCBub24tU1NSIHBhZ2VzIHdpbGwgaGF2ZSBzdGF0aWNhbGx5IG9wdGltaXplZFxuICAgICAgICogZmxpZ2h0IGRhdGEgaW4gYSBwcm9kdWN0aW9uIGJ1aWxkLiBTbyBvbmx5IGRldmVsb3BtZW50IGFuZCBTU1IgcGFnZXNcbiAgICAgICAqIHdpbGwgYWx3YXlzIGhhdmUgdGhlIHJlYWwtdGltZSBnZW5lcmF0ZWQgYW5kIHN0cmVhbWVkIGZsaWdodCBkYXRhLlxuICAgICAgICovIGNvbnN0IHVzZVN0cmVhbWVkRmxpZ2h0RGF0YSA9IHJvdXRlSW5mby5fX05fUlNDICYmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nIHx8IHJvdXRlSW5mby5fX05fU1NQKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzaG91bGRGZXRjaERhdGEgPSByb3V0ZUluZm8uX19OX1NTRyB8fCByb3V0ZUluZm8uX19OX1NTUCB8fCByb3V0ZUluZm8uX19OX1JTQztcbiAgICAgICAgICAgICAgICBjb25zdCB7IHByb3BzICB9ID0geWllbGQgX3RoaXMuX2dldERhdGEoX2FzeW5jX3RvX2dlbmVyYXRvcihmdW5jdGlvbiooKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzaG91bGRGZXRjaERhdGEgJiYgIXVzZVN0cmVhbWVkRmxpZ2h0RGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBqc29uICB9ID0gKGRhdGEgPT0gbnVsbCA/IHZvaWQgMCA6IGRhdGEuanNvbikgPyBkYXRhIDogeWllbGQgZmV0Y2hOZXh0RGF0YSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUhyZWY6IF90aGlzLnBhZ2VMb2FkZXIuZ2V0RGF0YUhyZWYoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNQYXRoOiByZXNvbHZlZEFzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1NlcnZlclJlbmRlcjogX3RoaXMuaXNTc3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VKU09OOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZmxpZ2h0Q2FjaGU6IF90aGlzLnNkYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0Q2FjaGU6ICFpc1ByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmVmZXRjaDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zdGFibGVfc2tpcENsaWVudENhY2hlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHM6IGpzb24gfHwge31cbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHM6IHlpZWxkIF90aGlzLmdldEluaXRpYWxQcm9wcyhyb3V0ZUluZm8uQ29tcG9uZW50LCAvLyB3ZSBwcm92aWRlIEFwcFRyZWUgbGF0ZXIgc28gdGhpcyBuZWVkcyB0byBiZSBgYW55YFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzUGF0aDogYXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsZXM6IF90aGlzLmxvY2FsZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdExvY2FsZTogX3RoaXMuZGVmYXVsdExvY2FsZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgLy8gT25seSBidXN0IHRoZSBkYXRhIGNhY2hlIGZvciBTU1Agcm91dGVzIGFsdGhvdWdoXG4gICAgICAgICAgICAgICAgLy8gbWlkZGxld2FyZSBjYW4gc2tpcCBjYWNoZSBwZXIgcmVxdWVzdCB3aXRoXG4gICAgICAgICAgICAgICAgLy8geC1taWRkbGV3YXJlLWNhY2hlOiBuby1jYWNoZSBhcyB3ZWxsXG4gICAgICAgICAgICAgICAgaWYgKHJvdXRlSW5mby5fX05fU1NQICYmIGZldGNoTmV4dERhdGFQYXJhbXMuZGF0YUhyZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FjaGVLZXkgPSBuZXcgVVJMKGZldGNoTmV4dERhdGFQYXJhbXMuZGF0YUhyZWYsIHdpbmRvdy5sb2NhdGlvbi5ocmVmKS5ocmVmO1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgX3RoaXMuc2RjW2NhY2hlS2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gd2Uga2ljayBvZmYgYSBIRUFEIHJlcXVlc3QgaW4gdGhlIGJhY2tncm91bmRcbiAgICAgICAgICAgICAgICAvLyB3aGVuIGEgbm9uLXByZWZldGNoIHJlcXVlc3QgaXMgbWFkZSB0byBzaWduYWwgcmV2YWxpZGF0aW9uXG4gICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5pc1ByZXZpZXcgJiYgcm91dGVJbmZvLl9fTl9TU0cgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICAgICAgICAgICAgZmV0Y2hOZXh0RGF0YShPYmplY3QuYXNzaWduKHt9LCBmZXRjaE5leHREYXRhUGFyYW1zLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc0JhY2tncm91bmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0Q2FjaGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5mbGlnaHRDYWNoZTogYmFja2dyb3VuZENhY2hlXG4gICAgICAgICAgICAgICAgICAgIH0pKS5jYXRjaCgoKT0+e30pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgZmxpZ2h0SW5mbztcbiAgICAgICAgICAgICAgICBpZiAocm91dGVJbmZvLl9fTl9SU0MpIHtcbiAgICAgICAgICAgICAgICAgICAgZmxpZ2h0SW5mbyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9fZmxpZ2h0X186IHVzZVN0cmVhbWVkRmxpZ2h0RGF0YSA/ICh5aWVsZCBfdGhpcy5fZ2V0RGF0YSgoKT0+X3RoaXMuX2dldEZsaWdodERhdGEoKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IF9leHRlbmRzKHt9LCBxdWVyeSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX19mbGlnaHRfXzogJzEnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogKDAsIF9pc0R5bmFtaWMpLmlzRHluYW1pY1JvdXRlKHJvdXRlKSA/IGludGVycG9sYXRlQXMocGF0aG5hbWUsICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybChyZXNvbHZlZEFzKS5wYXRobmFtZSwgcXVlcnkpLnJlc3VsdCA6IHBhdGhuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpKSkuZGF0YSA6IHByb3BzLl9fZmxpZ2h0X19cbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcHJvcHMucGFnZVByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMucGFnZVByb3BzLCBmbGlnaHRJbmZvKTtcbiAgICAgICAgICAgICAgICByb3V0ZUluZm8ucHJvcHMgPSBwcm9wcztcbiAgICAgICAgICAgICAgICByb3V0ZUluZm8ucm91dGUgPSByb3V0ZTtcbiAgICAgICAgICAgICAgICByb3V0ZUluZm8ucXVlcnkgPSBxdWVyeTtcbiAgICAgICAgICAgICAgICByb3V0ZUluZm8ucmVzb2x2ZWRBcyA9IHJlc29sdmVkQXM7XG4gICAgICAgICAgICAgICAgX3RoaXMuY29tcG9uZW50c1tyb3V0ZV0gPSByb3V0ZUluZm87XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlSW5mbztcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVSb3V0ZUluZm9FcnJvcigoMCwgX2lzRXJyb3IpLmdldFByb3BlckVycm9yKGVyciksIHBhdGhuYW1lLCBxdWVyeSwgYXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpO1xuICAgIH1cbiAgICBzZXQoc3RhdGUsIGRhdGEsIHJlc2V0U2Nyb2xsKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3ViKGRhdGEsIHRoaXMuY29tcG9uZW50c1snL19hcHAnXS5Db21wb25lbnQsIHJlc2V0U2Nyb2xsKTtcbiAgICB9XG4gICAgLyoqXG4gICAqIENhbGxiYWNrIHRvIGV4ZWN1dGUgYmVmb3JlIHJlcGxhY2luZyByb3V0ZXIgc3RhdGVcbiAgICogQHBhcmFtIGNiIGNhbGxiYWNrIHRvIGJlIGV4ZWN1dGVkXG4gICAqLyBiZWZvcmVQb3BTdGF0ZShjYikge1xuICAgICAgICB0aGlzLl9icHMgPSBjYjtcbiAgICB9XG4gICAgb25seUFIYXNoQ2hhbmdlKGFzKSB7XG4gICAgICAgIGlmICghdGhpcy5hc1BhdGgpIHJldHVybiBmYWxzZTtcbiAgICAgICAgY29uc3QgW29sZFVybE5vSGFzaCwgb2xkSGFzaF0gPSB0aGlzLmFzUGF0aC5zcGxpdCgnIycpO1xuICAgICAgICBjb25zdCBbbmV3VXJsTm9IYXNoLCBuZXdIYXNoXSA9IGFzLnNwbGl0KCcjJyk7XG4gICAgICAgIC8vIE1ha2VzIHN1cmUgd2Ugc2Nyb2xsIHRvIHRoZSBwcm92aWRlZCBoYXNoIGlmIHRoZSB1cmwvaGFzaCBhcmUgdGhlIHNhbWVcbiAgICAgICAgaWYgKG5ld0hhc2ggJiYgb2xkVXJsTm9IYXNoID09PSBuZXdVcmxOb0hhc2ggJiYgb2xkSGFzaCA9PT0gbmV3SGFzaCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlIHVybHMgYXJlIGNoYW5nZSwgdGhlcmUncyBtb3JlIHRoYW4gYSBoYXNoIGNoYW5nZVxuICAgICAgICBpZiAob2xkVXJsTm9IYXNoICE9PSBuZXdVcmxOb0hhc2gpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGUgaGFzaCBoYXMgY2hhbmdlZCwgdGhlbiBpdCdzIGEgaGFzaCBvbmx5IGNoYW5nZS5cbiAgICAgICAgLy8gVGhpcyBjaGVjayBpcyBuZWNlc3NhcnkgdG8gaGFuZGxlIGJvdGggdGhlIGVudGVyIGFuZFxuICAgICAgICAvLyBsZWF2ZSBoYXNoID09PSAnJyBjYXNlcy4gVGhlIGlkZW50aXR5IGNhc2UgZmFsbHMgdGhyb3VnaFxuICAgICAgICAvLyBhbmQgaXMgdHJlYXRlZCBhcyBhIG5leHQgcmVsb2FkLlxuICAgICAgICByZXR1cm4gb2xkSGFzaCAhPT0gbmV3SGFzaDtcbiAgICB9XG4gICAgc2Nyb2xsVG9IYXNoKGFzKSB7XG4gICAgICAgIGNvbnN0IFssIGhhc2ggPSAnJ10gPSBhcy5zcGxpdCgnIycpO1xuICAgICAgICAvLyBTY3JvbGwgdG8gdG9wIGlmIHRoZSBoYXNoIGlzIGp1c3QgYCNgIHdpdGggbm8gdmFsdWUgb3IgYCN0b3BgXG4gICAgICAgIC8vIFRvIG1pcnJvciBicm93c2Vyc1xuICAgICAgICBpZiAoaGFzaCA9PT0gJycgfHwgaGFzaCA9PT0gJ3RvcCcpIHtcbiAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBEZWNvZGUgaGFzaCB0byBtYWtlIG5vbi1sYXRpbiBhbmNob3Igd29ya3MuXG4gICAgICAgIGNvbnN0IHJhd0hhc2ggPSBkZWNvZGVVUklDb21wb25lbnQoaGFzaCk7XG4gICAgICAgIC8vIEZpcnN0IHdlIGNoZWNrIGlmIHRoZSBlbGVtZW50IGJ5IGlkIGlzIGZvdW5kXG4gICAgICAgIGNvbnN0IGlkRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChyYXdIYXNoKTtcbiAgICAgICAgaWYgKGlkRWwpIHtcbiAgICAgICAgICAgIGlkRWwuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGVyZSdzIG5vIGVsZW1lbnQgd2l0aCB0aGUgaWQsIHdlIGNoZWNrIHRoZSBgbmFtZWAgcHJvcGVydHlcbiAgICAgICAgLy8gVG8gbWlycm9yIGJyb3dzZXJzXG4gICAgICAgIGNvbnN0IG5hbWVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKHJhd0hhc2gpWzBdO1xuICAgICAgICBpZiAobmFtZUVsKSB7XG4gICAgICAgICAgICBuYW1lRWwuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cmxJc05ldyhhc1BhdGgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXNQYXRoICE9PSBhc1BhdGg7XG4gICAgfVxuICAgIC8qKlxuICAgKiBQcmVmZXRjaCBwYWdlIGNvZGUsIHlvdSBtYXkgd2FpdCBmb3IgdGhlIGRhdGEgZHVyaW5nIHBhZ2UgcmVuZGVyaW5nLlxuICAgKiBUaGlzIGZlYXR1cmUgb25seSB3b3JrcyBpbiBwcm9kdWN0aW9uIVxuICAgKiBAcGFyYW0gdXJsIHRoZSBocmVmIG9mIHByZWZldGNoZWQgcGFnZVxuICAgKiBAcGFyYW0gYXNQYXRoIHRoZSBhcyBwYXRoIG9mIHRoZSBwcmVmZXRjaGVkIHBhZ2VcbiAgICovIHByZWZldGNoKHVybCwgYXNQYXRoID0gdXJsLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgcmV0dXJuIF9hc3luY190b19nZW5lcmF0b3IoZnVuY3Rpb24qKCkge1xuICAgICAgICAgICAgbGV0IHBhcnNlZCA9ICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybCh1cmwpO1xuICAgICAgICAgICAgbGV0IHsgcGF0aG5hbWUgLCBxdWVyeSAgfSA9IHBhcnNlZDtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMubG9jYWxlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSA9ICgwLCBfbm9ybWFsaXplTG9jYWxlUGF0aCkubm9ybWFsaXplTG9jYWxlUGF0aChwYXRobmFtZSwgX3RoaXMubG9jYWxlcykucGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9IHBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICB1cmwgPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBhcnNlZEFzID0gKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKGFzUGF0aCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxvY2FsZVBhdGhSZXN1bHQgPSAoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgocGFyc2VkQXMucGF0aG5hbWUsIF90aGlzLmxvY2FsZXMpO1xuICAgICAgICAgICAgICAgICAgICBwYXJzZWRBcy5wYXRobmFtZSA9IGxvY2FsZVBhdGhSZXN1bHQucGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubG9jYWxlID0gbG9jYWxlUGF0aFJlc3VsdC5kZXRlY3RlZExvY2FsZSB8fCBfdGhpcy5kZWZhdWx0TG9jYWxlO1xuICAgICAgICAgICAgICAgICAgICBhc1BhdGggPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkQXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhZ2VzID0geWllbGQgX3RoaXMucGFnZUxvYWRlci5nZXRQYWdlTGlzdCgpO1xuICAgICAgICAgICAgbGV0IHJlc29sdmVkQXMgPSBhc1BhdGg7XG4gICAgICAgICAgICBjb25zdCBsb2NhbGUgPSB0eXBlb2Ygb3B0aW9ucy5sb2NhbGUgIT09ICd1bmRlZmluZWQnID8gb3B0aW9ucy5sb2NhbGUgfHwgdW5kZWZpbmVkIDogX3RoaXMubG9jYWxlO1xuICAgICAgICAgICAgY29uc3QgaXNNaWRkbGV3YXJlTWF0Y2ggPSB5aWVsZCBtYXRjaGVzTWlkZGxld2FyZSh7XG4gICAgICAgICAgICAgICAgYXNQYXRoOiBhc1BhdGgsXG4gICAgICAgICAgICAgICAgbG9jYWxlOiBsb2NhbGUsXG4gICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0hBU19SRVdSSVRFUyAmJiBhc1BhdGguc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICAgICAgICAgICAgbGV0IHJld3JpdGVzO1xuICAgICAgICAgICAgICAgICh7IF9fcmV3cml0ZXM6IHJld3JpdGVzICB9ID0geWllbGQgKDAsIF9yb3V0ZUxvYWRlcikuZ2V0Q2xpZW50QnVpbGRNYW5pZmVzdCgpKTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXdyaXRlc1Jlc3VsdCA9ICgwLCBfcmVzb2x2ZVJld3JpdGVzKS5kZWZhdWx0KCgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKCgwLCBfYWRkTG9jYWxlKS5hZGRMb2NhbGUoYXNQYXRoLCBfdGhpcy5sb2NhbGUpLCB0cnVlKSwgcGFnZXMsIHJld3JpdGVzLCBwYXJzZWQucXVlcnksIChwKT0+cmVzb2x2ZUR5bmFtaWNSb3V0ZShwLCBwYWdlcyksIF90aGlzLmxvY2FsZXMpO1xuICAgICAgICAgICAgICAgIGlmIChyZXdyaXRlc1Jlc3VsdC5leHRlcm5hbERlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNvbHZlZEFzID0gKDAsIF9yZW1vdmVMb2NhbGUpLnJlbW92ZUxvY2FsZSgoMCwgX3JlbW92ZUJhc2VQYXRoKS5yZW1vdmVCYXNlUGF0aChyZXdyaXRlc1Jlc3VsdC5hc1BhdGgpLCBfdGhpcy5sb2NhbGUpO1xuICAgICAgICAgICAgICAgIGlmIChyZXdyaXRlc1Jlc3VsdC5tYXRjaGVkUGFnZSAmJiByZXdyaXRlc1Jlc3VsdC5yZXNvbHZlZEhyZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBkaXJlY3RseSBtYXRjaGVzIGEgcGFnZSB3ZSBuZWVkIHRvIHVwZGF0ZSB0aGUgaHJlZiB0b1xuICAgICAgICAgICAgICAgICAgICAvLyBhbGxvdyB0aGUgY29ycmVjdCBwYWdlIGNodW5rIHRvIGJlIGxvYWRlZFxuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSA9IHJld3JpdGVzUmVzdWx0LnJlc29sdmVkSHJlZjtcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gcGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNNaWRkbGV3YXJlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gcmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXJzZWQucGF0aG5hbWUsIHBhZ2VzKTtcbiAgICAgICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUocGFyc2VkLnBhdGhuYW1lKSkge1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcGFyc2VkLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9IHBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ocXVlcnksICgwLCBfcm91dGVNYXRjaGVyKS5nZXRSb3V0ZU1hdGNoZXIoKDAsIF9yb3V0ZVJlZ2V4KS5nZXRSb3V0ZVJlZ2V4KHBhcnNlZC5wYXRobmFtZSkpKCgwLCBfcGFyc2VQYXRoKS5wYXJzZVBhdGgoYXNQYXRoKS5wYXRobmFtZSkgfHwge30pO1xuICAgICAgICAgICAgICAgIGlmICghaXNNaWRkbGV3YXJlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgdXJsID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gUHJlZmV0Y2ggaXMgbm90IHN1cHBvcnRlZCBpbiBkZXZlbG9wbWVudCBtb2RlIGJlY2F1c2UgaXQgd291bGQgdHJpZ2dlciBvbi1kZW1hbmQtZW50cmllc1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUT0RPOiBpZiB0aGUgcm91dGUgbWlkZGxld2FyZSdzIGRhdGEgcmVxdWVzdFxuICAgICAgICAgICAgLy8gcmVzb2x2ZXMgdG8gaXMgbm90IGFuIFNTRyByb3V0ZSB3ZSBzaG91bGQgYnVzdCB0aGUgY2FjaGVcbiAgICAgICAgICAgIC8vIGJ1dCB3ZSBzaG91bGRuJ3QgYWxsb3cgcHJlZmV0Y2ggdG8ga2VlcCB0cmlnZ2VyaW5nXG4gICAgICAgICAgICAvLyByZXF1ZXN0cyBmb3IgU1NQIHBhZ2VzXG4gICAgICAgICAgICBjb25zdCBkYXRhID0geWllbGQgd2l0aE1pZGRsZXdhcmVFZmZlY3RzKHtcbiAgICAgICAgICAgICAgICBmZXRjaERhdGE6ICgpPT5mZXRjaE5leHREYXRhKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFIcmVmOiBfdGhpcy5wYWdlTG9hZGVyLmdldERhdGFIcmVmKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2lwSW50ZXJwb2xhdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc1BhdGg6IHJlc29sdmVkQXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc01pZGRsZXdhcmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1NlcnZlclJlbmRlcjogX3RoaXMuaXNTc3IsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUpTT046IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZsaWdodENhY2hlOiBfdGhpcy5zZGMsXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0Q2FjaGU6ICFfdGhpcy5pc1ByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1ByZWZldGNoOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIGFzUGF0aDogYXNQYXRoLFxuICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLyoqXG4gICAgICogSWYgdGhlcmUgd2FzIGEgcmV3cml0ZSB3ZSBhcHBseSB0aGUgZWZmZWN0cyBvZiB0aGUgcmV3cml0ZSBvbiB0aGVcbiAgICAgKiBjdXJyZW50IHBhcmFtZXRlcnMgZm9yIHRoZSBwcmVmZXRjaC5cbiAgICAgKi8gaWYgKChkYXRhID09IG51bGwgPyB2b2lkIDAgOiBkYXRhLmVmZmVjdC50eXBlKSA9PT0gJ3Jld3JpdGUnKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gZGF0YS5lZmZlY3QucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gZGF0YS5lZmZlY3QucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgIHF1ZXJ5ID0gX2V4dGVuZHMoe30sIHF1ZXJ5LCBkYXRhLmVmZmVjdC5wYXJzZWRBcy5xdWVyeSk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZWRBcyA9IGRhdGEuZWZmZWN0LnBhcnNlZEFzLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLyoqXG4gICAgICogSWYgdGhlcmUgaXMgYSByZWRpcmVjdCB0byBhbiBleHRlcm5hbCBkZXN0aW5hdGlvbiB0aGVuIHdlIGRvbid0IGhhdmVcbiAgICAgKiB0byBwcmVmZXRjaCBjb250ZW50IGFzIGl0IHdpbGwgYmUgdW51c2VkLlxuICAgICAqLyBpZiAoKGRhdGEgPT0gbnVsbCA/IHZvaWQgMCA6IGRhdGEuZWZmZWN0LnR5cGUpID09PSAncmVkaXJlY3QtZXh0ZXJuYWwnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgcm91dGUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgICAgICAgICAgeWllbGQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgIF90aGlzLnBhZ2VMb2FkZXIuX2lzU3NnKHJvdXRlKS50aGVuKChpc1NzZyk9PntcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzU3NnID8gZmV0Y2hOZXh0RGF0YSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhSHJlZjogKGRhdGEgPT0gbnVsbCA/IHZvaWQgMCA6IGRhdGEuZGF0YUhyZWYpIHx8IF90aGlzLnBhZ2VMb2FkZXIuZ2V0RGF0YUhyZWYoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IHVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc1BhdGg6IHJlc29sdmVkQXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlOiBsb2NhbGVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNTZXJ2ZXJSZW5kZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VKU09OOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5mbGlnaHRDYWNoZTogX3RoaXMuc2RjLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGVyc2lzdENhY2hlOiAhX3RoaXMuaXNQcmV2aWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmVmZXRjaDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVuc3RhYmxlX3NraXBDbGllbnRDYWNoZTogb3B0aW9ucy51bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUgfHwgb3B0aW9ucy5wcmlvcml0eSAmJiAhIXByb2Nlc3MuZW52Ll9fTkVYVF9PUFRJTUlTVElDX0NMSUVOVF9DQUNIRVxuICAgICAgICAgICAgICAgICAgICB9KS50aGVuKCgpPT5mYWxzZSkgOiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBfdGhpcy5wYWdlTG9hZGVyW29wdGlvbnMucHJpb3JpdHkgPyAnbG9hZFBhZ2UnIDogJ3ByZWZldGNoJ10ocm91dGUpLCBcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9KSgpO1xuICAgIH1cbiAgICBmZXRjaENvbXBvbmVudChyb3V0ZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gX2FzeW5jX3RvX2dlbmVyYXRvcihmdW5jdGlvbiooKSB7XG4gICAgICAgICAgICBjb25zdCBoYW5kbGVDYW5jZWxsZWQgPSBnZXRDYW5jZWxsZWRIYW5kbGVyKHtcbiAgICAgICAgICAgICAgICByb3V0ZSxcbiAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29tcG9uZW50UmVzdWx0ID0geWllbGQgX3RoaXMucGFnZUxvYWRlci5sb2FkUGFnZShyb3V0ZSk7XG4gICAgICAgICAgICAgICAgaGFuZGxlQ2FuY2VsbGVkKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbXBvbmVudFJlc3VsdDtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGhhbmRsZUNhbmNlbGxlZCgpO1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgX2dldERhdGEoZm4pIHtcbiAgICAgICAgbGV0IGNhbmNlbGxlZCA9IGZhbHNlO1xuICAgICAgICBjb25zdCBjYW5jZWwgPSAoKT0+e1xuICAgICAgICAgICAgY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5jbGMgPSBjYW5jZWw7XG4gICAgICAgIHJldHVybiBmbigpLnRoZW4oKGRhdGEpPT57XG4gICAgICAgICAgICBpZiAoY2FuY2VsID09PSB0aGlzLmNsYykge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xjID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjYW5jZWxsZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0xvYWRpbmcgaW5pdGlhbCBwcm9wcyBjYW5jZWxsZWQnKTtcbiAgICAgICAgICAgICAgICBlcnIuY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9nZXRGbGlnaHREYXRhKGRhdGFIcmVmKSB7XG4gICAgICAgIC8vIERvIG5vdCBjYWNoZSBSU0MgZmxpZ2h0IHJlc3BvbnNlIHNpbmNlIGl0J3Mgbm90IGEgc3RhdGljIHJlc291cmNlXG4gICAgICAgIHJldHVybiBmZXRjaE5leHREYXRhKHtcbiAgICAgICAgICAgIGRhdGFIcmVmLFxuICAgICAgICAgICAgaXNTZXJ2ZXJSZW5kZXI6IHRydWUsXG4gICAgICAgICAgICBwYXJzZUpTT046IGZhbHNlLFxuICAgICAgICAgICAgaW5mbGlnaHRDYWNoZTogdGhpcy5zZGMsXG4gICAgICAgICAgICBwZXJzaXN0Q2FjaGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNQcmVmZXRjaDogZmFsc2VcbiAgICAgICAgfSkudGhlbigoeyB0ZXh0ICB9KT0+KHtcbiAgICAgICAgICAgICAgICBkYXRhOiB0ZXh0XG4gICAgICAgICAgICB9KSk7XG4gICAgfVxuICAgIGdldEluaXRpYWxQcm9wcyhDb21wb25lbnQsIGN0eCkge1xuICAgICAgICBjb25zdCB7IENvbXBvbmVudDogQXBwICB9ID0gdGhpcy5jb21wb25lbnRzWycvX2FwcCddO1xuICAgICAgICBjb25zdCBBcHBUcmVlID0gdGhpcy5fd3JhcEFwcChBcHApO1xuICAgICAgICBjdHguQXBwVHJlZSA9IEFwcFRyZWU7XG4gICAgICAgIHJldHVybiAoMCwgX3V0aWxzKS5sb2FkR2V0SW5pdGlhbFByb3BzKEFwcCwge1xuICAgICAgICAgICAgQXBwVHJlZSxcbiAgICAgICAgICAgIENvbXBvbmVudCxcbiAgICAgICAgICAgIHJvdXRlcjogdGhpcyxcbiAgICAgICAgICAgIGN0eFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0IHJvdXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5yb3V0ZTtcbiAgICB9XG4gICAgZ2V0IHBhdGhuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5wYXRobmFtZTtcbiAgICB9XG4gICAgZ2V0IHF1ZXJ5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5xdWVyeTtcbiAgICB9XG4gICAgZ2V0IGFzUGF0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuYXNQYXRoO1xuICAgIH1cbiAgICBnZXQgbG9jYWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5sb2NhbGU7XG4gICAgfVxuICAgIGdldCBpc0ZhbGxiYWNrKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5pc0ZhbGxiYWNrO1xuICAgIH1cbiAgICBnZXQgaXNQcmV2aWV3KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5pc1ByZXZpZXc7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKHBhdGhuYW1lMSwgcXVlcnkxLCBhczEsIHsgaW5pdGlhbFByb3BzICwgcGFnZUxvYWRlciAsIEFwcCAsIHdyYXBBcHAgLCBDb21wb25lbnQgLCBlcnIgLCBzdWJzY3JpcHRpb24gLCBpc0ZhbGxiYWNrICwgbG9jYWxlICwgbG9jYWxlcyAsIGRlZmF1bHRMb2NhbGUgLCBkb21haW5Mb2NhbGVzICwgaXNQcmV2aWV3ICwgaXNSc2MgIH0pe1xuICAgICAgICAvLyBTZXJ2ZXIgRGF0YSBDYWNoZVxuICAgICAgICB0aGlzLnNkYyA9IHt9O1xuICAgICAgICB0aGlzLmlzRmlyc3RQb3BTdGF0ZUV2ZW50ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fa2V5ID0gY3JlYXRlS2V5KCk7XG4gICAgICAgIHRoaXMub25Qb3BTdGF0ZSA9IChlKT0+e1xuICAgICAgICAgICAgY29uc3QgeyBpc0ZpcnN0UG9wU3RhdGVFdmVudCAgfSA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLmlzRmlyc3RQb3BTdGF0ZUV2ZW50ID0gZmFsc2U7XG4gICAgICAgICAgICBjb25zdCBzdGF0ZSA9IGUuc3RhdGU7XG4gICAgICAgICAgICBpZiAoIXN0YXRlKSB7XG4gICAgICAgICAgICAgICAgLy8gV2UgZ2V0IHN0YXRlIGFzIHVuZGVmaW5lZCBmb3IgdHdvIHJlYXNvbnMuXG4gICAgICAgICAgICAgICAgLy8gIDEuIFdpdGggb2xkZXIgc2FmYXJpICg8IDgpIGFuZCBvbGRlciBjaHJvbWUgKDwgMzQpXG4gICAgICAgICAgICAgICAgLy8gIDIuIFdoZW4gdGhlIFVSTCBjaGFuZ2VkIHdpdGggI1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gSW4gdGhlIGJvdGggY2FzZXMsIHdlIGRvbid0IG5lZWQgdG8gcHJvY2VlZCBhbmQgY2hhbmdlIHRoZSByb3V0ZS5cbiAgICAgICAgICAgICAgICAvLyAoYXMgaXQncyBhbHJlYWR5IGNoYW5nZWQpXG4gICAgICAgICAgICAgICAgLy8gQnV0IHdlIGNhbiBzaW1wbHkgcmVwbGFjZSB0aGUgc3RhdGUgd2l0aCB0aGUgbmV3IGNoYW5nZXMuXG4gICAgICAgICAgICAgICAgLy8gQWN0dWFsbHksIGZvciAoMSkgd2UgZG9uJ3QgbmVlZCB0byBub3RoaW5nLiBCdXQgaXQncyBoYXJkIHRvIGRldGVjdCB0aGF0IGV2ZW50LlxuICAgICAgICAgICAgICAgIC8vIFNvLCBkb2luZyB0aGUgZm9sbG93aW5nIGZvciAoMSkgZG9lcyBubyBoYXJtLlxuICAgICAgICAgICAgICAgIGNvbnN0IHsgcGF0aG5hbWUgLCBxdWVyeSAgfSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VTdGF0ZSgncmVwbGFjZVN0YXRlJywgKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKHBhdGhuYW1lKSxcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlcbiAgICAgICAgICAgICAgICB9KSwgKDAsIF91dGlscykuZ2V0VVJMKCkpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIF9fTkEgaXMgdXNlZCB0byBpZGVudGlmeSBpZiB0aGUgaGlzdG9yeSBlbnRyeSBjYW4gYmUgaGFuZGxlZCBieSB0aGUgYXBwLXJvdXRlci5cbiAgICAgICAgICAgIGlmIChzdGF0ZS5fX05BKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghc3RhdGUuX19OKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU2FmYXJpIGZpcmVzIHBvcHN0YXRlZXZlbnQgd2hlbiByZW9wZW5pbmcgdGhlIGJyb3dzZXIuXG4gICAgICAgICAgICBpZiAoaXNGaXJzdFBvcFN0YXRlRXZlbnQgJiYgdGhpcy5sb2NhbGUgPT09IHN0YXRlLm9wdGlvbnMubG9jYWxlICYmIHN0YXRlLmFzID09PSB0aGlzLmFzUGF0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBmb3JjZWRTY3JvbGw7XG4gICAgICAgICAgICBjb25zdCB7IHVybCAsIGFzICwgb3B0aW9ucyAsIGtleSAgfSA9IHN0YXRlO1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9TQ1JPTExfUkVTVE9SQVRJT04pIHtcbiAgICAgICAgICAgICAgICBpZiAobWFudWFsU2Nyb2xsUmVzdG9yYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2tleSAhPT0ga2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBTbmFwc2hvdCBjdXJyZW50IHNjcm9sbCBwb3NpdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnX19uZXh0X3Njcm9sbF8nICsgdGhpcy5fa2V5LCBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHg6IHNlbGYucGFnZVhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IHNlbGYucGFnZVlPZmZzZXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVzdG9yZSBvbGQgc2Nyb2xsIHBvc2l0aW9uOlxuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB2ID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnX19uZXh0X3Njcm9sbF8nICsga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JjZWRTY3JvbGwgPSBKU09OLnBhcnNlKHYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JjZWRTY3JvbGwgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xuICAgICAgICAgICAgY29uc3QgeyBwYXRobmFtZSAgfSA9ICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybCh1cmwpO1xuICAgICAgICAgICAgLy8gTWFrZSBzdXJlIHdlIGRvbid0IHJlLXJlbmRlciBvbiBpbml0aWFsIGxvYWQsXG4gICAgICAgICAgICAvLyBjYW4gYmUgY2F1c2VkIGJ5IG5hdmlnYXRpbmcgYmFjayBmcm9tIGFuIGV4dGVybmFsIHNpdGVcbiAgICAgICAgICAgIGlmICh0aGlzLmlzU3NyICYmIGFzID09PSAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aCh0aGlzLmFzUGF0aCkgJiYgcGF0aG5hbWUgPT09ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKHRoaXMucGF0aG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gSWYgdGhlIGRvd25zdHJlYW0gYXBwbGljYXRpb24gcmV0dXJucyBmYWxzeSwgcmV0dXJuLlxuICAgICAgICAgICAgLy8gVGhleSB3aWxsIHRoZW4gYmUgcmVzcG9uc2libGUgZm9yIGhhbmRsaW5nIHRoZSBldmVudC5cbiAgICAgICAgICAgIGlmICh0aGlzLl9icHMgJiYgIXRoaXMuX2JwcyhzdGF0ZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNoYW5nZSgncmVwbGFjZVN0YXRlJywgdXJsLCBhcywgT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucywge1xuICAgICAgICAgICAgICAgIHNoYWxsb3c6IG9wdGlvbnMuc2hhbGxvdyAmJiB0aGlzLl9zaGFsbG93LFxuICAgICAgICAgICAgICAgIGxvY2FsZTogb3B0aW9ucy5sb2NhbGUgfHwgdGhpcy5kZWZhdWx0TG9jYWxlLFxuICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgaW50ZXJuYWwgdmFsdWUgbm90IGV4cG9zZWQgb24gdHlwZXNcbiAgICAgICAgICAgICAgICBfaDogMFxuICAgICAgICAgICAgfSksIGZvcmNlZFNjcm9sbCk7XG4gICAgICAgIH07XG4gICAgICAgIC8vIHJlcHJlc2VudHMgdGhlIGN1cnJlbnQgY29tcG9uZW50IGtleVxuICAgICAgICBjb25zdCByb3V0ZSA9ICgwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZTEpO1xuICAgICAgICAvLyBzZXQgdXAgdGhlIGNvbXBvbmVudCBjYWNoZSAoYnkgcm91dGUga2V5cylcbiAgICAgICAgdGhpcy5jb21wb25lbnRzID0ge307XG4gICAgICAgIC8vIFdlIHNob3VsZCBub3Qga2VlcCB0aGUgY2FjaGUsIGlmIHRoZXJlJ3MgYW4gZXJyb3JcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCB0aGlzIGNhdXNlIGlzc3VlcyB3aGVuIHdoZW4gZ29pbmcgYmFjayBhbmRcbiAgICAgICAgLy8gY29tZSBhZ2FpbiB0byB0aGUgZXJyb3JlZCBwYWdlLlxuICAgICAgICBpZiAocGF0aG5hbWUxICE9PSAnL19lcnJvcicpIHtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50c1tyb3V0ZV0gPSB7XG4gICAgICAgICAgICAgICAgQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIGluaXRpYWw6IHRydWUsXG4gICAgICAgICAgICAgICAgcHJvcHM6IGluaXRpYWxQcm9wcyxcbiAgICAgICAgICAgICAgICBlcnIsXG4gICAgICAgICAgICAgICAgX19OX1NTRzogaW5pdGlhbFByb3BzICYmIGluaXRpYWxQcm9wcy5fX05fU1NHLFxuICAgICAgICAgICAgICAgIF9fTl9TU1A6IGluaXRpYWxQcm9wcyAmJiBpbml0aWFsUHJvcHMuX19OX1NTUCxcbiAgICAgICAgICAgICAgICBfX05fUlNDOiAhIWlzUnNjXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29tcG9uZW50c1snL19hcHAnXSA9IHtcbiAgICAgICAgICAgIENvbXBvbmVudDogQXBwLFxuICAgICAgICAgICAgc3R5bGVTaGVldHM6IFtdXG4gICAgICAgIH07XG4gICAgICAgIC8vIEJhY2t3YXJkcyBjb21wYXQgZm9yIFJvdXRlci5yb3V0ZXIuZXZlbnRzXG4gICAgICAgIC8vIFRPRE86IFNob3VsZCBiZSByZW1vdmUgdGhlIGZvbGxvd2luZyBtYWpvciB2ZXJzaW9uIGFzIGl0IHdhcyBuZXZlciBkb2N1bWVudGVkXG4gICAgICAgIHRoaXMuZXZlbnRzID0gUm91dGVyLmV2ZW50cztcbiAgICAgICAgdGhpcy5wYWdlTG9hZGVyID0gcGFnZUxvYWRlcjtcbiAgICAgICAgLy8gaWYgYXV0byBwcmVyZW5kZXJlZCBhbmQgZHluYW1pYyByb3V0ZSB3YWl0IHRvIHVwZGF0ZSBhc1BhdGhcbiAgICAgICAgLy8gdW50aWwgYWZ0ZXIgbW91bnQgdG8gcHJldmVudCBoeWRyYXRpb24gbWlzbWF0Y2hcbiAgICAgICAgY29uc3QgYXV0b0V4cG9ydER5bmFtaWMgPSAoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUocGF0aG5hbWUxKSAmJiBzZWxmLl9fTkVYVF9EQVRBX18uYXV0b0V4cG9ydDtcbiAgICAgICAgdGhpcy5iYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG4gICAgICAgIHRoaXMuc3ViID0gc3Vic2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmNsYyA9IG51bGw7XG4gICAgICAgIHRoaXMuX3dyYXBBcHAgPSB3cmFwQXBwO1xuICAgICAgICAvLyBtYWtlIHN1cmUgdG8gaWdub3JlIGV4dHJhIHBvcFN0YXRlIGluIHNhZmFyaSBvbiBuYXZpZ2F0aW5nXG4gICAgICAgIC8vIGJhY2sgZnJvbSBleHRlcm5hbCBzaXRlXG4gICAgICAgIHRoaXMuaXNTc3IgPSB0cnVlO1xuICAgICAgICB0aGlzLmlzTG9jYWxlRG9tYWluID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNSZWFkeSA9ICEhKHNlbGYuX19ORVhUX0RBVEFfXy5nc3NwIHx8IHNlbGYuX19ORVhUX0RBVEFfXy5naXAgfHwgc2VsZi5fX05FWFRfREFUQV9fLmFwcEdpcCAmJiAhc2VsZi5fX05FWFRfREFUQV9fLmdzcCB8fCAhYXV0b0V4cG9ydER5bmFtaWMgJiYgIXNlbGYubG9jYXRpb24uc2VhcmNoICYmICFwcm9jZXNzLmVudi5fX05FWFRfSEFTX1JFV1JJVEVTKTtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgIHRoaXMubG9jYWxlcyA9IGxvY2FsZXM7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHRMb2NhbGUgPSBkZWZhdWx0TG9jYWxlO1xuICAgICAgICAgICAgdGhpcy5kb21haW5Mb2NhbGVzID0gZG9tYWluTG9jYWxlcztcbiAgICAgICAgICAgIHRoaXMuaXNMb2NhbGVEb21haW4gPSAhISgwLCBfZGV0ZWN0RG9tYWluTG9jYWxlKS5kZXRlY3REb21haW5Mb2NhbGUoZG9tYWluTG9jYWxlcywgc2VsZi5sb2NhdGlvbi5ob3N0bmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHJvdXRlLFxuICAgICAgICAgICAgcGF0aG5hbWU6IHBhdGhuYW1lMSxcbiAgICAgICAgICAgIHF1ZXJ5OiBxdWVyeTEsXG4gICAgICAgICAgICBhc1BhdGg6IGF1dG9FeHBvcnREeW5hbWljID8gcGF0aG5hbWUxIDogYXMxLFxuICAgICAgICAgICAgaXNQcmV2aWV3OiAhIWlzUHJldmlldyxcbiAgICAgICAgICAgIGxvY2FsZTogcHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCA/IGxvY2FsZSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGlzRmFsbGJhY2tcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5faW5pdGlhbE1hdGNoZXNNaWRkbGV3YXJlUHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShmYWxzZSk7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgLy8gbWFrZSBzdXJlIFwiYXNcIiBkb2Vzbid0IHN0YXJ0IHdpdGggZG91YmxlIHNsYXNoZXMgb3IgZWxzZSBpdCBjYW5cbiAgICAgICAgICAgIC8vIHRocm93IGFuIGVycm9yIGFzIGl0J3MgY29uc2lkZXJlZCBpbnZhbGlkXG4gICAgICAgICAgICBpZiAoIWFzMS5zdGFydHNXaXRoKCcvLycpKSB7XG4gICAgICAgICAgICAgICAgLy8gaW4gb3JkZXIgZm9yIGBlLnN0YXRlYCB0byB3b3JrIG9uIHRoZSBgb25wb3BzdGF0ZWAgZXZlbnRcbiAgICAgICAgICAgICAgICAvLyB3ZSBoYXZlIHRvIHJlZ2lzdGVyIHRoZSBpbml0aWFsIHJvdXRlIHVwb24gaW5pdGlhbGl6YXRpb25cbiAgICAgICAgICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICBsb2NhbGVcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNvbnN0IGFzUGF0aCA9ICgwLCBfdXRpbHMpLmdldFVSTCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2luaXRpYWxNYXRjaGVzTWlkZGxld2FyZVByb21pc2UgPSBtYXRjaGVzTWlkZGxld2FyZSh7XG4gICAgICAgICAgICAgICAgICAgIHJvdXRlcjogdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICBhc1BhdGhcbiAgICAgICAgICAgICAgICB9KS50aGVuKChtYXRjaGVzKT0+e1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLl9zaG91bGRSZXNvbHZlSHJlZiA9IGFzMSAhPT0gcGF0aG5hbWUxO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZVN0YXRlKCdyZXBsYWNlU3RhdGUnLCBtYXRjaGVzID8gYXNQYXRoIDogKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aChwYXRobmFtZTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5MVxuICAgICAgICAgICAgICAgICAgICB9KSwgYXNQYXRoLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoZXM7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCB0aGlzLm9uUG9wU3RhdGUpO1xuICAgICAgICAgICAgLy8gZW5hYmxlIGN1c3RvbSBzY3JvbGwgcmVzdG9yYXRpb24gaGFuZGxpbmcgd2hlbiBhdmFpbGFibGVcbiAgICAgICAgICAgIC8vIG90aGVyd2lzZSBmYWxsYmFjayB0byBicm93c2VyJ3MgZGVmYXVsdCBoYW5kbGluZ1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9TQ1JPTExfUkVTVE9SQVRJT04pIHtcbiAgICAgICAgICAgICAgICBpZiAobWFudWFsU2Nyb2xsUmVzdG9yYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93Lmhpc3Rvcnkuc2Nyb2xsUmVzdG9yYXRpb24gPSAnbWFudWFsJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5Sb3V0ZXIuZXZlbnRzID0gKDAsIF9taXR0KS5kZWZhdWx0KCk7XG5mdW5jdGlvbiBtYXRjaGVzTWlkZGxld2FyZShvcHRpb25zKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShvcHRpb25zLnJvdXRlci5wYWdlTG9hZGVyLmdldE1pZGRsZXdhcmUoKSkudGhlbigobWlkZGxld2FyZSk9PntcbiAgICAgICAgY29uc3QgeyBwYXRobmFtZTogYXNQYXRobmFtZSAgfSA9ICgwLCBfcGFyc2VQYXRoKS5wYXJzZVBhdGgob3B0aW9ucy5hc1BhdGgpO1xuICAgICAgICBjb25zdCBjbGVhbmVkQXMgPSAoMCwgX2hhc0Jhc2VQYXRoKS5oYXNCYXNlUGF0aChhc1BhdGhuYW1lKSA/ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKGFzUGF0aG5hbWUpIDogYXNQYXRobmFtZTtcbiAgICAgICAgY29uc3QgcmVnZXggPSBtaWRkbGV3YXJlID09IG51bGwgPyB2b2lkIDAgOiBtaWRkbGV3YXJlLmxvY2F0aW9uO1xuICAgICAgICByZXR1cm4gISFyZWdleCAmJiBuZXcgUmVnRXhwKHJlZ2V4KS50ZXN0KCgwLCBfYWRkTG9jYWxlKS5hZGRMb2NhbGUoY2xlYW5lZEFzLCBvcHRpb25zLmxvY2FsZSkpO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gd2l0aE1pZGRsZXdhcmVFZmZlY3RzKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbWF0Y2hlc01pZGRsZXdhcmUob3B0aW9ucykudGhlbigobWF0Y2hlcyk9PntcbiAgICAgICAgaWYgKG1hdGNoZXMgJiYgb3B0aW9ucy5mZXRjaERhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmZldGNoRGF0YSgpLnRoZW4oKGRhdGEpPT5nZXRNaWRkbGV3YXJlRGF0YShkYXRhLmRhdGFIcmVmLCBkYXRhLnJlc3BvbnNlLCBvcHRpb25zKS50aGVuKChlZmZlY3QpPT4oe1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUhyZWY6IGRhdGEuZGF0YUhyZWYsXG4gICAgICAgICAgICAgICAgICAgICAgICBqc29uOiBkYXRhLmpzb24sXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZTogZGF0YS5yZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IGRhdGEudGV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVmZmVjdFxuICAgICAgICAgICAgICAgICAgICB9KSkpLmNhdGNoKChfZXJyKT0+e1xuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIFRPRE86IFJldmlzaXQgdGhpcyBpbiB0aGUgZnV0dXJlLlxuICAgICAgICAgICAqIEZvciBub3cgd2Ugd2lsbCBub3QgY29uc2lkZXIgbWlkZGxld2FyZSBkYXRhIGVycm9ycyB0byBiZSBmYXRhbC5cbiAgICAgICAgICAgKiBtYXliZSB3ZSBzaG91bGQgcmV2aXNpdCBpbiB0aGUgZnV0dXJlLlxuICAgICAgICAgICAqLyByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0TWlkZGxld2FyZURhdGEoc291cmNlLCByZXNwb25zZSwgb3B0aW9ucykge1xuICAgIGNvbnN0IG5leHRDb25maWcgPSB7XG4gICAgICAgIGJhc2VQYXRoOiBvcHRpb25zLnJvdXRlci5iYXNlUGF0aCxcbiAgICAgICAgaTE4bjoge1xuICAgICAgICAgICAgbG9jYWxlczogb3B0aW9ucy5yb3V0ZXIubG9jYWxlc1xuICAgICAgICB9LFxuICAgICAgICB0cmFpbGluZ1NsYXNoOiBCb29sZWFuKHByb2Nlc3MuZW52Ll9fTkVYVF9UUkFJTElOR19TTEFTSClcbiAgICB9O1xuICAgIGNvbnN0IHJld3JpdGVIZWFkZXIgPSByZXNwb25zZS5oZWFkZXJzLmdldCgneC1uZXh0anMtcmV3cml0ZScpO1xuICAgIGxldCByZXdyaXRlVGFyZ2V0ID0gcmV3cml0ZUhlYWRlciB8fCByZXNwb25zZS5oZWFkZXJzLmdldCgneC1uZXh0anMtbWF0Y2hlZC1wYXRoJyk7XG4gICAgY29uc3QgbWF0Y2hlZFBhdGggPSByZXNwb25zZS5oZWFkZXJzLmdldCgneC1tYXRjaGVkLXBhdGgnKTtcbiAgICBpZiAobWF0Y2hlZFBhdGggJiYgIXJld3JpdGVUYXJnZXQgJiYgIW1hdGNoZWRQYXRoLmluY2x1ZGVzKCdfX25leHRfZGF0YV9jYXRjaGFsbCcpICYmICFtYXRjaGVkUGF0aC5pbmNsdWRlcygnL19lcnJvcicpICYmICFtYXRjaGVkUGF0aC5pbmNsdWRlcygnLzQwNCcpKSB7XG4gICAgICAgIC8vIGxldmVyYWdlIHgtbWF0Y2hlZC1wYXRoIHRvIGRldGVjdCBuZXh0LmNvbmZpZy5qcyByZXdyaXRlc1xuICAgICAgICByZXdyaXRlVGFyZ2V0ID0gbWF0Y2hlZFBhdGg7XG4gICAgfVxuICAgIGlmIChyZXdyaXRlVGFyZ2V0KSB7XG4gICAgICAgIGlmIChyZXdyaXRlVGFyZ2V0LnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkUmV3cml0ZVRhcmdldCA9ICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybChyZXdyaXRlVGFyZ2V0KTtcbiAgICAgICAgICAgIGNvbnN0IHBhdGhuYW1lSW5mbyA9ICgwLCBfZ2V0TmV4dFBhdGhuYW1lSW5mbykuZ2V0TmV4dFBhdGhuYW1lSW5mbyhwYXJzZWRSZXdyaXRlVGFyZ2V0LnBhdGhuYW1lLCB7XG4gICAgICAgICAgICAgICAgbmV4dENvbmZpZyxcbiAgICAgICAgICAgICAgICBwYXJzZURhdGE6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbGV0IGZzUGF0aG5hbWUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWVJbmZvLnBhdGhuYW1lKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5yb3V0ZXIucGFnZUxvYWRlci5nZXRQYWdlTGlzdCgpLFxuICAgICAgICAgICAgICAgICgwLCBfcm91dGVMb2FkZXIpLmdldENsaWVudEJ1aWxkTWFuaWZlc3QoKSwgXG4gICAgICAgICAgICBdKS50aGVuKChbcGFnZXMsIHsgX19yZXdyaXRlczogcmV3cml0ZXMgIH1dKT0+e1xuICAgICAgICAgICAgICAgIGxldCBhcyA9ICgwLCBfYWRkTG9jYWxlKS5hZGRMb2NhbGUocGF0aG5hbWVJbmZvLnBhdGhuYW1lLCBwYXRobmFtZUluZm8ubG9jYWxlKTtcbiAgICAgICAgICAgICAgICBpZiAoKDAsIF9pc0R5bmFtaWMpLmlzRHluYW1pY1JvdXRlKGFzKSB8fCAhcmV3cml0ZUhlYWRlciAmJiBwYWdlcy5pbmNsdWRlcygoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgoKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgoYXMpLCBvcHRpb25zLnJvdXRlci5sb2NhbGVzKS5wYXRobmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkU291cmNlID0gKDAsIF9nZXROZXh0UGF0aG5hbWVJbmZvKS5nZXROZXh0UGF0aG5hbWVJbmZvKCgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybChzb3VyY2UpLnBhdGhuYW1lLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZURhdGE6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGFzID0gKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgocGFyc2VkU291cmNlLnBhdGhuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkUmV3cml0ZVRhcmdldC5wYXRobmFtZSA9IGFzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0hBU19SRVdSSVRFUykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSAoMCwgX3Jlc29sdmVSZXdyaXRlcykuZGVmYXVsdChhcywgcGFnZXMsIHJld3JpdGVzLCBwYXJzZWRSZXdyaXRlVGFyZ2V0LnF1ZXJ5LCAocGF0aCk9PnJlc29sdmVEeW5hbWljUm91dGUocGF0aCwgcGFnZXMpLCBvcHRpb25zLnJvdXRlci5sb2NhbGVzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5tYXRjaGVkUGFnZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkUmV3cml0ZVRhcmdldC5wYXRobmFtZSA9IHJlc3VsdC5wYXJzZWRBcy5wYXRobmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzID0gcGFyc2VkUmV3cml0ZVRhcmdldC5wYXRobmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ocGFyc2VkUmV3cml0ZVRhcmdldC5xdWVyeSwgcmVzdWx0LnBhcnNlZEFzLnF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIXBhZ2VzLmluY2x1ZGVzKGZzUGF0aG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc29sdmVkUGF0aG5hbWUgPSByZXNvbHZlRHluYW1pY1JvdXRlKGZzUGF0aG5hbWUsIHBhZ2VzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc29sdmVkUGF0aG5hbWUgIT09IGZzUGF0aG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZzUGF0aG5hbWUgPSByZXNvbHZlZFBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc29sdmVkSHJlZiA9ICFwYWdlcy5pbmNsdWRlcyhmc1BhdGhuYW1lKSA/IHJlc29sdmVEeW5hbWljUm91dGUoKDAsIF9ub3JtYWxpemVMb2NhbGVQYXRoKS5ub3JtYWxpemVMb2NhbGVQYXRoKCgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKHBhcnNlZFJld3JpdGVUYXJnZXQucGF0aG5hbWUpLCBvcHRpb25zLnJvdXRlci5sb2NhbGVzKS5wYXRobmFtZSwgcGFnZXMpIDogZnNQYXRobmFtZTtcbiAgICAgICAgICAgICAgICBpZiAoKDAsIF9pc0R5bmFtaWMpLmlzRHluYW1pY1JvdXRlKHJlc29sdmVkSHJlZikpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF0Y2hlcyA9ICgwLCBfcm91dGVNYXRjaGVyKS5nZXRSb3V0ZU1hdGNoZXIoKDAsIF9yb3V0ZVJlZ2V4KS5nZXRSb3V0ZVJlZ2V4KHJlc29sdmVkSHJlZikpKGFzKTtcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihwYXJzZWRSZXdyaXRlVGFyZ2V0LnF1ZXJ5LCBtYXRjaGVzIHx8IHt9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3Jld3JpdGUnLFxuICAgICAgICAgICAgICAgICAgICBwYXJzZWRBczogcGFyc2VkUmV3cml0ZVRhcmdldCxcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZWRIcmVmXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNyYyA9ICgwLCBfcGFyc2VQYXRoKS5wYXJzZVBhdGgoc291cmNlKTtcbiAgICAgICAgY29uc3QgcGF0aG5hbWUgPSAoMCwgX2Zvcm1hdE5leHRQYXRobmFtZUluZm8pLmZvcm1hdE5leHRQYXRobmFtZUluZm8oX2V4dGVuZHMoe30sICgwLCBfZ2V0TmV4dFBhdGhuYW1lSW5mbykuZ2V0TmV4dFBhdGhuYW1lSW5mbyhzcmMucGF0aG5hbWUsIHtcbiAgICAgICAgICAgIG5leHRDb25maWcsXG4gICAgICAgICAgICBwYXJzZURhdGE6IHRydWVcbiAgICAgICAgfSksIHtcbiAgICAgICAgICAgIGRlZmF1bHRMb2NhbGU6IG9wdGlvbnMucm91dGVyLmRlZmF1bHRMb2NhbGUsXG4gICAgICAgICAgICBidWlsZElkOiAnJ1xuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICAgICAgdHlwZTogJ3JlZGlyZWN0LWV4dGVybmFsJyxcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uOiBgJHtwYXRobmFtZX0ke3NyYy5xdWVyeX0ke3NyYy5oYXNofWBcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IHJlZGlyZWN0VGFyZ2V0ID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ3gtbmV4dGpzLXJlZGlyZWN0Jyk7XG4gICAgaWYgKHJlZGlyZWN0VGFyZ2V0KSB7XG4gICAgICAgIGlmIChyZWRpcmVjdFRhcmdldC5zdGFydHNXaXRoKCcvJykpIHtcbiAgICAgICAgICAgIGNvbnN0IHNyYyA9ICgwLCBfcGFyc2VQYXRoKS5wYXJzZVBhdGgocmVkaXJlY3RUYXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgcGF0aG5hbWUgPSAoMCwgX2Zvcm1hdE5leHRQYXRobmFtZUluZm8pLmZvcm1hdE5leHRQYXRobmFtZUluZm8oX2V4dGVuZHMoe30sICgwLCBfZ2V0TmV4dFBhdGhuYW1lSW5mbykuZ2V0TmV4dFBhdGhuYW1lSW5mbyhzcmMucGF0aG5hbWUsIHtcbiAgICAgICAgICAgICAgICBuZXh0Q29uZmlnLFxuICAgICAgICAgICAgICAgIHBhcnNlRGF0YTogdHJ1ZVxuICAgICAgICAgICAgfSksIHtcbiAgICAgICAgICAgICAgICBkZWZhdWx0TG9jYWxlOiBvcHRpb25zLnJvdXRlci5kZWZhdWx0TG9jYWxlLFxuICAgICAgICAgICAgICAgIGJ1aWxkSWQ6ICcnXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgICAgICB0eXBlOiAncmVkaXJlY3QtaW50ZXJuYWwnLFxuICAgICAgICAgICAgICAgIG5ld0FzOiBgJHtwYXRobmFtZX0ke3NyYy5xdWVyeX0ke3NyYy5oYXNofWAsXG4gICAgICAgICAgICAgICAgbmV3VXJsOiBgJHtwYXRobmFtZX0ke3NyYy5xdWVyeX0ke3NyYy5oYXNofWBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICAgICAgdHlwZTogJ3JlZGlyZWN0LWV4dGVybmFsJyxcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uOiByZWRpcmVjdFRhcmdldFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgIHR5cGU6ICduZXh0J1xuICAgIH0pO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gUm91dGVyO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZXIuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNMb2NhbFVSTCIsImludGVycG9sYXRlQXMiLCJyZXNvbHZlSHJlZiIsImNyZWF0ZUtleSIsImRlZmF1bHQiLCJfYXN5bmNfdG9fZ2VuZXJhdG9yIiwicmVxdWlyZSIsIl9leHRlbmRzIiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwiX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCIsIl9ub3JtYWxpemVUcmFpbGluZ1NsYXNoIiwiX3JlbW92ZVRyYWlsaW5nU2xhc2giLCJfcm91dGVMb2FkZXIiLCJfc2NyaXB0IiwiX2lzRXJyb3IiLCJfZGVub3JtYWxpemVQYWdlUGF0aCIsIl9ub3JtYWxpemVMb2NhbGVQYXRoIiwiX21pdHQiLCJfdXRpbHMiLCJfaXNEeW5hbWljIiwiX3BhcnNlUmVsYXRpdmVVcmwiLCJfcXVlcnlzdHJpbmciLCJfcmVzb2x2ZVJld3JpdGVzIiwiX3JvdXRlTWF0Y2hlciIsIl9yb3V0ZVJlZ2V4IiwiX2Zvcm1hdFVybCIsIl9kZXRlY3REb21haW5Mb2NhbGUiLCJfcGFyc2VQYXRoIiwiX2FkZExvY2FsZSIsIl9yZW1vdmVMb2NhbGUiLCJfcmVtb3ZlQmFzZVBhdGgiLCJfYWRkQmFzZVBhdGgiLCJfaGFzQmFzZVBhdGgiLCJfZ2V0TmV4dFBhdGhuYW1lSW5mbyIsIl9mb3JtYXROZXh0UGF0aG5hbWVJbmZvIiwiX2NvbXBhcmVTdGF0ZXMiLCJidWlsZENhbmNlbGxhdGlvbkVycm9yIiwiYXNzaWduIiwiRXJyb3IiLCJjYW5jZWxsZWQiLCJ1cmwiLCJpc0Fic29sdXRlVXJsIiwibG9jYXRpb25PcmlnaW4iLCJnZXRMb2NhdGlvbk9yaWdpbiIsInJlc29sdmVkIiwiVVJMIiwib3JpZ2luIiwiaGFzQmFzZVBhdGgiLCJwYXRobmFtZSIsIl8iLCJyb3V0ZSIsImFzUGF0aG5hbWUiLCJxdWVyeSIsImludGVycG9sYXRlZFJvdXRlIiwiZHluYW1pY1JlZ2V4IiwiZ2V0Um91dGVSZWdleCIsImR5bmFtaWNHcm91cHMiLCJncm91cHMiLCJkeW5hbWljTWF0Y2hlcyIsImdldFJvdXRlTWF0Y2hlciIsInBhcmFtcyIsImtleXMiLCJldmVyeSIsInBhcmFtIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJyZXBsYWNlZCIsIkFycmF5IiwiaXNBcnJheSIsInJlcGxhY2UiLCJtYXAiLCJzZWdtZW50IiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwiam9pbiIsInJlc3VsdCIsIm9taXQiLCJvYmplY3QiLCJvbWl0dGVkIiwiZm9yRWFjaCIsImtleSIsImluY2x1ZGVzIiwicm91dGVyIiwiaHJlZiIsInJlc29sdmVBcyIsImJhc2UiLCJ1cmxBc1N0cmluZyIsImZvcm1hdFdpdGhWYWxpZGF0aW9uIiwidXJsUHJvdG9NYXRjaCIsIm1hdGNoIiwidXJsQXNTdHJpbmdOb1Byb3RvIiwic2xpY2UiLCJsZW5ndGgiLCJ1cmxQYXJ0cyIsInNwbGl0IiwiY29uc29sZSIsImVycm9yIiwibm9ybWFsaXplZFVybCIsIm5vcm1hbGl6ZVJlcGVhdGVkU2xhc2hlcyIsInN0YXJ0c1dpdGgiLCJhc1BhdGgiLCJmaW5hbFVybCIsIm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoIiwiaW50ZXJwb2xhdGVkQXMiLCJpc0R5bmFtaWNSb3V0ZSIsInNlYXJjaFBhcmFtcyIsInNlYXJjaFBhcmFtc1RvVXJsUXVlcnkiLCJoYXNoIiwicmVzb2x2ZWRIcmVmIiwiXzEiLCJzdHJpcE9yaWdpbiIsInN1YnN0cmluZyIsInByZXBhcmVVcmxBcyIsImFzIiwicmVzb2x2ZWRBcyIsImhyZWZIYWRPcmlnaW4iLCJhc0hhZE9yaWdpbiIsInByZXBhcmVkVXJsIiwiYWRkQmFzZVBhdGgiLCJwcmVwYXJlZEFzIiwicmVzb2x2ZUR5bmFtaWNSb3V0ZSIsInBhZ2VzIiwiY2xlYW5QYXRobmFtZSIsInJlbW92ZVRyYWlsaW5nU2xhc2giLCJkZW5vcm1hbGl6ZVBhZ2VQYXRoIiwic29tZSIsInBhZ2UiLCJyZSIsInRlc3QiLCJtYW51YWxTY3JvbGxSZXN0b3JhdGlvbiIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfU0NST0xMX1JFU1RPUkFUSU9OIiwid2luZG93IiwiaGlzdG9yeSIsInYiLCJzZXNzaW9uU3RvcmFnZSIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwibiIsIlNTR19EQVRBX05PVF9GT1VORCIsIlN5bWJvbCIsImZldGNoUmV0cnkiLCJhdHRlbXB0cyIsIm9wdGlvbnMiLCJmZXRjaCIsImNyZWRlbnRpYWxzIiwibWV0aG9kIiwiaGVhZGVycyIsInRoZW4iLCJyZXNwb25zZSIsIm9rIiwic3RhdHVzIiwiYmFja2dyb3VuZENhY2hlIiwiZmV0Y2hOZXh0RGF0YSIsImRhdGFIcmVmIiwiaW5mbGlnaHRDYWNoZSIsImlzUHJlZmV0Y2giLCJoYXNNaWRkbGV3YXJlIiwiaXNTZXJ2ZXJSZW5kZXIiLCJwYXJzZUpTT04iLCJwZXJzaXN0Q2FjaGUiLCJpc0JhY2tncm91bmQiLCJ1bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUiLCJjYWNoZUtleSIsImxvY2F0aW9uIiwicmVmMSIsImdldERhdGEiLCJwdXJwb3NlIiwidGV4dCIsImpzb24iLCJyZWYiLCJ0cnlUb1BhcnNlQXNKU09OIiwibm90Rm91bmQiLCJtYXJrQXNzZXRFcnJvciIsImRhdGEiLCJnZXQiLCJjYXRjaCIsImVyciIsIlByb21pc2UiLCJyZXNvbHZlIiwidW5kZWZpbmVkIiwiSlNPTiIsInBhcnNlIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwiaGFuZGxlSGFyZE5hdmlnYXRpb24iLCJhZGRMb2NhbGUiLCJsb2NhbGUiLCJnZXRDYW5jZWxsZWRIYW5kbGVyIiwiY2FuY2VsIiwiY2xjIiwiaGFuZGxlQ2FuY2VsbGVkIiwiUm91dGVyIiwicmVsb2FkIiwiYmFjayIsInB1c2giLCJfa2V5Iiwic3RyaW5naWZ5IiwieCIsInNlbGYiLCJwYWdlWE9mZnNldCIsInkiLCJwYWdlWU9mZnNldCIsImUiLCJjaGFuZ2UiLCJmb3JjZWRTY3JvbGwiLCJfdGhpcyIsImlzUXVlcnlVcGRhdGluZyIsIl9oIiwic2hvdWxkUmVzb2x2ZUhyZWYiLCJfc2hvdWxkUmVzb2x2ZUhyZWYiLCJwYXJzZVBhdGgiLCJuZXh0U3RhdGUiLCJzdGF0ZSIsInJlYWR5U3RhdGVDaGFuZ2UiLCJpc1JlYWR5IiwiaXNTc3IiLCJwcmV2TG9jYWxlIiwiX19ORVhUX0kxOE5fU1VQUE9SVCIsImRlZmF1bHRMb2NhbGUiLCJwYXJzZWRBcyIsInBhcnNlUmVsYXRpdmVVcmwiLCJyZW1vdmVCYXNlUGF0aCIsImxvY2FsZVBhdGhSZXN1bHQiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwibG9jYWxlcyIsImRldGVjdGVkTG9jYWxlIiwiZGlkTmF2aWdhdGUiLCJkZXRlY3RlZERvbWFpbiIsImRldGVjdERvbWFpbkxvY2FsZSIsImRvbWFpbkxvY2FsZXMiLCJpc0xvY2FsZURvbWFpbiIsImhvc3RuYW1lIiwiZG9tYWluIiwiYXNOb0Jhc2VQYXRoIiwiaHR0cCIsIlNUIiwicGVyZm9ybWFuY2UiLCJtYXJrIiwic2hhbGxvdyIsInNjcm9sbCIsInJvdXRlUHJvcHMiLCJfaW5GbGlnaHRSb3V0ZSIsImV2ZW50cyIsImVtaXQiLCJjbGVhbmVkQXMiLCJyZW1vdmVMb2NhbGUiLCJsb2NhbGVDaGFuZ2UiLCJvbmx5QUhhc2hDaGFuZ2UiLCJjaGFuZ2VTdGF0ZSIsInNjcm9sbFRvSGFzaCIsInNldCIsImNvbXBvbmVudHMiLCJwYXJzZWQiLCJyZXdyaXRlcyIsIl9fcmV3cml0ZXMiLCJhbGwiLCJwYWdlTG9hZGVyIiwiZ2V0UGFnZUxpc3QiLCJnZXRDbGllbnRCdWlsZE1hbmlmZXN0IiwiZ2V0TWlkZGxld2FyZSIsInVybElzTmV3IiwiaXNNaWRkbGV3YXJlTWF0Y2giLCJtYXRjaGVzTWlkZGxld2FyZSIsIl9fTkVYVF9IQVNfUkVXUklURVMiLCJyZXdyaXRlc1Jlc3VsdCIsInAiLCJleHRlcm5hbERlc3QiLCJtYXRjaGVkUGFnZSIsInJvdXRlTWF0Y2giLCJyb3V0ZVJlZ2V4Iiwic2hvdWxkSW50ZXJwb2xhdGUiLCJtaXNzaW5nUGFyYW1zIiwiZmlsdGVyIiwid2FybiIsInJlZjIiLCJyZWYzIiwicm91dGVJbmZvIiwiZ2V0Um91dGVJbmZvIiwiaXNQcmV2aWV3IiwicHJlZml4ZWRBcyIsInJld3JpdGVBcyIsImxvY2FsZVJlc3VsdCIsImN1clJvdXRlTWF0Y2giLCJ0eXBlIiwibmV3VXJsIiwibmV3QXMiLCJkZXN0aW5hdGlvbiIsInByb3BzIiwiX19OX1NTRyIsIl9fTl9TU1AiLCJjb21wb25lbnQiLCJDb21wb25lbnQiLCJ1bnN0YWJsZV9zY3JpcHRMb2FkZXIiLCJzY3JpcHRzIiwiY29uY2F0Iiwic2NyaXB0IiwiaGFuZGxlQ2xpZW50U2NyaXB0TG9hZCIsInBhZ2VQcm9wcyIsIl9fTl9SRURJUkVDVCIsIl9fTl9SRURJUkVDVF9CQVNFX1BBVEgiLCJwYXJzZWRIcmVmIiwiX19OX1BSRVZJRVciLCJub3RGb3VuZFJvdXRlIiwiZmV0Y2hDb21wb25lbnQiLCJfX05FWFRfREFUQV9fIiwic3RhdHVzQ29kZSIsIl9yb3V0ZSIsImlzVmFsaWRTaGFsbG93Um91dGUiLCJfc2Nyb2xsIiwic2hvdWxkU2Nyb2xsIiwicmVzZXRTY3JvbGwiLCJ1cGNvbWluZ1JvdXRlclN0YXRlIiwiaXNGYWxsYmFjayIsInVwY29taW5nU2Nyb2xsU3RhdGUiLCJjYW5Ta2lwVXBkYXRpbmciLCJjb21wYXJlUm91dGVyU3RhdGVzIiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJsYW5nIiwiaGFzaFJlZ2V4IiwiZXJyMSIsImdldFVSTCIsIl9zaGFsbG93IiwiX19OIiwiaGFuZGxlUm91dGVJbmZvRXJyb3IiLCJsb2FkRXJyb3JGYWlsIiwiaXNBc3NldEVycm9yIiwic3R5bGVTaGVldHMiLCJnZXRJbml0aWFsUHJvcHMiLCJnaXBFcnIiLCJyb3V0ZUluZm9FcnIiLCJyZXF1ZXN0ZWRSb3V0ZSIsInJlZjQiLCJyZWY1IiwiZXhpc3RpbmdJbmZvIiwiY2FjaGVkUm91dGVJbmZvIiwiZmV0Y2hOZXh0RGF0YVBhcmFtcyIsImdldERhdGFIcmVmIiwic2tpcEludGVycG9sYXRpb24iLCJzZGMiLCJ3aXRoTWlkZGxld2FyZUVmZmVjdHMiLCJmZXRjaERhdGEiLCJlZmZlY3QiLCJyZXMiLCJtb2QiLCJfX05fUlNDIiwiX19uZXh0X3JzY19fIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidXNlU3RyZWFtZWRGbGlnaHREYXRhIiwic2hvdWxkRmV0Y2hEYXRhIiwiX2dldERhdGEiLCJmbGlnaHRJbmZvIiwiX19mbGlnaHRfXyIsIl9nZXRGbGlnaHREYXRhIiwiZ2V0UHJvcGVyRXJyb3IiLCJzdWIiLCJiZWZvcmVQb3BTdGF0ZSIsImNiIiwiX2JwcyIsIm9sZFVybE5vSGFzaCIsIm9sZEhhc2giLCJuZXdVcmxOb0hhc2giLCJuZXdIYXNoIiwic2Nyb2xsVG8iLCJyYXdIYXNoIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiaWRFbCIsImdldEVsZW1lbnRCeUlkIiwic2Nyb2xsSW50b1ZpZXciLCJuYW1lRWwiLCJnZXRFbGVtZW50c0J5TmFtZSIsInByZWZldGNoIiwiX2lzU3NnIiwiaXNTc2ciLCJwcmlvcml0eSIsIl9fTkVYVF9PUFRJTUlTVElDX0NMSUVOVF9DQUNIRSIsImNvbXBvbmVudFJlc3VsdCIsImxvYWRQYWdlIiwiZm4iLCJjdHgiLCJBcHAiLCJBcHBUcmVlIiwiX3dyYXBBcHAiLCJsb2FkR2V0SW5pdGlhbFByb3BzIiwiY29uc3RydWN0b3IiLCJwYXRobmFtZTEiLCJxdWVyeTEiLCJhczEiLCJpbml0aWFsUHJvcHMiLCJ3cmFwQXBwIiwic3Vic2NyaXB0aW9uIiwiaXNSc2MiLCJpc0ZpcnN0UG9wU3RhdGVFdmVudCIsIm9uUG9wU3RhdGUiLCJfX05BIiwiZ2V0SXRlbSIsImUxIiwiaW5pdGlhbCIsImF1dG9FeHBvcnREeW5hbWljIiwiYXV0b0V4cG9ydCIsImJhc2VQYXRoIiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsImdzc3AiLCJnaXAiLCJhcHBHaXAiLCJnc3AiLCJzZWFyY2giLCJfaW5pdGlhbE1hdGNoZXNNaWRkbGV3YXJlUHJvbWlzZSIsIm1hdGNoZXMiLCJhZGRFdmVudExpc3RlbmVyIiwic2Nyb2xsUmVzdG9yYXRpb24iLCJtaWRkbGV3YXJlIiwicmVnZXgiLCJSZWdFeHAiLCJnZXRNaWRkbGV3YXJlRGF0YSIsIl9lcnIiLCJzb3VyY2UiLCJuZXh0Q29uZmlnIiwiaTE4biIsInRyYWlsaW5nU2xhc2giLCJCb29sZWFuIiwiX19ORVhUX1RSQUlMSU5HX1NMQVNIIiwicmV3cml0ZUhlYWRlciIsInJld3JpdGVUYXJnZXQiLCJtYXRjaGVkUGF0aCIsInBhcnNlZFJld3JpdGVUYXJnZXQiLCJwYXRobmFtZUluZm8iLCJnZXROZXh0UGF0aG5hbWVJbmZvIiwicGFyc2VEYXRhIiwiZnNQYXRobmFtZSIsInBhcnNlZFNvdXJjZSIsInBhdGgiLCJyZXNvbHZlZFBhdGhuYW1lIiwic3JjIiwiZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyIsImJ1aWxkSWQiLCJyZWRpcmVjdFRhcmdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./src/components/Button.jsx":
/*!***********************************!*\
  !*** ./src/components/Button.jsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Button\": () => (/* binding */ Button)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"clsx\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(clsx__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst variantStyles = {\n    primary: \"bg-zinc-800 font-semibold text-zinc-100 hover:bg-zinc-700 active:bg-zinc-800 active:text-zinc-100/70 dark:bg-zinc-700 dark:hover:bg-zinc-600 dark:active:bg-zinc-700 dark:active:text-zinc-100/70\",\n    secondary: \"bg-zinc-50 font-medium text-zinc-900 hover:bg-zinc-100 active:bg-zinc-100 active:text-zinc-900/60 dark:bg-zinc-800/50 dark:text-zinc-300 dark:hover:bg-zinc-800 dark:hover:text-zinc-50 dark:active:bg-zinc-800/50 dark:active:text-zinc-50/70\"\n};\nfunction Button({ variant =\"primary\" , className , href , ...props }) {\n    className = clsx__WEBPACK_IMPORTED_MODULE_2___default()(\"inline-flex items-center gap-2 justify-center rounded-md py-2 px-3 text-sm outline-offset-2 transition active:transition-none\", variantStyles[variant], className);\n    return href ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n        href: href,\n        className: className,\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Button.jsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        className: className,\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Button.jsx\",\n        lineNumber: 21,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9CdXR0b24uanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUE0QjtBQUNMO0FBRXZCLE1BQU1FLGFBQWEsR0FBRztJQUNwQkMsT0FBTyxFQUNMLG1NQUFtTTtJQUNyTUMsU0FBUyxFQUNQLGdQQUFnUDtDQUNuUDtBQUVNLFNBQVNDLE1BQU0sQ0FBQyxFQUFFQyxPQUFPLEVBQUcsU0FBUyxHQUFFQyxTQUFTLEdBQUVDLElBQUksR0FBRSxHQUFHQyxLQUFLLEVBQUUsRUFBRTtJQUN6RUYsU0FBUyxHQUFHTiwyQ0FBSSxDQUNkLCtIQUErSCxFQUMvSEMsYUFBYSxDQUFDSSxPQUFPLENBQUMsRUFDdEJDLFNBQVMsQ0FDVjtJQUVELE9BQU9DLElBQUksaUJBQ1QsOERBQUNSLGtEQUFJO1FBQUNRLElBQUksRUFBRUEsSUFBSTtRQUFFRCxTQUFTLEVBQUVBLFNBQVM7UUFBRyxHQUFHRSxLQUFLOzs7OztZQUFJLGlCQUVyRCw4REFBQ0MsUUFBTTtRQUFDSCxTQUFTLEVBQUVBLFNBQVM7UUFBRyxHQUFHRSxLQUFLOzs7OztZQUFJLENBQzVDO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXRlbXBsYXRlLy4vc3JjL2NvbXBvbmVudHMvQnV0dG9uLmpzeD80ZTFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5cbmNvbnN0IHZhcmlhbnRTdHlsZXMgPSB7XG4gIHByaW1hcnk6XG4gICAgJ2JnLXppbmMtODAwIGZvbnQtc2VtaWJvbGQgdGV4dC16aW5jLTEwMCBob3ZlcjpiZy16aW5jLTcwMCBhY3RpdmU6YmctemluYy04MDAgYWN0aXZlOnRleHQtemluYy0xMDAvNzAgZGFyazpiZy16aW5jLTcwMCBkYXJrOmhvdmVyOmJnLXppbmMtNjAwIGRhcms6YWN0aXZlOmJnLXppbmMtNzAwIGRhcms6YWN0aXZlOnRleHQtemluYy0xMDAvNzAnLFxuICBzZWNvbmRhcnk6XG4gICAgJ2JnLXppbmMtNTAgZm9udC1tZWRpdW0gdGV4dC16aW5jLTkwMCBob3ZlcjpiZy16aW5jLTEwMCBhY3RpdmU6YmctemluYy0xMDAgYWN0aXZlOnRleHQtemluYy05MDAvNjAgZGFyazpiZy16aW5jLTgwMC81MCBkYXJrOnRleHQtemluYy0zMDAgZGFyazpob3ZlcjpiZy16aW5jLTgwMCBkYXJrOmhvdmVyOnRleHQtemluYy01MCBkYXJrOmFjdGl2ZTpiZy16aW5jLTgwMC81MCBkYXJrOmFjdGl2ZTp0ZXh0LXppbmMtNTAvNzAnLFxufVxuXG5leHBvcnQgZnVuY3Rpb24gQnV0dG9uKHsgdmFyaWFudCA9ICdwcmltYXJ5JywgY2xhc3NOYW1lLCBocmVmLCAuLi5wcm9wcyB9KSB7XG4gIGNsYXNzTmFtZSA9IGNsc3goXG4gICAgJ2lubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBnYXAtMiBqdXN0aWZ5LWNlbnRlciByb3VuZGVkLW1kIHB5LTIgcHgtMyB0ZXh0LXNtIG91dGxpbmUtb2Zmc2V0LTIgdHJhbnNpdGlvbiBhY3RpdmU6dHJhbnNpdGlvbi1ub25lJyxcbiAgICB2YXJpYW50U3R5bGVzW3ZhcmlhbnRdLFxuICAgIGNsYXNzTmFtZVxuICApXG5cbiAgcmV0dXJuIGhyZWYgPyAoXG4gICAgPExpbmsgaHJlZj17aHJlZn0gY2xhc3NOYW1lPXtjbGFzc05hbWV9IHsuLi5wcm9wc30gLz5cbiAgKSA6IChcbiAgICA8YnV0dG9uIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSB7Li4ucHJvcHN9IC8+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJMaW5rIiwiY2xzeCIsInZhcmlhbnRTdHlsZXMiLCJwcmltYXJ5Iiwic2Vjb25kYXJ5IiwiQnV0dG9uIiwidmFyaWFudCIsImNsYXNzTmFtZSIsImhyZWYiLCJwcm9wcyIsImJ1dHRvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Button.jsx\n");

/***/ }),

/***/ "./src/components/Card.jsx":
/*!*********************************!*\
  !*** ./src/components/Card.jsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Card\": () => (/* binding */ Card)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"clsx\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(clsx__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction ChevronRightIcon(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 16 16\",\n        fill: \"none\",\n        \"aria-hidden\": \"true\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            d: \"M6.75 5.75 9.25 8l-2.5 2.25\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n            lineNumber: 7,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n        lineNumber: 6,\n        columnNumber: 5\n    }, this);\n}\nfunction Card({ as: Component = \"div\" , className , children  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        className: clsx__WEBPACK_IMPORTED_MODULE_2___default()(className, \"group relative flex flex-col items-start\"),\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\nCard.Link = function CardLink({ children , ...props }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute -inset-y-6 -inset-x-4 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 dark:bg-zinc-800/50 sm:-inset-x-6 sm:rounded-2xl\"\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n                lineNumber: 30,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n                ...props,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"absolute -inset-y-6 -inset-x-4 z-20 sm:-inset-x-6 sm:rounded-2xl\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n                        lineNumber: 32,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"relative z-10\",\n                        children: children\n                    }, void 0, false, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n                        lineNumber: 33,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n};\nCard.Title = function CardTitle({ as: Component = \"h2\" , href , children  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        className: \"text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100\",\n        children: href ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Card.Link, {\n            href: href,\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n            lineNumber: 42,\n            columnNumber: 15\n        }, this) : children\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, this);\n};\nCard.Description = function CardDescription({ children  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        className: \"relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400\",\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, this);\n};\nCard.Cta = function CardCta({ children  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        \"aria-hidden\": \"true\",\n        className: \"relative z-10 mt-4 flex items-center text-sm font-medium text-pink-500\",\n        children: [\n            children,\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ChevronRightIcon, {\n                className: \"ml-1 h-4 w-4 stroke-current\"\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n                lineNumber: 62,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n        lineNumber: 57,\n        columnNumber: 5\n    }, this);\n};\nCard.Eyebrow = function CardEyebrow({ as: Component = \"p\" , decorate =false , className , children , ...props }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        className: clsx__WEBPACK_IMPORTED_MODULE_2___default()(className, \"relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500\", decorate && \"pl-3.5\"),\n        ...props,\n        children: [\n            decorate && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"absolute inset-y-0 left-0 flex items-center\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500\"\n                }, void 0, false, {\n                    fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n                    lineNumber: 88,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n                lineNumber: 84,\n                columnNumber: 9\n            }, this),\n            children\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Card.jsx\",\n        lineNumber: 75,\n        columnNumber: 5\n    }, this);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGtCQUNQLDhEQUFDWCxNQUFJO2dCQUNISixTQUFTLEVBQUMsNkNBQTZDO2dCQUN2RFQsYUFBVyxFQUFDLE1BQU07MEJBRWxCLDRFQUFDYSxNQUFJO29CQUFDSixTQUFTLEVBQUMscURBQXFEOzs7Ozt3QkFBRzs7Ozs7b0JBQ25FO1lBRVJDLFFBQVE7Ozs7OztZQUNDLENBQ2I7Q0FDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzeD80YTQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5cbmZ1bmN0aW9uIENoZXZyb25SaWdodEljb24ocHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHsuLi5wcm9wc30+XG4gICAgICA8cGF0aFxuICAgICAgICBkPVwiTTYuNzUgNS43NSA5LjI1IDhsLTIuNSAyLjI1XCJcbiAgICAgICAgc3Ryb2tlV2lkdGg9XCIxLjVcIlxuICAgICAgICBzdHJva2VMaW5lY2FwPVwicm91bmRcIlxuICAgICAgICBzdHJva2VMaW5lam9pbj1cInJvdW5kXCJcbiAgICAgIC8+XG4gICAgPC9zdmc+XG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENhcmQoeyBhczogQ29tcG9uZW50ID0gJ2RpdicsIGNsYXNzTmFtZSwgY2hpbGRyZW4gfSkge1xuICByZXR1cm4gKFxuICAgIDxDb21wb25lbnRcbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjbGFzc05hbWUsICdncm91cCByZWxhdGl2ZSBmbGV4IGZsZXgtY29sIGl0ZW1zLXN0YXJ0Jyl9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ29tcG9uZW50PlxuICApXG59XG5cbkNhcmQuTGluayA9IGZ1bmN0aW9uIENhcmRMaW5rKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJhYnNvbHV0ZSAtaW5zZXQteS02IC1pbnNldC14LTQgei0wIHNjYWxlLTk1IGJnLXppbmMtNTAgb3BhY2l0eS0wIHRyYW5zaXRpb24gZ3JvdXAtaG92ZXI6c2NhbGUtMTAwIGdyb3VwLWhvdmVyOm9wYWNpdHktMTAwIGRhcms6YmctemluYy04MDAvNTAgc206LWluc2V0LXgtNiBzbTpyb3VuZGVkLTJ4bFwiIC8+XG4gICAgICA8TGluayB7Li4ucHJvcHN9PlxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJhYnNvbHV0ZSAtaW5zZXQteS02IC1pbnNldC14LTQgei0yMCBzbTotaW5zZXQteC02IHNtOnJvdW5kZWQtMnhsXCIgLz5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmVsYXRpdmUgei0xMFwiPntjaGlsZHJlbn08L3NwYW4+XG4gICAgICA8L0xpbms+XG4gICAgPC8+XG4gIClcbn1cblxuQ2FyZC5UaXRsZSA9IGZ1bmN0aW9uIENhcmRUaXRsZSh7IGFzOiBDb21wb25lbnQgPSAnaDInLCBocmVmLCBjaGlsZHJlbiB9KSB7XG4gIHJldHVybiAoXG4gICAgPENvbXBvbmVudCBjbGFzc05hbWU9XCJ0ZXh0LWJhc2UgZm9udC1zZW1pYm9sZCB0cmFja2luZy10aWdodCB0ZXh0LXppbmMtODAwIGRhcms6dGV4dC16aW5jLTEwMFwiPlxuICAgICAge2hyZWYgPyA8Q2FyZC5MaW5rIGhyZWY9e2hyZWZ9PntjaGlsZHJlbn08L0NhcmQuTGluaz4gOiBjaGlsZHJlbn1cbiAgICA8L0NvbXBvbmVudD5cbiAgKVxufVxuXG5DYXJkLkRlc2NyaXB0aW9uID0gZnVuY3Rpb24gQ2FyZERlc2NyaXB0aW9uKHsgY2hpbGRyZW4gfSkge1xuICByZXR1cm4gKFxuICAgIDxwIGNsYXNzTmFtZT1cInJlbGF0aXZlIHotMTAgbXQtMiB0ZXh0LXNtIHRleHQtemluYy02MDAgZGFyazp0ZXh0LXppbmMtNDAwXCI+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9wPlxuICApXG59XG5cbkNhcmQuQ3RhID0gZnVuY3Rpb24gQ2FyZEN0YSh7IGNoaWxkcmVuIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgICAgY2xhc3NOYW1lPVwicmVsYXRpdmUgei0xMCBtdC00IGZsZXggaXRlbXMtY2VudGVyIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1waW5rLTUwMFwiXG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgICAgPENoZXZyb25SaWdodEljb24gY2xhc3NOYW1lPVwibWwtMSBoLTQgdy00IHN0cm9rZS1jdXJyZW50XCIgLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5DYXJkLkV5ZWJyb3cgPSBmdW5jdGlvbiBDYXJkRXllYnJvdyh7XG4gIGFzOiBDb21wb25lbnQgPSAncCcsXG4gIGRlY29yYXRlID0gZmFsc2UsXG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiAoXG4gICAgPENvbXBvbmVudFxuICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICdyZWxhdGl2ZSB6LTEwIG9yZGVyLWZpcnN0IG1iLTMgZmxleCBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LXppbmMtNDAwIGRhcms6dGV4dC16aW5jLTUwMCcsXG4gICAgICAgIGRlY29yYXRlICYmICdwbC0zLjUnXG4gICAgICApfVxuICAgICAgey4uLnByb3BzfVxuICAgID5cbiAgICAgIHtkZWNvcmF0ZSAmJiAoXG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgY2xhc3NOYW1lPVwiYWJzb2x1dGUgaW5zZXQteS0wIGxlZnQtMCBmbGV4IGl0ZW1zLWNlbnRlclwiXG4gICAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImgtNCB3LTAuNSByb3VuZGVkLWZ1bGwgYmctemluYy0yMDAgZGFyazpiZy16aW5jLTUwMFwiIC8+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICl9XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Db21wb25lbnQ+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJMaW5rIiwiY2xzeCIsIkNoZXZyb25SaWdodEljb24iLCJwcm9wcyIsInN2ZyIsInZpZXdCb3giLCJmaWxsIiwiYXJpYS1oaWRkZW4iLCJwYXRoIiwiZCIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwiQ2FyZCIsImFzIiwiQ29tcG9uZW50IiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJDYXJkTGluayIsImRpdiIsInNwYW4iLCJUaXRsZSIsIkNhcmRUaXRsZSIsImhyZWYiLCJEZXNjcmlwdGlvbiIsIkNhcmREZXNjcmlwdGlvbiIsInAiLCJDdGEiLCJDYXJkQ3RhIiwiRXllYnJvdyIsIkNhcmRFeWVicm93IiwiZGVjb3JhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Card.jsx\n");

/***/ }),

/***/ "./src/components/Container.jsx":
/*!**************************************!*\
  !*** ./src/components/Container.jsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Container\": () => (/* binding */ Container)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"clsx\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(clsx__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst OuterContainer = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function OuterContainer({ className , children , ...props }, ref) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: clsx__WEBPACK_IMPORTED_MODULE_2___default()(\"sm:px-8\", className),\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"mx-auto max-w-7xl lg:px-8\",\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/Container.jsx\",\n            lineNumber: 10,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Container.jsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, this);\n});\nconst InnerContainer = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function InnerContainer({ className , children , ...props }, ref) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: clsx__WEBPACK_IMPORTED_MODULE_2___default()(\"relative px-4 sm:px-8 lg:px-12\", className),\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"mx-auto max-w-2xl lg:max-w-5xl\",\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/Container.jsx\",\n            lineNumber: 25,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Container.jsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, this);\n});\nconst Container = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function Container({ children , ...props }, ref) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OuterContainer, {\n        ref: ref,\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(InnerContainer, {\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/Container.jsx\",\n            lineNumber: 36,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/Container.jsx\",\n        lineNumber: 35,\n        columnNumber: 5\n    }, this);\n});\nContainer.Outer = OuterContainer;\nContainer.Inner = InnerContainer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Db250YWluZXIuanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUFrQztBQUNYO0FBRXZCLE1BQU1FLGNBQWMsaUJBQUdGLGlEQUFVLENBQUMsU0FBU0UsY0FBYyxDQUN2RCxFQUFFQyxTQUFTLEdBQUVDLFFBQVEsR0FBRSxHQUFHQyxLQUFLLEVBQUUsRUFDakNDLEdBQUcsRUFDSDtJQUNBLHFCQUNFLDhEQUFDQyxLQUFHO1FBQUNELEdBQUcsRUFBRUEsR0FBRztRQUFFSCxTQUFTLEVBQUVGLDJDQUFJLENBQUMsU0FBUyxFQUFFRSxTQUFTLENBQUM7UUFBRyxHQUFHRSxLQUFLO2tCQUM3RCw0RUFBQ0UsS0FBRztZQUFDSixTQUFTLEVBQUMsMkJBQTJCO3NCQUFFQyxRQUFROzs7OztnQkFBTzs7Ozs7WUFDdkQsQ0FDUDtDQUNGLENBQUM7QUFFRixNQUFNSSxjQUFjLGlCQUFHUixpREFBVSxDQUFDLFNBQVNRLGNBQWMsQ0FDdkQsRUFBRUwsU0FBUyxHQUFFQyxRQUFRLEdBQUUsR0FBR0MsS0FBSyxFQUFFLEVBQ2pDQyxHQUFHLEVBQ0g7SUFDQSxxQkFDRSw4REFBQ0MsS0FBRztRQUNGRCxHQUFHLEVBQUVBLEdBQUc7UUFDUkgsU0FBUyxFQUFFRiwyQ0FBSSxDQUFDLGdDQUFnQyxFQUFFRSxTQUFTLENBQUM7UUFDM0QsR0FBR0UsS0FBSztrQkFFVCw0RUFBQ0UsS0FBRztZQUFDSixTQUFTLEVBQUMsZ0NBQWdDO3NCQUFFQyxRQUFROzs7OztnQkFBTzs7Ozs7WUFDNUQsQ0FDUDtDQUNGLENBQUM7QUFFSyxNQUFNSyxTQUFTLGlCQUFHVCxpREFBVSxDQUFDLFNBQVNTLFNBQVMsQ0FDcEQsRUFBRUwsUUFBUSxHQUFFLEdBQUdDLEtBQUssRUFBRSxFQUN0QkMsR0FBRyxFQUNIO0lBQ0EscUJBQ0UsOERBQUNKLGNBQWM7UUFBQ0ksR0FBRyxFQUFFQSxHQUFHO1FBQUcsR0FBR0QsS0FBSztrQkFDakMsNEVBQUNHLGNBQWM7c0JBQUVKLFFBQVE7Ozs7O2dCQUFrQjs7Ozs7WUFDNUIsQ0FDbEI7Q0FDRixDQUFDO0FBRUZLLFNBQVMsQ0FBQ0MsS0FBSyxHQUFHUixjQUFjO0FBQ2hDTyxTQUFTLENBQUNFLEtBQUssR0FBR0gsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9zcmMvY29tcG9uZW50cy9Db250YWluZXIuanN4PzdhNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcblxuY29uc3QgT3V0ZXJDb250YWluZXIgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIE91dGVyQ29udGFpbmVyKFxuICB7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0sXG4gIHJlZlxuKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e3JlZn0gY2xhc3NOYW1lPXtjbHN4KCdzbTpweC04JywgY2xhc3NOYW1lKX0gey4uLnByb3BzfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXgtYXV0byBtYXgtdy03eGwgbGc6cHgtOFwiPntjaGlsZHJlbn08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufSlcblxuY29uc3QgSW5uZXJDb250YWluZXIgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIElubmVyQ29udGFpbmVyKFxuICB7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0sXG4gIHJlZlxuKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBjbGFzc05hbWU9e2Nsc3goJ3JlbGF0aXZlIHB4LTQgc206cHgtOCBsZzpweC0xMicsIGNsYXNzTmFtZSl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJteC1hdXRvIG1heC13LTJ4bCBsZzptYXgtdy01eGxcIj57Y2hpbGRyZW59PC9kaXY+XG4gICAgPC9kaXY+XG4gIClcbn0pXG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIENvbnRhaW5lcihcbiAgeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSxcbiAgcmVmXG4pIHtcbiAgcmV0dXJuIChcbiAgICA8T3V0ZXJDb250YWluZXIgcmVmPXtyZWZ9IHsuLi5wcm9wc30+XG4gICAgICA8SW5uZXJDb250YWluZXI+e2NoaWxkcmVufTwvSW5uZXJDb250YWluZXI+XG4gICAgPC9PdXRlckNvbnRhaW5lcj5cbiAgKVxufSlcblxuQ29udGFpbmVyLk91dGVyID0gT3V0ZXJDb250YWluZXJcbkNvbnRhaW5lci5Jbm5lciA9IElubmVyQ29udGFpbmVyXG4iXSwibmFtZXMiOlsiZm9yd2FyZFJlZiIsImNsc3giLCJPdXRlckNvbnRhaW5lciIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwicHJvcHMiLCJyZWYiLCJkaXYiLCJJbm5lckNvbnRhaW5lciIsIkNvbnRhaW5lciIsIk91dGVyIiwiSW5uZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Container.jsx\n");

/***/ }),

/***/ "./src/components/SocialIcons.jsx":
/*!****************************************!*\
  !*** ./src/components/SocialIcons.jsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GitHubIcon\": () => (/* binding */ GitHubIcon),\n/* harmony export */   \"InstagramIcon\": () => (/* binding */ InstagramIcon),\n/* harmony export */   \"LinkedInIcon\": () => (/* binding */ LinkedInIcon),\n/* harmony export */   \"TwitterIcon\": () => (/* binding */ TwitterIcon)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction TwitterIcon(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            d: \"M20.055 7.983c.011.174.011.347.011.523 0 5.338-3.92 11.494-11.09 11.494v-.003A10.755 10.755 0 0 1 3 18.186c.308.038.618.057.928.058a7.655 7.655 0 0 0 4.841-1.733c-1.668-.032-3.13-1.16-3.642-2.805a3.753 3.753 0 0 0 1.76-.07C5.07 13.256 3.76 11.6 3.76 9.676v-.05a3.77 3.77 0 0 0 1.77.505C3.816 8.945 3.288 6.583 4.322 4.737c1.98 2.524 4.9 4.058 8.034 4.22a4.137 4.137 0 0 1 1.128-3.86A3.807 3.807 0 0 1 19 5.274a7.657 7.657 0 0 0 2.475-.98c-.29.934-.9 1.729-1.713 2.233A7.54 7.54 0 0 0 22 5.89a8.084 8.084 0 0 1-1.945 2.093Z\"\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n            lineNumber: 4,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n        lineNumber: 3,\n        columnNumber: 5\n    }, this);\n}\nfunction InstagramIcon(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\",\n        ...props,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M12 3c-2.444 0-2.75.01-3.71.054-.959.044-1.613.196-2.185.418A4.412 4.412 0 0 0 4.51 4.511c-.5.5-.809 1.002-1.039 1.594-.222.572-.374 1.226-.418 2.184C3.01 9.25 3 9.556 3 12s.01 2.75.054 3.71c.044.959.196 1.613.418 2.185.23.592.538 1.094 1.039 1.595.5.5 1.002.808 1.594 1.038.572.222 1.226.374 2.184.418C9.25 20.99 9.556 21 12 21s2.75-.01 3.71-.054c.959-.044 1.613-.196 2.185-.419a4.412 4.412 0 0 0 1.595-1.038c.5-.5.808-1.002 1.038-1.594.222-.572.374-1.226.418-2.184.044-.96.054-1.267.054-3.711s-.01-2.75-.054-3.71c-.044-.959-.196-1.613-.419-2.185A4.412 4.412 0 0 0 19.49 4.51c-.5-.5-1.002-.809-1.594-1.039-.572-.222-1.226-.374-2.184-.418C14.75 3.01 14.444 3 12 3Zm0 1.622c2.403 0 2.688.009 3.637.052.877.04 1.354.187 1.67.31.421.163.72.358 1.036.673.315.315.51.615.673 1.035.123.317.27.794.31 1.671.043.95.052 1.234.052 3.637s-.009 2.688-.052 3.637c-.04.877-.187 1.354-.31 1.67-.163.421-.358.72-.673 1.036a2.79 2.79 0 0 1-1.035.673c-.317.123-.794.27-1.671.31-.95.043-1.234.052-3.637.052s-2.688-.009-3.637-.052c-.877-.04-1.354-.187-1.67-.31a2.789 2.789 0 0 1-1.036-.673 2.79 2.79 0 0 1-.673-1.035c-.123-.317-.27-.794-.31-1.671-.043-.95-.052-1.234-.052-3.637s.009-2.688.052-3.637c.04-.877.187-1.354.31-1.67.163-.421.358-.72.673-1.036.315-.315.615-.51 1.035-.673.317-.123.794-.27 1.671-.31.95-.043 1.234-.052 3.637-.052Z\"\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n                lineNumber: 12,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M12 15a3 3 0 1 1 0-6 3 3 0 0 1 0 6Zm0-7.622a4.622 4.622 0 1 0 0 9.244 4.622 4.622 0 0 0 0-9.244Zm5.884-.182a1.08 1.08 0 1 1-2.16 0 1.08 1.08 0 0 1 2.16 0Z\"\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, this);\n}\nfunction GitHubIcon(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M12 2C6.475 2 2 6.588 2 12.253c0 4.537 2.862 8.369 6.838 9.727.5.09.687-.218.687-.487 0-.243-.013-1.05-.013-1.91C7 20.059 6.35 18.957 6.15 18.38c-.113-.295-.6-1.205-1.025-1.448-.35-.192-.85-.667-.013-.68.788-.012 1.35.744 1.538 1.051.9 1.551 2.338 1.116 2.912.846.088-.666.35-1.115.638-1.371-2.225-.256-4.55-1.14-4.55-5.062 0-1.115.387-2.038 1.025-2.756-.1-.256-.45-1.307.1-2.717 0 0 .837-.269 2.75 1.051.8-.23 1.65-.346 2.5-.346.85 0 1.7.115 2.5.346 1.912-1.333 2.75-1.05 2.75-1.05.55 1.409.2 2.46.1 2.716.637.718 1.025 1.628 1.025 2.756 0 3.934-2.337 4.806-4.562 5.062.362.32.675.936.675 1.897 0 1.371-.013 2.473-.013 2.82 0 .268.188.589.688.486a10.039 10.039 0 0 0 4.932-3.74A10.447 10.447 0 0 0 22 12.253C22 6.588 17.525 2 12 2Z\"\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n            lineNumber: 21,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, this);\n}\nfunction LinkedInIcon(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            d: \"M18.335 18.339H15.67v-4.177c0-.996-.02-2.278-1.39-2.278-1.389 0-1.601 1.084-1.601 2.205v4.25h-2.666V9.75h2.56v1.17h.035c.358-.674 1.228-1.387 2.528-1.387 2.7 0 3.2 1.778 3.2 4.091v4.715zM7.003 8.575a1.546 1.546 0 01-1.548-1.549 1.548 1.548 0 111.547 1.549zm1.336 9.764H5.666V9.75H8.34v8.589zM19.67 3H4.329C3.593 3 3 3.58 3 4.297v15.406C3 20.42 3.594 21 4.328 21h15.338C20.4 21 21 20.42 21 19.703V4.297C21 3.58 20.4 3 19.666 3h.003z\"\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n            lineNumber: 33,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/components/SocialIcons.jsx\",\n        lineNumber: 32,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Tb2NpYWxJY29ucy5qc3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFBTyxTQUFTQSxXQUFXLENBQUNDLEtBQUssRUFBRTtJQUNqQyxxQkFDRSw4REFBQ0MsS0FBRztRQUFDQyxPQUFPLEVBQUMsV0FBVztRQUFDQyxhQUFXLEVBQUMsTUFBTTtRQUFFLEdBQUdILEtBQUs7a0JBQ25ELDRFQUFDSSxNQUFJO1lBQUNDLENBQUMsRUFBQyw0Z0JBQTRnQjs7Ozs7Z0JBQUc7Ozs7O1lBQ25oQixDQUNQO0NBQ0Y7QUFFTSxTQUFTQyxhQUFhLENBQUNOLEtBQUssRUFBRTtJQUNuQyxxQkFDRSw4REFBQ0MsS0FBRztRQUFDQyxPQUFPLEVBQUMsV0FBVztRQUFDQyxhQUFXLEVBQUMsTUFBTTtRQUFFLEdBQUdILEtBQUs7OzBCQUNuRCw4REFBQ0ksTUFBSTtnQkFBQ0MsQ0FBQyxFQUFDLHd5Q0FBd3lDOzs7OztvQkFBRzswQkFDbnpDLDhEQUFDRCxNQUFJO2dCQUFDQyxDQUFDLEVBQUMsNEpBQTRKOzs7OztvQkFBRzs7Ozs7O1lBQ25LLENBQ1A7Q0FDRjtBQUVNLFNBQVNFLFVBQVUsQ0FBQ1AsS0FBSyxFQUFFO0lBQ2hDLHFCQUNFLDhEQUFDQyxLQUFHO1FBQUNDLE9BQU8sRUFBQyxXQUFXO1FBQUNDLGFBQVcsRUFBQyxNQUFNO1FBQUUsR0FBR0gsS0FBSztrQkFDbkQsNEVBQUNJLE1BQUk7WUFDSEksUUFBUSxFQUFDLFNBQVM7WUFDbEJDLFFBQVEsRUFBQyxTQUFTO1lBQ2xCSixDQUFDLEVBQUMsOHRCQUE4dEI7Ozs7O2dCQUNodUI7Ozs7O1lBQ0UsQ0FDUDtDQUNGO0FBRU0sU0FBU0ssWUFBWSxDQUFDVixLQUFLLEVBQUU7SUFDbEMscUJBQ0UsOERBQUNDLEtBQUc7UUFBQ0MsT0FBTyxFQUFDLFdBQVc7UUFBRSxHQUFHRixLQUFLO2tCQUNoQyw0RUFBQ0ksTUFBSTtZQUFDQyxDQUFDLEVBQUMsaWJBQWliOzs7OztnQkFBRzs7Ozs7WUFDeGIsQ0FDUDtDQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL3NyYy9jb21wb25lbnRzL1NvY2lhbEljb25zLmpzeD80NWVmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBUd2l0dGVySWNvbihwcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxzdmcgdmlld0JveD1cIjAgMCAyNCAyNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHsuLi5wcm9wc30+XG4gICAgICA8cGF0aCBkPVwiTTIwLjA1NSA3Ljk4M2MuMDExLjE3NC4wMTEuMzQ3LjAxMS41MjMgMCA1LjMzOC0zLjkyIDExLjQ5NC0xMS4wOSAxMS40OTR2LS4wMDNBMTAuNzU1IDEwLjc1NSAwIDAgMSAzIDE4LjE4NmMuMzA4LjAzOC42MTguMDU3LjkyOC4wNThhNy42NTUgNy42NTUgMCAwIDAgNC44NDEtMS43MzNjLTEuNjY4LS4wMzItMy4xMy0xLjE2LTMuNjQyLTIuODA1YTMuNzUzIDMuNzUzIDAgMCAwIDEuNzYtLjA3QzUuMDcgMTMuMjU2IDMuNzYgMTEuNiAzLjc2IDkuNjc2di0uMDVhMy43NyAzLjc3IDAgMCAwIDEuNzcuNTA1QzMuODE2IDguOTQ1IDMuMjg4IDYuNTgzIDQuMzIyIDQuNzM3YzEuOTggMi41MjQgNC45IDQuMDU4IDguMDM0IDQuMjJhNC4xMzcgNC4xMzcgMCAwIDEgMS4xMjgtMy44NkEzLjgwNyAzLjgwNyAwIDAgMSAxOSA1LjI3NGE3LjY1NyA3LjY1NyAwIDAgMCAyLjQ3NS0uOThjLS4yOS45MzQtLjkgMS43MjktMS43MTMgMi4yMzNBNy41NCA3LjU0IDAgMCAwIDIyIDUuODlhOC4wODQgOC4wODQgMCAwIDEtMS45NDUgMi4wOTNaXCIgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gSW5zdGFncmFtSWNvbihwcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxzdmcgdmlld0JveD1cIjAgMCAyNCAyNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHsuLi5wcm9wc30+XG4gICAgICA8cGF0aCBkPVwiTTEyIDNjLTIuNDQ0IDAtMi43NS4wMS0zLjcxLjA1NC0uOTU5LjA0NC0xLjYxMy4xOTYtMi4xODUuNDE4QTQuNDEyIDQuNDEyIDAgMCAwIDQuNTEgNC41MTFjLS41LjUtLjgwOSAxLjAwMi0xLjAzOSAxLjU5NC0uMjIyLjU3Mi0uMzc0IDEuMjI2LS40MTggMi4xODRDMy4wMSA5LjI1IDMgOS41NTYgMyAxMnMuMDEgMi43NS4wNTQgMy43MWMuMDQ0Ljk1OS4xOTYgMS42MTMuNDE4IDIuMTg1LjIzLjU5Mi41MzggMS4wOTQgMS4wMzkgMS41OTUuNS41IDEuMDAyLjgwOCAxLjU5NCAxLjAzOC41NzIuMjIyIDEuMjI2LjM3NCAyLjE4NC40MThDOS4yNSAyMC45OSA5LjU1NiAyMSAxMiAyMXMyLjc1LS4wMSAzLjcxLS4wNTRjLjk1OS0uMDQ0IDEuNjEzLS4xOTYgMi4xODUtLjQxOWE0LjQxMiA0LjQxMiAwIDAgMCAxLjU5NS0xLjAzOGMuNS0uNS44MDgtMS4wMDIgMS4wMzgtMS41OTQuMjIyLS41NzIuMzc0LTEuMjI2LjQxOC0yLjE4NC4wNDQtLjk2LjA1NC0xLjI2Ny4wNTQtMy43MTFzLS4wMS0yLjc1LS4wNTQtMy43MWMtLjA0NC0uOTU5LS4xOTYtMS42MTMtLjQxOS0yLjE4NUE0LjQxMiA0LjQxMiAwIDAgMCAxOS40OSA0LjUxYy0uNS0uNS0xLjAwMi0uODA5LTEuNTk0LTEuMDM5LS41NzItLjIyMi0xLjIyNi0uMzc0LTIuMTg0LS40MThDMTQuNzUgMy4wMSAxNC40NDQgMyAxMiAzWm0wIDEuNjIyYzIuNDAzIDAgMi42ODguMDA5IDMuNjM3LjA1Mi44NzcuMDQgMS4zNTQuMTg3IDEuNjcuMzEuNDIxLjE2My43Mi4zNTggMS4wMzYuNjczLjMxNS4zMTUuNTEuNjE1LjY3MyAxLjAzNS4xMjMuMzE3LjI3Ljc5NC4zMSAxLjY3MS4wNDMuOTUuMDUyIDEuMjM0LjA1MiAzLjYzN3MtLjAwOSAyLjY4OC0uMDUyIDMuNjM3Yy0uMDQuODc3LS4xODcgMS4zNTQtLjMxIDEuNjctLjE2My40MjEtLjM1OC43Mi0uNjczIDEuMDM2YTIuNzkgMi43OSAwIDAgMS0xLjAzNS42NzNjLS4zMTcuMTIzLS43OTQuMjctMS42NzEuMzEtLjk1LjA0My0xLjIzNC4wNTItMy42MzcuMDUycy0yLjY4OC0uMDA5LTMuNjM3LS4wNTJjLS44NzctLjA0LTEuMzU0LS4xODctMS42Ny0uMzFhMi43ODkgMi43ODkgMCAwIDEtMS4wMzYtLjY3MyAyLjc5IDIuNzkgMCAwIDEtLjY3My0xLjAzNWMtLjEyMy0uMzE3LS4yNy0uNzk0LS4zMS0xLjY3MS0uMDQzLS45NS0uMDUyLTEuMjM0LS4wNTItMy42MzdzLjAwOS0yLjY4OC4wNTItMy42MzdjLjA0LS44NzcuMTg3LTEuMzU0LjMxLTEuNjcuMTYzLS40MjEuMzU4LS43Mi42NzMtMS4wMzYuMzE1LS4zMTUuNjE1LS41MSAxLjAzNS0uNjczLjMxNy0uMTIzLjc5NC0uMjcgMS42NzEtLjMxLjk1LS4wNDMgMS4yMzQtLjA1MiAzLjYzNy0uMDUyWlwiIC8+XG4gICAgICA8cGF0aCBkPVwiTTEyIDE1YTMgMyAwIDEgMSAwLTYgMyAzIDAgMCAxIDAgNlptMC03LjYyMmE0LjYyMiA0LjYyMiAwIDEgMCAwIDkuMjQ0IDQuNjIyIDQuNjIyIDAgMCAwIDAtOS4yNDRabTUuODg0LS4xODJhMS4wOCAxLjA4IDAgMSAxLTIuMTYgMCAxLjA4IDEuMDggMCAwIDEgMi4xNiAwWlwiIC8+XG4gICAgPC9zdmc+XG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEdpdEh1Ykljb24ocHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiB7Li4ucHJvcHN9PlxuICAgICAgPHBhdGhcbiAgICAgICAgZmlsbFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgY2xpcFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgZD1cIk0xMiAyQzYuNDc1IDIgMiA2LjU4OCAyIDEyLjI1M2MwIDQuNTM3IDIuODYyIDguMzY5IDYuODM4IDkuNzI3LjUuMDkuNjg3LS4yMTguNjg3LS40ODcgMC0uMjQzLS4wMTMtMS4wNS0uMDEzLTEuOTFDNyAyMC4wNTkgNi4zNSAxOC45NTcgNi4xNSAxOC4zOGMtLjExMy0uMjk1LS42LTEuMjA1LTEuMDI1LTEuNDQ4LS4zNS0uMTkyLS44NS0uNjY3LS4wMTMtLjY4Ljc4OC0uMDEyIDEuMzUuNzQ0IDEuNTM4IDEuMDUxLjkgMS41NTEgMi4zMzggMS4xMTYgMi45MTIuODQ2LjA4OC0uNjY2LjM1LTEuMTE1LjYzOC0xLjM3MS0yLjIyNS0uMjU2LTQuNTUtMS4xNC00LjU1LTUuMDYyIDAtMS4xMTUuMzg3LTIuMDM4IDEuMDI1LTIuNzU2LS4xLS4yNTYtLjQ1LTEuMzA3LjEtMi43MTcgMCAwIC44MzctLjI2OSAyLjc1IDEuMDUxLjgtLjIzIDEuNjUtLjM0NiAyLjUtLjM0Ni44NSAwIDEuNy4xMTUgMi41LjM0NiAxLjkxMi0xLjMzMyAyLjc1LTEuMDUgMi43NS0xLjA1LjU1IDEuNDA5LjIgMi40Ni4xIDIuNzE2LjYzNy43MTggMS4wMjUgMS42MjggMS4wMjUgMi43NTYgMCAzLjkzNC0yLjMzNyA0LjgwNi00LjU2MiA1LjA2Mi4zNjIuMzIuNjc1LjkzNi42NzUgMS44OTcgMCAxLjM3MS0uMDEzIDIuNDczLS4wMTMgMi44MiAwIC4yNjguMTg4LjU4OS42ODguNDg2YTEwLjAzOSAxMC4wMzkgMCAwIDAgNC45MzItMy43NEExMC40NDcgMTAuNDQ3IDAgMCAwIDIyIDEyLjI1M0MyMiA2LjU4OCAxNy41MjUgMiAxMiAyWlwiXG4gICAgICAvPlxuICAgIDwvc3ZnPlxuICApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBMaW5rZWRJbkljb24ocHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB7Li4ucHJvcHN9PlxuICAgICAgPHBhdGggZD1cIk0xOC4zMzUgMTguMzM5SDE1LjY3di00LjE3N2MwLS45OTYtLjAyLTIuMjc4LTEuMzktMi4yNzgtMS4zODkgMC0xLjYwMSAxLjA4NC0xLjYwMSAyLjIwNXY0LjI1aC0yLjY2NlY5Ljc1aDIuNTZ2MS4xN2guMDM1Yy4zNTgtLjY3NCAxLjIyOC0xLjM4NyAyLjUyOC0xLjM4NyAyLjcgMCAzLjIgMS43NzggMy4yIDQuMDkxdjQuNzE1ek03LjAwMyA4LjU3NWExLjU0NiAxLjU0NiAwIDAxLTEuNTQ4LTEuNTQ5IDEuNTQ4IDEuNTQ4IDAgMTExLjU0NyAxLjU0OXptMS4zMzYgOS43NjRINS42NjZWOS43NUg4LjM0djguNTg5ek0xOS42NyAzSDQuMzI5QzMuNTkzIDMgMyAzLjU4IDMgNC4yOTd2MTUuNDA2QzMgMjAuNDIgMy41OTQgMjEgNC4zMjggMjFoMTUuMzM4QzIwLjQgMjEgMjEgMjAuNDIgMjEgMTkuNzAzVjQuMjk3QzIxIDMuNTggMjAuNCAzIDE5LjY2NiAzaC4wMDN6XCIgLz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIlR3aXR0ZXJJY29uIiwicHJvcHMiLCJzdmciLCJ2aWV3Qm94IiwiYXJpYS1oaWRkZW4iLCJwYXRoIiwiZCIsIkluc3RhZ3JhbUljb24iLCJHaXRIdWJJY29uIiwiZmlsbFJ1bGUiLCJjbGlwUnVsZSIsIkxpbmtlZEluSWNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/SocialIcons.jsx\n");

/***/ }),

/***/ "./src/lib/formatDate.js":
/*!*******************************!*\
  !*** ./src/lib/formatDate.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formatDate\": () => (/* binding */ formatDate)\n/* harmony export */ });\nfunction formatDate(dateString) {\n    return new Date(`${dateString}T00:00:00Z`).toLocaleDateString(\"en-US\", {\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\",\n        timeZone: \"UTC\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2Zvcm1hdERhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFVBQVUsQ0FBQ0MsVUFBVSxFQUFFO0lBQ3JDLE9BQU8sSUFBSUMsSUFBSSxDQUFDLENBQUMsRUFBRUQsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUNFLGtCQUFrQixDQUFDLE9BQU8sRUFBRTtRQUNyRUMsR0FBRyxFQUFFLFNBQVM7UUFDZEMsS0FBSyxFQUFFLE1BQU07UUFDYkMsSUFBSSxFQUFFLFNBQVM7UUFDZkMsUUFBUSxFQUFFLEtBQUs7S0FDaEIsQ0FBQztDQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL3NyYy9saWIvZm9ybWF0RGF0ZS5qcz81OTFiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlKGRhdGVTdHJpbmcpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKGAke2RhdGVTdHJpbmd9VDAwOjAwOjAwWmApLnRvTG9jYWxlRGF0ZVN0cmluZygnZW4tVVMnLCB7XG4gICAgZGF5OiAnbnVtZXJpYycsXG4gICAgbW9udGg6ICdsb25nJyxcbiAgICB5ZWFyOiAnbnVtZXJpYycsXG4gICAgdGltZVpvbmU6ICdVVEMnLFxuICB9KVxufVxuIl0sIm5hbWVzIjpbImZvcm1hdERhdGUiLCJkYXRlU3RyaW5nIiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsImRheSIsIm1vbnRoIiwieWVhciIsInRpbWVab25lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/formatDate.js\n");

/***/ }),

/***/ "./src/lib/generateRssFeed.js":
/*!************************************!*\
  !*** ./src/lib/generateRssFeed.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateRssFeed\": () => (/* binding */ generateRssFeed)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/server */ \"react-dom/server\");\n/* harmony import */ var react_dom_server__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom_server__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var feed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! feed */ \"feed\");\n/* harmony import */ var feed__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(feed__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _getAllArticles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getAllArticles */ \"./src/lib/getAllArticles.js\");\n\n\n\n\n\nasync function generateRssFeed() {\n    let articles = await (0,_getAllArticles__WEBPACK_IMPORTED_MODULE_4__.getAllArticles)();\n    let siteUrl = \"https://danielvanc.com\";\n    let author = {\n        name: \"Daniel Van Cuylenburg\",\n        email: \"email@danielvanc.com\"\n    };\n    let feed = new feed__WEBPACK_IMPORTED_MODULE_2__.Feed({\n        title: author.name,\n        description: \"Your blog description\",\n        author,\n        id: siteUrl,\n        link: siteUrl,\n        image: `${siteUrl}/favicon.png`,\n        favicon: `${siteUrl}/favicon.png`,\n        copyright: `All rights reserved ${new Date().getFullYear()}`,\n        feedLinks: {\n            rss2: `${siteUrl}/rss/feed.xml`,\n            json: `${siteUrl}/rss/feed.json`\n        }\n    });\n    for (let article of articles){\n        let url = `${siteUrl}/articles/${article.slug}`;\n        let html = react_dom_server__WEBPACK_IMPORTED_MODULE_1___default().renderToStaticMarkup(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(article.component, {\n            isRssFeed: true\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/lib/generateRssFeed.js\",\n            lineNumber: 33,\n            columnNumber: 7\n        }, this));\n        feed.addItem({\n            title: article.title,\n            id: url,\n            link: url,\n            description: article.description,\n            content: html,\n            author: [\n                author\n            ],\n            contributor: [\n                author\n            ],\n            date: new Date(article.date)\n        });\n    }\n    await (0,fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir)(\"./public/rss\", {\n        recursive: true\n    });\n    await Promise.all([\n        (0,fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile)(\"./public/rss/feed.xml\", feed.rss2(), \"utf8\"),\n        (0,fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile)(\"./public/rss/feed.json\", feed.json1(), \"utf8\"), \n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2dlbmVyYXRlUnNzRmVlZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFBNkM7QUFDbEI7QUFDbUI7QUFFRztBQUUxQyxlQUFlSyxlQUFlLEdBQUc7SUFDdEMsSUFBSUMsUUFBUSxHQUFHLE1BQU1GLCtEQUFjLEVBQUU7SUFDckMsSUFBSUcsT0FBTyxHQUFHQyx3QkFBZ0M7SUFDOUMsSUFBSUcsTUFBTSxHQUFHO1FBQ1hDLElBQUksRUFBRSx1QkFBdUI7UUFDN0JDLEtBQUssRUFBRSxzQkFBc0I7S0FDOUI7SUFFRCxJQUFJQyxJQUFJLEdBQUcsSUFBSWIsc0NBQUksQ0FBQztRQUNsQmMsS0FBSyxFQUFFSixNQUFNLENBQUNDLElBQUk7UUFDbEJJLFdBQVcsRUFBRSx1QkFBdUI7UUFDcENMLE1BQU07UUFDTk0sRUFBRSxFQUFFVixPQUFPO1FBQ1hXLElBQUksRUFBRVgsT0FBTztRQUNiWSxLQUFLLEVBQUUsQ0FBQyxFQUFFWixPQUFPLENBQUMsWUFBWSxDQUFDO1FBQy9CYSxPQUFPLEVBQUUsQ0FBQyxFQUFFYixPQUFPLENBQUMsWUFBWSxDQUFDO1FBQ2pDYyxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxJQUFJQyxJQUFJLEVBQUUsQ0FBQ0MsV0FBVyxFQUFFLENBQUMsQ0FBQztRQUM1REMsU0FBUyxFQUFFO1lBQ1RDLElBQUksRUFBRSxDQUFDLEVBQUVsQixPQUFPLENBQUMsYUFBYSxDQUFDO1lBQy9CbUIsSUFBSSxFQUFFLENBQUMsRUFBRW5CLE9BQU8sQ0FBQyxjQUFjLENBQUM7U0FDakM7S0FDRixDQUFDO0lBRUYsS0FBSyxJQUFJb0IsT0FBTyxJQUFJckIsUUFBUSxDQUFFO1FBQzVCLElBQUlzQixHQUFHLEdBQUcsQ0FBQyxFQUFFckIsT0FBTyxDQUFDLFVBQVUsRUFBRW9CLE9BQU8sQ0FBQ0UsSUFBSSxDQUFDLENBQUM7UUFDL0MsSUFBSUMsSUFBSSxHQUFHOUIsNEVBQW1DLGVBQzVDLDhEQUFDMkIsT0FBTyxDQUFDSyxTQUFTO1lBQUNDLFNBQVM7Ozs7O2dCQUFHLENBQ2hDO1FBRURuQixJQUFJLENBQUNvQixPQUFPLENBQUM7WUFDWG5CLEtBQUssRUFBRVksT0FBTyxDQUFDWixLQUFLO1lBQ3BCRSxFQUFFLEVBQUVXLEdBQUc7WUFDUFYsSUFBSSxFQUFFVSxHQUFHO1lBQ1RaLFdBQVcsRUFBRVcsT0FBTyxDQUFDWCxXQUFXO1lBQ2hDbUIsT0FBTyxFQUFFTCxJQUFJO1lBQ2JuQixNQUFNLEVBQUU7Z0JBQUNBLE1BQU07YUFBQztZQUNoQnlCLFdBQVcsRUFBRTtnQkFBQ3pCLE1BQU07YUFBQztZQUNyQjBCLElBQUksRUFBRSxJQUFJZixJQUFJLENBQUNLLE9BQU8sQ0FBQ1UsSUFBSSxDQUFDO1NBQzdCLENBQUM7S0FDSDtJQUVELE1BQU1uQyxrREFBSyxDQUFDLGNBQWMsRUFBRTtRQUFFb0MsU0FBUyxFQUFFLElBQUk7S0FBRSxDQUFDO0lBQ2hELE1BQU1DLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO1FBQ2hCckMsc0RBQVMsQ0FBQyx1QkFBdUIsRUFBRVcsSUFBSSxDQUFDVyxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQUM7UUFDdkR0QixzREFBUyxDQUFDLHdCQUF3QixFQUFFVyxJQUFJLENBQUMyQixLQUFLLEVBQUUsRUFBRSxNQUFNLENBQUM7S0FDMUQsQ0FBQztDQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL3NyYy9saWIvZ2VuZXJhdGVSc3NGZWVkLmpzP2M0ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0RE9NU2VydmVyIGZyb20gJ3JlYWN0LWRvbS9zZXJ2ZXInXG5pbXBvcnQgeyBGZWVkIH0gZnJvbSAnZmVlZCdcbmltcG9ydCB7IG1rZGlyLCB3cml0ZUZpbGUgfSBmcm9tICdmcy9wcm9taXNlcydcblxuaW1wb3J0IHsgZ2V0QWxsQXJ0aWNsZXMgfSBmcm9tICcuL2dldEFsbEFydGljbGVzJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVSc3NGZWVkKCkge1xuICBsZXQgYXJ0aWNsZXMgPSBhd2FpdCBnZXRBbGxBcnRpY2xlcygpXG4gIGxldCBzaXRlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0lURV9VUkxcbiAgbGV0IGF1dGhvciA9IHtcbiAgICBuYW1lOiAnRGFuaWVsIFZhbiBDdXlsZW5idXJnJyxcbiAgICBlbWFpbDogJ2VtYWlsQGRhbmllbHZhbmMuY29tJyxcbiAgfVxuXG4gIGxldCBmZWVkID0gbmV3IEZlZWQoe1xuICAgIHRpdGxlOiBhdXRob3IubmFtZSxcbiAgICBkZXNjcmlwdGlvbjogJ1lvdXIgYmxvZyBkZXNjcmlwdGlvbicsXG4gICAgYXV0aG9yLFxuICAgIGlkOiBzaXRlVXJsLFxuICAgIGxpbms6IHNpdGVVcmwsXG4gICAgaW1hZ2U6IGAke3NpdGVVcmx9L2Zhdmljb24ucG5nYCxcbiAgICBmYXZpY29uOiBgJHtzaXRlVXJsfS9mYXZpY29uLnBuZ2AsXG4gICAgY29weXJpZ2h0OiBgQWxsIHJpZ2h0cyByZXNlcnZlZCAke25ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKX1gLFxuICAgIGZlZWRMaW5rczoge1xuICAgICAgcnNzMjogYCR7c2l0ZVVybH0vcnNzL2ZlZWQueG1sYCxcbiAgICAgIGpzb246IGAke3NpdGVVcmx9L3Jzcy9mZWVkLmpzb25gLFxuICAgIH0sXG4gIH0pXG5cbiAgZm9yIChsZXQgYXJ0aWNsZSBvZiBhcnRpY2xlcykge1xuICAgIGxldCB1cmwgPSBgJHtzaXRlVXJsfS9hcnRpY2xlcy8ke2FydGljbGUuc2x1Z31gXG4gICAgbGV0IGh0bWwgPSBSZWFjdERPTVNlcnZlci5yZW5kZXJUb1N0YXRpY01hcmt1cChcbiAgICAgIDxhcnRpY2xlLmNvbXBvbmVudCBpc1Jzc0ZlZWQgLz5cbiAgICApXG5cbiAgICBmZWVkLmFkZEl0ZW0oe1xuICAgICAgdGl0bGU6IGFydGljbGUudGl0bGUsXG4gICAgICBpZDogdXJsLFxuICAgICAgbGluazogdXJsLFxuICAgICAgZGVzY3JpcHRpb246IGFydGljbGUuZGVzY3JpcHRpb24sXG4gICAgICBjb250ZW50OiBodG1sLFxuICAgICAgYXV0aG9yOiBbYXV0aG9yXSxcbiAgICAgIGNvbnRyaWJ1dG9yOiBbYXV0aG9yXSxcbiAgICAgIGRhdGU6IG5ldyBEYXRlKGFydGljbGUuZGF0ZSksXG4gICAgfSlcbiAgfVxuXG4gIGF3YWl0IG1rZGlyKCcuL3B1YmxpYy9yc3MnLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KVxuICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgd3JpdGVGaWxlKCcuL3B1YmxpYy9yc3MvZmVlZC54bWwnLCBmZWVkLnJzczIoKSwgJ3V0ZjgnKSxcbiAgICB3cml0ZUZpbGUoJy4vcHVibGljL3Jzcy9mZWVkLmpzb24nLCBmZWVkLmpzb24xKCksICd1dGY4JyksXG4gIF0pXG59XG4iXSwibmFtZXMiOlsiUmVhY3RET01TZXJ2ZXIiLCJGZWVkIiwibWtkaXIiLCJ3cml0ZUZpbGUiLCJnZXRBbGxBcnRpY2xlcyIsImdlbmVyYXRlUnNzRmVlZCIsImFydGljbGVzIiwic2l0ZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TSVRFX1VSTCIsImF1dGhvciIsIm5hbWUiLCJlbWFpbCIsImZlZWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiaWQiLCJsaW5rIiwiaW1hZ2UiLCJmYXZpY29uIiwiY29weXJpZ2h0IiwiRGF0ZSIsImdldEZ1bGxZZWFyIiwiZmVlZExpbmtzIiwicnNzMiIsImpzb24iLCJhcnRpY2xlIiwidXJsIiwic2x1ZyIsImh0bWwiLCJyZW5kZXJUb1N0YXRpY01hcmt1cCIsImNvbXBvbmVudCIsImlzUnNzRmVlZCIsImFkZEl0ZW0iLCJjb250ZW50IiwiY29udHJpYnV0b3IiLCJkYXRlIiwicmVjdXJzaXZlIiwiUHJvbWlzZSIsImFsbCIsImpzb24xIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/generateRssFeed.js\n");

/***/ }),

/***/ "./src/lib/getAllArticles.js":
/*!***********************************!*\
  !*** ./src/lib/getAllArticles.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllArticles\": () => (/* binding */ getAllArticles)\n/* harmony export */ });\n/* harmony import */ var fast_glob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fast-glob */ \"fast-glob\");\n/* harmony import */ var fast_glob__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fast_glob__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function importArticle(articleFilename) {\n    let { meta , default: component  } = await __webpack_require__(\"./src/pages/notes lazy recursive ^\\\\.\\\\/.*$\")(`./${articleFilename}`);\n    return {\n        slug: articleFilename.replace(/(\\/index)?\\.mdx$/, \"\"),\n        ...meta,\n        component\n    };\n}\nasync function getAllArticles() {\n    let articleFilenames = await fast_glob__WEBPACK_IMPORTED_MODULE_0___default()([\n        \"*.mdx\",\n        \"*/index.mdx\"\n    ], {\n        cwd: path__WEBPACK_IMPORTED_MODULE_1__.join(process.cwd(), \"src/pages/notes\")\n    });\n    let articles = await Promise.all(articleFilenames.map(importArticle));\n    return articles.sort((a, z)=>new Date(z.date) - new Date(a.date));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2dldEFsbEFydGljbGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRCO0FBQ0E7QUFFNUIsZUFBZUUsYUFBYSxDQUFDQyxlQUFlLEVBQUU7SUFDNUMsSUFBSSxFQUFFQyxJQUFJLEdBQUVDLE9BQU8sRUFBRUMsU0FBUyxHQUFFLEdBQUcsTUFBTSxtRUFDdkMsR0FBZ0IsRUFBRUgsZUFBZSxDQUFDLENBQUMsQ0FDcEM7SUFDRCxPQUFPO1FBQ0xJLElBQUksRUFBRUosZUFBZSxDQUFDSyxPQUFPLHFCQUFxQixFQUFFLENBQUM7UUFDckQsR0FBR0osSUFBSTtRQUNQRSxTQUFTO0tBQ1Y7Q0FDRjtBQUVNLGVBQWVHLGNBQWMsR0FBRztJQUNyQyxJQUFJQyxnQkFBZ0IsR0FBRyxNQUFNVixnREFBSSxDQUFDO1FBQUMsT0FBTztRQUFFLGFBQWE7S0FBQyxFQUFFO1FBQzFEVyxHQUFHLEVBQUVWLHNDQUFTLENBQUNZLE9BQU8sQ0FBQ0YsR0FBRyxFQUFFLEVBQUUsaUJBQWlCLENBQUM7S0FDakQsQ0FBQztJQUVGLElBQUlHLFFBQVEsR0FBRyxNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ04sZ0JBQWdCLENBQUNPLEdBQUcsQ0FBQ2YsYUFBYSxDQUFDLENBQUM7SUFFckUsT0FBT1ksUUFBUSxDQUFDSSxJQUFJLENBQUMsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEdBQUssSUFBSUMsSUFBSSxDQUFDRCxDQUFDLENBQUNFLElBQUksQ0FBQyxHQUFHLElBQUlELElBQUksQ0FBQ0YsQ0FBQyxDQUFDRyxJQUFJLENBQUMsQ0FBQztDQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9zcmMvbGliL2dldEFsbEFydGljbGVzLmpzP2ZjNzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdsb2IgZnJvbSAnZmFzdC1nbG9iJ1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJ1xuXG5hc3luYyBmdW5jdGlvbiBpbXBvcnRBcnRpY2xlKGFydGljbGVGaWxlbmFtZSkge1xuICBsZXQgeyBtZXRhLCBkZWZhdWx0OiBjb21wb25lbnQgfSA9IGF3YWl0IGltcG9ydChcbiAgICBgLi4vcGFnZXMvbm90ZXMvJHthcnRpY2xlRmlsZW5hbWV9YFxuICApXG4gIHJldHVybiB7XG4gICAgc2x1ZzogYXJ0aWNsZUZpbGVuYW1lLnJlcGxhY2UoLyhcXC9pbmRleCk/XFwubWR4JC8sICcnKSxcbiAgICAuLi5tZXRhLFxuICAgIGNvbXBvbmVudCxcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsQXJ0aWNsZXMoKSB7XG4gIGxldCBhcnRpY2xlRmlsZW5hbWVzID0gYXdhaXQgZ2xvYihbJyoubWR4JywgJyovaW5kZXgubWR4J10sIHtcbiAgICBjd2Q6IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnc3JjL3BhZ2VzL25vdGVzJyksXG4gIH0pXG5cbiAgbGV0IGFydGljbGVzID0gYXdhaXQgUHJvbWlzZS5hbGwoYXJ0aWNsZUZpbGVuYW1lcy5tYXAoaW1wb3J0QXJ0aWNsZSkpXG5cbiAgcmV0dXJuIGFydGljbGVzLnNvcnQoKGEsIHopID0+IG5ldyBEYXRlKHouZGF0ZSkgLSBuZXcgRGF0ZShhLmRhdGUpKVxufVxuIl0sIm5hbWVzIjpbImdsb2IiLCJwYXRoIiwiaW1wb3J0QXJ0aWNsZSIsImFydGljbGVGaWxlbmFtZSIsIm1ldGEiLCJkZWZhdWx0IiwiY29tcG9uZW50Iiwic2x1ZyIsInJlcGxhY2UiLCJnZXRBbGxBcnRpY2xlcyIsImFydGljbGVGaWxlbmFtZXMiLCJjd2QiLCJqb2luIiwicHJvY2VzcyIsImFydGljbGVzIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsInNvcnQiLCJhIiwieiIsIkRhdGUiLCJkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/getAllArticles.js\n");

/***/ }),

/***/ "./src/pages/index.jsx":
/*!*****************************!*\
  !*** ./src/pages/index.jsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home),\n/* harmony export */   \"getStaticProps\": () => (/* binding */ getStaticProps)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_future_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/future/image */ \"./node_modules/next/future/image.js\");\n/* harmony import */ var next_future_image__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_future_image__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! clsx */ \"clsx\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(clsx__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/Button */ \"./src/components/Button.jsx\");\n/* harmony import */ var _components_Card__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/Card */ \"./src/components/Card.jsx\");\n/* harmony import */ var _components_Container__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/Container */ \"./src/components/Container.jsx\");\n/* harmony import */ var _components_SocialIcons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/SocialIcons */ \"./src/components/SocialIcons.jsx\");\n/* harmony import */ var _images_photos_image_1_jpg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/images/photos/image-1.jpg */ \"./src/images/photos/image-1.jpg\");\n/* harmony import */ var _images_photos_image_2_jpg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/images/photos/image-2.jpg */ \"./src/images/photos/image-2.jpg\");\n/* harmony import */ var _images_photos_image_3_jpg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/images/photos/image-3.jpg */ \"./src/images/photos/image-3.jpg\");\n/* harmony import */ var _images_photos_image_4_jpg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/images/photos/image-4.jpg */ \"./src/images/photos/image-4.jpg\");\n/* harmony import */ var _images_photos_image_5_png__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/images/photos/image-5.png */ \"./src/images/photos/image-5.png\");\n/* harmony import */ var _images_logos_logoAmigo_jpeg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/images/logos/logoAmigo.jpeg */ \"./src/images/logos/logoAmigo.jpeg\");\n/* harmony import */ var _images_logos_logoW365_jpeg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/images/logos/logoW365.jpeg */ \"./src/images/logos/logoW365.jpeg\");\n/* harmony import */ var _images_logos_logoInTouch_jpeg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @/images/logos/logoInTouch.jpeg */ \"./src/images/logos/logoInTouch.jpeg\");\n/* harmony import */ var _images_logos_logoApacio_jpeg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @/images/logos/logoApacio.jpeg */ \"./src/images/logos/logoApacio.jpeg\");\n/* harmony import */ var _images_logos_logoBoxStuff_jpeg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @/images/logos/logoBoxStuff.jpeg */ \"./src/images/logos/logoBoxStuff.jpeg\");\n/* harmony import */ var _images_logos_logoEMF_jpeg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @/images/logos/logoEMF.jpeg */ \"./src/images/logos/logoEMF.jpeg\");\n/* harmony import */ var _images_logos_logoOC_jpeg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @/images/logos/logoOC.jpeg */ \"./src/images/logos/logoOC.jpeg\");\n/* harmony import */ var _lib_generateRssFeed__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @/lib/generateRssFeed */ \"./src/lib/generateRssFeed.js\");\n/* harmony import */ var _lib_getAllArticles__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @/lib/getAllArticles */ \"./src/lib/getAllArticles.js\");\n/* harmony import */ var _lib_formatDate__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @/lib/formatDate */ \"./src/lib/formatDate.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction BriefcaseIcon(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        strokeWidth: \"1.5\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        \"aria-hidden\": \"true\",\n        ...props,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M2.75 9.75a3 3 0 0 1 3-3h12.5a3 3 0 0 1 3 3v8.5a3 3 0 0 1-3 3H5.75a3 3 0 0 1-3-3v-8.5Z\",\n                className: \"fill-zinc-100 stroke-zinc-400 dark:fill-zinc-100/10 dark:stroke-zinc-500\"\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M3 14.25h6.249c.484 0 .952-.002 1.316.319l.777.682a.996.996 0 0 0 1.316 0l.777-.682c.364-.32.832-.319 1.316-.319H21M8.75 6.5V4.75a2 2 0 0 1 2-2h2.5a2 2 0 0 1 2 2V6.5\",\n                className: \"stroke-zinc-400 dark:stroke-zinc-500\"\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 46,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n        lineNumber: 33,\n        columnNumber: 5\n    }, this);\n}\nfunction ArrowDownIcon(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 16 16\",\n        fill: \"none\",\n        \"aria-hidden\": \"true\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            d: \"M4.75 8.75 8 12.25m0 0 3.25-3.5M8 12.25v-8.5\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n            lineNumber: 57,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n        lineNumber: 56,\n        columnNumber: 5\n    }, this);\n}\nfunction Article({ article  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Card__WEBPACK_IMPORTED_MODULE_6__.Card, {\n        as: \"article\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Card__WEBPACK_IMPORTED_MODULE_6__.Card.Title, {\n                href: `/notes/${article.slug}`,\n                children: article.title\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 70,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Card__WEBPACK_IMPORTED_MODULE_6__.Card.Eyebrow, {\n                as: \"time\",\n                dateTime: article.date,\n                decorate: true,\n                children: (0,_lib_formatDate__WEBPACK_IMPORTED_MODULE_23__.formatDate)(article.date)\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 71,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Card__WEBPACK_IMPORTED_MODULE_6__.Card.Description, {\n                children: article.description\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 74,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Card__WEBPACK_IMPORTED_MODULE_6__.Card.Cta, {\n                children: \"Continue reading\"\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 75,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n        lineNumber: 69,\n        columnNumber: 5\n    }, this);\n}\nfunction SocialLink({ icon: Icon , ...props }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n        className: \"group -m-1 p-1\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Icon, {\n            className: \"h-6 w-6 fill-zinc-500 transition group-hover:fill-zinc-600 dark:fill-zinc-400 dark:group-hover:fill-zinc-300\"\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n            lineNumber: 83,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n        lineNumber: 82,\n        columnNumber: 5\n    }, this);\n}\nfunction Resume() {\n    let resume = [\n        {\n            company: \"Amigo Partnership\",\n            title: \"Senior Front-end Developer\",\n            logo: _images_logos_logoAmigo_jpeg__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n            start: \"2021\",\n            end: {\n                label: \"Present\",\n                dateTime: new Date().getFullYear()\n            }\n        },\n        {\n            company: \"Apacio\",\n            title: \"Senior Front-end Developer\",\n            logo: _images_logos_logoApacio_jpeg__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n            start: \"2020\",\n            end: \"2021\"\n        },\n        {\n            company: \"Ellen MacArthur Foundation\",\n            title: \"Front-end Developer & Designer\",\n            logo: _images_logos_logoEMF_jpeg__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n            start: \"2015\",\n            end: \"2020\"\n        },\n        {\n            company: \"Box Stuff\",\n            title: \"Web Designer & Developer\",\n            logo: _images_logos_logoBoxStuff_jpeg__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n            start: \"2014\",\n            end: \"2015\"\n        },\n        {\n            company: \"OC Sport\",\n            title: \"Web Designer & Developer\",\n            logo: _images_logos_logoOC_jpeg__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n            start: \"2007\",\n            end: \"2013\"\n        },\n        {\n            company: \"Wight365\",\n            title: \"Web Developer\",\n            logo: _images_logos_logoW365_jpeg__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n            start: \"2006\",\n            end: \"2007\"\n        },\n        {\n            company: \"InTouch\",\n            title: \"Web Developer (apprentice)\",\n            logo: _images_logos_logoInTouch_jpeg__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n            start: \"2000\",\n            end: \"2004\"\n        }, \n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"rounded-2xl border border-zinc-100 p-6 dark:border-zinc-700/40\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"flex text-sm font-semibold text-zinc-900 dark:text-zinc-100\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(BriefcaseIcon, {\n                        className: \"h-6 w-6 flex-none\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                        lineNumber: 147,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-3\",\n                        children: \"Work\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                        lineNumber: 148,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 146,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ol\", {\n                className: \"mt-6 space-y-4\",\n                children: resume.map((role, roleIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        className: \"flex gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"relative mt-1 flex h-10 w-10 flex-none items-center justify-center rounded-full shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_future_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                                    src: role.logo,\n                                    alt: \"\",\n                                    className: \"h-7 w-7 rounded-full\",\n                                    unoptimized: true\n                                }, void 0, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 154,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                lineNumber: 153,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dl\", {\n                                className: \"flex flex-auto flex-wrap gap-x-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                                        className: \"sr-only\",\n                                        children: \"Company\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                        lineNumber: 162,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                                        className: \"w-full flex-none text-sm font-medium text-zinc-900 dark:text-zinc-100\",\n                                        children: role.company\n                                    }, void 0, false, {\n                                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                        lineNumber: 163,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                                        className: \"sr-only\",\n                                        children: \"Role\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                        lineNumber: 166,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                                        className: \"text-xs text-zinc-500 dark:text-zinc-400\",\n                                        children: role.title\n                                    }, void 0, false, {\n                                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                        lineNumber: 167,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dt\", {\n                                        className: \"sr-only\",\n                                        children: \"Date\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                        lineNumber: 170,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dd\", {\n                                        className: \"ml-auto text-xs text-zinc-400 dark:text-zinc-500\",\n                                        \"aria-label\": `${role.start.label ?? role.start} until ${role.end.label ?? role.end}`,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"time\", {\n                                                dateTime: role.start.dateTime ?? role.start,\n                                                children: role.start.label ?? role.start\n                                            }, void 0, false, {\n                                                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                                lineNumber: 177,\n                                                columnNumber: 17\n                                            }, this),\n                                            \" \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                \"aria-hidden\": \"true\",\n                                                children: \"—\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                                lineNumber: 180,\n                                                columnNumber: 17\n                                            }, this),\n                                            \" \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"time\", {\n                                                dateTime: role.end.dateTime ?? role.end,\n                                                children: role.end.label ?? role.end\n                                            }, void 0, false, {\n                                                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                                lineNumber: 181,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                        lineNumber: 171,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                lineNumber: 161,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, roleIndex, true, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                        lineNumber: 152,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 150,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n        lineNumber: 145,\n        columnNumber: 5\n    }, this);\n}\nfunction Photos() {\n    let rotations = [\n        \"rotate-2\",\n        \"-rotate-2\",\n        \"rotate-2\",\n        \"rotate-2\",\n        \"-rotate-2\"\n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mt-16 sm:mt-20\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"-my-4 flex justify-center gap-5 overflow-hidden py-4 sm:gap-8\",\n            children: [\n                _images_photos_image_1_jpg__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n                _images_photos_image_2_jpg__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n                _images_photos_image_3_jpg__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n                _images_photos_image_4_jpg__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n                _images_photos_image_5_png__WEBPACK_IMPORTED_MODULE_13__[\"default\"]\n            ].map((image, imageIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: clsx__WEBPACK_IMPORTED_MODULE_4___default()(\"relative aspect-[9/10] w-44 flex-none overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 sm:w-72 sm:rounded-2xl\", rotations[imageIndex % rotations.length]),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_future_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        src: image,\n                        alt: \"\",\n                        sizes: \"(min-width: 640px) 18rem, 11rem\",\n                        className: \"absolute inset-0 h-full w-full object-cover\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                        lineNumber: 211,\n                        columnNumber: 13\n                    }, this)\n                }, image.src, false, {\n                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                    lineNumber: 204,\n                    columnNumber: 11\n                }, this))\n        }, void 0, false, {\n            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n            lineNumber: 202,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n        lineNumber: 201,\n        columnNumber: 5\n    }, this);\n}\nfunction Home({ articles  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Daniel Van Cuylenburg - Remix, NextJS and Tailwind CSS specialist\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                        lineNumber: 228,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"I’m Daniel\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                        lineNumber: 231,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 227,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Container__WEBPACK_IMPORTED_MODULE_7__.Container, {\n                className: \"mt-9\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-2xl\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl\",\n                            children: \"Remix, NextJS and Tailwind CSS specialist.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                            lineNumber: 235,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"mt-6 text-base text-zinc-600 dark:text-zinc-400 [&_a]:font-bold [&_a]:text-pink-500 [&_a:hover]:text-pink-400\",\n                            children: [\n                                \"I'm Daniel, a remote working, Front-end Web Developer on the sunny Isle of Wight, U.K. \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 240,\n                                    columnNumber: 39\n                                }, this),\n                                \"I work for\",\n                                \" \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: \"https://www.amigopartnership.com/\",\n                                    children: \"Amigo Partnership\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 241,\n                                    columnNumber: 13\n                                }, this),\n                                \", a London based creative agency, as a Senior Front-end Dev.\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                            lineNumber: 238,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-6 flex gap-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SocialLink, {\n                                    href: \"https://twitter.com/danielvanc\",\n                                    \"aria-label\": \"Follow on Twitter\",\n                                    icon: _components_SocialIcons__WEBPACK_IMPORTED_MODULE_8__.TwitterIcon\n                                }, void 0, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 245,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SocialLink, {\n                                    href: \"https://instagram.com/danielvanc\",\n                                    \"aria-label\": \"Follow on Instagram\",\n                                    icon: _components_SocialIcons__WEBPACK_IMPORTED_MODULE_8__.InstagramIcon\n                                }, void 0, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 250,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SocialLink, {\n                                    href: \"https://github.com/danielvanc\",\n                                    \"aria-label\": \"Follow on GitHub\",\n                                    icon: _components_SocialIcons__WEBPACK_IMPORTED_MODULE_8__.GitHubIcon\n                                }, void 0, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 255,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SocialLink, {\n                                    href: \"https://linkedin.com/in/danielvanc\",\n                                    \"aria-label\": \"Follow on LinkedIn\",\n                                    icon: _components_SocialIcons__WEBPACK_IMPORTED_MODULE_8__.LinkedInIcon\n                                }, void 0, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 260,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                            lineNumber: 244,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                    lineNumber: 234,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 233,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Photos, {}, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 268,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Container__WEBPACK_IMPORTED_MODULE_7__.Container, {\n                className: \"mt-24 md:mt-28\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mx-auto grid max-w-xl grid-cols-1 gap-y-20 lg:max-w-none lg:grid-cols-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex flex-col gap-16\",\n                            children: articles.map((article)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Article, {\n                                    article: article\n                                }, article.slug, false, {\n                                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                    lineNumber: 273,\n                                    columnNumber: 15\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                            lineNumber: 271,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-10 lg:pl-16 xl:pl-24\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Resume, {}, void 0, false, {\n                                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                                lineNumber: 277,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                            lineNumber: 276,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                    lineNumber: 270,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/dan/dev/danielvanc.com/src/pages/index.jsx\",\n                lineNumber: 269,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n};\nasync function getStaticProps() {\n    if (false) {}\n    return {\n        props: {\n            articles: (await (0,_lib_getAllArticles__WEBPACK_IMPORTED_MODULE_22__.getAllArticles)()).slice(0, 3).map(({ component , ...meta })=>meta)\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/index.jsx\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === \"object\" && err !== null && \"name\" in err && \"message\" in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === \"undefined\") {\n            return new Error(\"An undefined error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n        if (err === null) {\n            return new Error(\"A null error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + \"\");\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLG9FQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsSUFBc0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcz8xNzhlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNFcnJvcjtcbmV4cG9ydHMuZ2V0UHJvcGVyRXJyb3IgPSBnZXRQcm9wZXJFcnJvcjtcbnZhciBfaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL2lzLXBsYWluLW9iamVjdFwiKTtcbmZ1bmN0aW9uIGlzRXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlcnIgPT09IFwib2JqZWN0XCIgJiYgZXJyICE9PSBudWxsICYmIFwibmFtZVwiIGluIGVyciAmJiBcIm1lc3NhZ2VcIiBpbiBlcnI7XG59XG5mdW5jdGlvbiBnZXRQcm9wZXJFcnJvcihlcnIpIHtcbiAgICBpZiAoaXNFcnJvcihlcnIpKSB7XG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgfVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XG4gICAgICAgIC8vIHByb3ZpZGUgYmV0dGVyIGVycm9yIGZvciBjYXNlIHdoZXJlIGB0aHJvdyB1bmRlZmluZWRgXG4gICAgICAgIC8vIGlzIGNhbGxlZCBpbiBkZXZlbG9wbWVudFxuICAgICAgICBpZiAodHlwZW9mIGVyciA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkFuIHVuZGVmaW5lZCBlcnJvciB3YXMgdGhyb3duLCBcIiArIFwic2VlIGhlcmUgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvdGhyZXctdW5kZWZpbmVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnIgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJBIG51bGwgZXJyb3Igd2FzIHRocm93biwgXCIgKyBcInNlZSBoZXJlIGZvciBtb3JlIGluZm86IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3RocmV3LXVuZGVmaW5lZFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IEVycm9yKCgwLCBfaXNQbGFpbk9iamVjdCkuaXNQbGFpbk9iamVjdChlcnIpID8gSlNPTi5zdHJpbmdpZnkoZXJyKSA6IGVyciArIFwiXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy1lcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/future/image.js":
/*!*******************************************!*\
  !*** ./node_modules/next/future/image.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ../dist/client/future/image */ \"./node_modules/next/dist/client/future/image.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9mdXR1cmUvaW1hZ2UuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsMEhBQXVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Z1dHVyZS9pbWFnZS5qcz9jMDRkIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vZGlzdC9jbGllbnQvZnV0dXJlL2ltYWdlJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/future/image.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzPzc1YjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2xpbmsnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "./src/pages/notes lazy recursive ^\\.\\/.*$":
/*!*********************************************************!*\
  !*** ./src/pages/notes/ lazy ^\.\/.*$ namespace object ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./": [
		"./src/pages/notes/index.jsx",
		"src_pages_notes_index_jsx"
	],
	"./index": [
		"./src/pages/notes/index.jsx",
		"src_pages_notes_index_jsx"
	],
	"./index.jsx": [
		"./src/pages/notes/index.jsx",
		"src_pages_notes_index_jsx"
	],
	"./life-on-lockdown/1.png": [
		"./src/pages/notes/life-on-lockdown/1.png",
		"src_pages_notes_life-on-lockdown_1_png"
	],
	"./life-on-lockdown/2.png": [
		"./src/pages/notes/life-on-lockdown/2.png",
		"src_pages_notes_life-on-lockdown_2_png"
	],
	"./life-on-lockdown/3.png": [
		"./src/pages/notes/life-on-lockdown/3.png",
		"src_pages_notes_life-on-lockdown_3_png"
	],
	"./life-on-lockdown/index.mdx": [
		"./src/pages/notes/life-on-lockdown/index.mdx",
		"src_pages_notes_life-on-lockdown_index_mdx"
	],
	"./reflecting-on-a-year-of-living-in-different-times/1.png": [
		"./src/pages/notes/reflecting-on-a-year-of-living-in-different-times/1.png",
		"src_pages_notes_reflecting-on-a-year-of-living-in-different-times_1_png"
	],
	"./reflecting-on-a-year-of-living-in-different-times/index.mdx": [
		"./src/pages/notes/reflecting-on-a-year-of-living-in-different-times/index.mdx",
		"src_pages_notes_reflecting-on-a-year-of-living-in-different-times_index_mdx"
	],
	"./remote-work-life-my-journey-so-far-part-1/1.png": [
		"./src/pages/notes/remote-work-life-my-journey-so-far-part-1/1.png",
		"src_pages_notes_remote-work-life-my-journey-so-far-part-1_1_png"
	],
	"./remote-work-life-my-journey-so-far-part-1/index.mdx": [
		"./src/pages/notes/remote-work-life-my-journey-so-far-part-1/index.mdx",
		"src_pages_notes_remote-work-life-my-journey-so-far-part-1_index_mdx"
	],
	"./some-of-the-things-i-love-about-sanity-io/1.png": [
		"./src/pages/notes/some-of-the-things-i-love-about-sanity-io/1.png",
		"src_pages_notes_some-of-the-things-i-love-about-sanity-io_1_png"
	],
	"./some-of-the-things-i-love-about-sanity-io/2.png": [
		"./src/pages/notes/some-of-the-things-i-love-about-sanity-io/2.png",
		"src_pages_notes_some-of-the-things-i-love-about-sanity-io_2_png"
	],
	"./some-of-the-things-i-love-about-sanity-io/index.mdx": [
		"./src/pages/notes/some-of-the-things-i-love-about-sanity-io/index.mdx",
		"src_pages_notes_some-of-the-things-i-love-about-sanity-io_index_mdx"
	],
	"./some-of-the-things-i-love-about-sanity-io/sanity.png": [
		"./src/pages/notes/some-of-the-things-i-love-about-sanity-io/sanity.png",
		"src_pages_notes_some-of-the-things-i-love-about-sanity-io_sanity_png"
	],
	"./the-evolving-web-and-traditionalism/1.png": [
		"./src/pages/notes/the-evolving-web-and-traditionalism/1.png",
		"src_pages_notes_the-evolving-web-and-traditionalism_1_png"
	],
	"./the-evolving-web-and-traditionalism/index.mdx": [
		"./src/pages/notes/the-evolving-web-and-traditionalism/index.mdx",
		"src_pages_notes_the-evolving-web-and-traditionalism_index_mdx"
	],
	"./turning-40-leaving-the-office-behind/1.png": [
		"./src/pages/notes/turning-40-leaving-the-office-behind/1.png",
		"src_pages_notes_turning-40-leaving-the-office-behind_1_png"
	],
	"./turning-40-leaving-the-office-behind/index.mdx": [
		"./src/pages/notes/turning-40-leaving-the-office-behind/index.mdx",
		"src_pages_notes_turning-40-leaving-the-office-behind_index_mdx"
	]
};
function webpackAsyncContext(req) {
	if(!__webpack_require__.o(map, req)) {
		return Promise.resolve().then(() => {
			var e = new Error("Cannot find module '" + req + "'");
			e.code = 'MODULE_NOT_FOUND';
			throw e;
		});
	}

	var ids = map[req], id = ids[0];
	return __webpack_require__.e(ids[1]).then(() => {
		return __webpack_require__(id);
	});
}
webpackAsyncContext.keys = () => (Object.keys(map));
webpackAsyncContext.id = "./src/pages/notes lazy recursive ^\\.\\/.*$";
module.exports = webpackAsyncContext;

/***/ }),

/***/ "clsx":
/*!***********************!*\
  !*** external "clsx" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("clsx");

/***/ }),

/***/ "fast-glob":
/*!****************************!*\
  !*** external "fast-glob" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("fast-glob");

/***/ }),

/***/ "feed":
/*!***********************!*\
  !*** external "feed" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("feed");

/***/ }),

/***/ "next/dist/compiled/react-is":
/*!**********************************************!*\
  !*** external "next/dist/compiled/react-is" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react-is");

/***/ }),

/***/ "../shared/lib/app-router-context":
/*!*************************************************************!*\
  !*** external "next/dist/shared/lib/app-router-context.js" ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/app-router-context.js");

/***/ }),

/***/ "../shared/lib/head-manager-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/head-manager-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ "../shared/lib/head":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/head.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../../shared/lib/image-config-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/image-config-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config-context.js");

/***/ }),

/***/ "../../shared/lib/image-config":
/*!*******************************************************!*\
  !*** external "next/dist/shared/lib/image-config.js" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config.js");

/***/ }),

/***/ "../shared/lib/is-plain-object":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/is-plain-object.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ "../../shared/lib/match-remote-pattern":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/match-remote-pattern.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/match-remote-pattern.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../page-path/denormalize-page-path":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/page-path/denormalize-page-path.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/page-path/denormalize-page-path.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "../shared/lib/router/utils/add-path-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/add-path-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/add-path-prefix.js");

/***/ }),

/***/ "./utils/compare-states":
/*!**********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/compare-states.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/compare-states.js");

/***/ }),

/***/ "./utils/format-next-pathname-info":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-next-pathname-info.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-next-pathname-info.js");

/***/ }),

/***/ "./utils/format-url":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-url.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-next-pathname-info":
/*!******************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-next-pathname-info.js" ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-next-pathname-info.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "../shared/lib/router/utils/parse-path":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-path.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-path.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/path-has-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/path-has-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/path-has-prefix.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "../shared/lib/router/utils/remove-trailing-slash":
/*!*****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/remove-trailing-slash.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/remove-trailing-slash.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "../../shared/lib/utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom/server":
/*!***********************************!*\
  !*** external "react-dom/server" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom/server");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/index.jsx"));
module.exports = __webpack_exports__;

})();